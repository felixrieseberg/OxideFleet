{"version":3,"sources":["vendor/ember-cli/app-prefix.js","oxide/adapters/application.js","oxide/adapters/device.js","oxide/adapters/user.js","oxide/app.js","oxide/authenticators/nitrogen.js","oxide/components/cc-spinner.js","oxide/components/lf-outlet.js","oxide/components/lf-overlay.js","oxide/components/liquid-child.js","oxide/components/liquid-container.js","oxide/components/liquid-if.js","oxide/components/liquid-measured.js","oxide/components/liquid-modal.js","oxide/components/liquid-outlet.js","oxide/components/liquid-spacer.js","oxide/components/liquid-versions.js","oxide/components/liquid-with.js","oxide/components/lm-container.js","oxide/components/materialize-button-submit.js","oxide/components/materialize-button.js","oxide/components/materialize-card-action.js","oxide/components/materialize-card-content.js","oxide/components/materialize-card-panel.js","oxide/components/materialize-card-reveal.js","oxide/components/materialize-card.js","oxide/components/materialize-collapsible-card.js","oxide/components/materialize-collapsible.js","oxide/components/materialize-input.js","oxide/components/materialize-navbar.js","oxide/components/ox-map.js","oxide/controllers/application.js","oxide/controllers/dashboard.js","oxide/controllers/login.js","oxide/controllers/nitrogen.js","oxide/controllers/settings.js","oxide/helpers/lf-yield-inverse.js","oxide/helpers/liquid-bind.js","oxide/helpers/liquid-if.js","oxide/helpers/liquid-outlet.js","oxide/helpers/liquid-unless.js","oxide/helpers/liquid-with.js","oxide/helpers/pretty-date.js","oxide/helpers/round-number.js","oxide/helpers/time-length.js","oxide/initializers/app-version.js","oxide/initializers/export-application-global.js","oxide/initializers/link-view.js","oxide/initializers/liquid-fire.js","oxide/initializers/nitrogen.js","oxide/initializers/simple-auth.js","oxide/models/device.js","oxide/models/driver.js","oxide/models/event.js","oxide/models/location.js","oxide/models/trip.js","oxide/models/user.js","oxide/models/vehicle.js","oxide/router.js","oxide/routes/application.js","oxide/routes/dashboard.js","oxide/routes/login.js","oxide/serializers/application.js","oxide/serializers/device.js","oxide/serializers/user.js","oxide/services/liquid-fire-modals.js","oxide/services/liquid-fire-transitions.js","oxide/templates/-car-list-item.js","oxide/templates/-car-selected-card.js","oxide/templates/-menu.js","oxide/templates/-navbar.js","oxide/templates/-sidebar.js","oxide/templates/application.js","oxide/templates/components/cc-spinner.js","oxide/templates/components/liquid-bind.js","oxide/templates/components/liquid-container.js","oxide/templates/components/liquid-if.js","oxide/templates/components/liquid-measured.js","oxide/templates/components/liquid-modal.js","oxide/templates/components/liquid-outlet.js","oxide/templates/components/liquid-spacer.js","oxide/templates/components/liquid-versions.js","oxide/templates/components/liquid-with.js","oxide/templates/components/ox-map.js","oxide/templates/components/ox-tagger.js","oxide/templates/dashboard.js","oxide/templates/login.js","oxide/templates/settings.js","oxide/tests/adapters/application.jshint.js","oxide/tests/adapters/device.jshint.js","oxide/tests/adapters/user.jshint.js","oxide/tests/app.jshint.js","oxide/tests/authenticators/nitrogen.jshint.js","oxide/tests/components/cc-spinner.jshint.js","oxide/tests/components/ox-map.jshint.js","oxide/tests/controllers/application.jshint.js","oxide/tests/controllers/dashboard.jshint.js","oxide/tests/controllers/login.jshint.js","oxide/tests/controllers/nitrogen.jshint.js","oxide/tests/controllers/settings.jshint.js","oxide/tests/helpers/ajax-mock.js","oxide/tests/helpers/ajax-mock.jshint.js","oxide/tests/helpers/pretty-date.jshint.js","oxide/tests/helpers/resolver.js","oxide/tests/helpers/resolver.jshint.js","oxide/tests/helpers/round-number.jshint.js","oxide/tests/helpers/start-app.js","oxide/tests/helpers/start-app.jshint.js","oxide/tests/helpers/time-length.jshint.js","oxide/tests/initializers/nitrogen.jshint.js","oxide/tests/models/device.jshint.js","oxide/tests/models/driver.jshint.js","oxide/tests/models/event.jshint.js","oxide/tests/models/location.jshint.js","oxide/tests/models/trip.jshint.js","oxide/tests/models/user.jshint.js","oxide/tests/models/vehicle.jshint.js","oxide/tests/router.jshint.js","oxide/tests/routes/application.jshint.js","oxide/tests/routes/dashboard.jshint.js","oxide/tests/routes/login.jshint.js","oxide/tests/serializers/application.jshint.js","oxide/tests/serializers/device.jshint.js","oxide/tests/serializers/user.jshint.js","oxide/tests/test-helper.js","oxide/tests/test-helper.jshint.js","oxide/tests/transforms/array.jshint.js","oxide/tests/transitions.jshint.js","oxide/tests/unit/adapters/device-test.js","oxide/tests/unit/adapters/device-test.jshint.js","oxide/tests/unit/adapters/user-test.js","oxide/tests/unit/adapters/user-test.jshint.js","oxide/tests/unit/components/cc-spinner-test.js","oxide/tests/unit/components/cc-spinner-test.jshint.js","oxide/tests/unit/controller/dashboard-test.js","oxide/tests/unit/controller/dashboard-test.jshint.js","oxide/tests/unit/controller/login-test.js","oxide/tests/unit/controller/login-test.jshint.js","oxide/tests/unit/helpers/time-length-test.js","oxide/tests/unit/helpers/time-length-test.jshint.js","oxide/tests/unit/models/driver-test.js","oxide/tests/unit/models/driver-test.jshint.js","oxide/tests/unit/models/event-test.js","oxide/tests/unit/models/event-test.jshint.js","oxide/tests/unit/models/location-test.js","oxide/tests/unit/models/location-test.jshint.js","oxide/tests/unit/models/vehicle-test.js","oxide/tests/unit/models/vehicle-test.jshint.js","oxide/tests/unit/views/application-test.js","oxide/tests/unit/views/application-test.jshint.js","oxide/tests/utils/mobile.jshint.js","oxide/tests/utils/nitrogen-ember-utils.jshint.js","oxide/tests/views/application.jshint.js","oxide/tests/views/settings.jshint.js","oxide/transforms/array.js","oxide/transitions.js","oxide/transitions/cross-fade.js","oxide/transitions/default.js","oxide/transitions/explode.js","oxide/transitions/fade.js","oxide/transitions/flex-grow.js","oxide/transitions/fly-to.js","oxide/transitions/move-over.js","oxide/transitions/scale.js","oxide/transitions/scroll-then.js","oxide/transitions/to-down.js","oxide/transitions/to-left.js","oxide/transitions/to-right.js","oxide/transitions/to-up.js","oxide/utils/mobile.js","oxide/utils/nitrogen-ember-utils.js","oxide/views/application.js","oxide/views/settings.js","vendor/ember-cli/app-suffix.js","vendor/ember-cli/app-boot.js"],"sourcesContent":["/* jshint ignore:start */\n\n/* jshint ignore:end */\n","define('oxide/adapters/application', ['exports', 'ember-json-api/json-api-adapter', 'oxide/config/environment'], function (exports, JsonApiAdapter, config) {\n\n    'use strict';\n\n    exports['default'] = JsonApiAdapter['default'].extend({\n        host: config['default'].APP.API_HOST\n    });\n\n});","define('oxide/adapters/device', ['exports', 'ember-data'], function (exports, DS) {\n\n    'use strict';\n\n    exports['default'] = DS['default'].LSAdapter.extend({\n        namespace: \"ConnectedCar\"\n    });\n\n});","define('oxide/adapters/user', ['exports', 'ember-data'], function (exports, DS) {\n\n    'use strict';\n\n    exports['default'] = DS['default'].LSAdapter.extend({\n        namespace: \"ConnectedCar\"\n    });\n\n});","define('oxide/app', ['exports', 'ember', 'ember/resolver', 'ember/load-initializers', 'oxide/config/environment'], function (exports, Ember, Resolver, loadInitializers, config) {\n\n  'use strict';\n\n  Ember['default'].MODEL_FACTORY_INJECTIONS = true;\n\n  var App = Ember['default'].Application.extend({\n    modulePrefix: config['default'].modulePrefix,\n    podModulePrefix: config['default'].podModulePrefix,\n    Resolver: Resolver['default']\n  });\n  loadInitializers['default'](App, config['default'].modulePrefix);\n\n  exports['default'] = App;\n\n});","define('oxide/authenticators/nitrogen', ['exports', 'ember', 'simple-auth/authenticators/base', 'oxide/config/environment', 'oxide/utils/nitrogen-ember-utils'], function (exports, Ember, Base, Config, nitrogenEmberUtils) {\n\n    'use strict';\n\n    var nitrogenService = null;\n\n    exports['default'] = Base['default'].extend({\n        init: function init() {\n            nitrogenService = new nitrogen.Service(Config['default'].APP.nitrogen);\n        },\n\n        /**\n        Restores the session from a set of session properties.\n        @method restore\n        @param {Object} data The data to restore the session from\n        @return {Ember.RSVP.Promise} A promise that when it resolves results in the session being authenticated\n        */\n        restore: function restore(data) {\n            var self = this;\n\n            return new Ember['default'].RSVP.Promise(function (resolve, reject) {\n                var appController = self.container.lookup(\"controller:application\"),\n                    session = appController.get(\"nitrogenSession\"),\n                    _nitrogenService = appController.get(\"nitrogenService\"),\n                    principal;\n\n                // Let's take a look at our session here - if it looks like it's still good,\n                // we can return right away\n                if (session && session.principal && session.accessToken && _nitrogenService) {\n                    return resolve({\n                        user: session.principal,\n                        accessToken: session.accessToken\n                    });\n                }\n\n                principal = new nitrogen.User({\n                    accessToken: {\n                        token: data.accessToken.token\n                    },\n                    id: data.user.id,\n                    nickname: data.user.nickname\n                });\n\n                nitrogenService.resume(principal, function (err, session, principal) {\n                    var store;\n\n                    if (err) {\n                        return reject(err);\n                    }\n\n                    store = self.container.lookup(\"store:main\");\n\n                    nitrogenEmberUtils['default'].findOrCreateUser(store, session, principal).then(function (storedUser) {\n                        return nitrogenEmberUtils['default'].updateOrCreateDevices(store, session, storedUser);\n                    }).then(function () {\n                        console.log(\"Authenticator: Resolving Login (Restore)\", session);\n                        appController = self.container.lookup(\"controller:application\");\n                        appController.set(\"nitrogenSession\", session);\n                        appController.set(\"nitrogenService\", nitrogenService);\n                        resolve({ user: principal, accessToken: session.accessToken });\n                    });\n                });\n            });\n        },\n\n        /**\n        Authenticates the session with the specified `credentials`.\n        @method authenticate\n        @param {Object} credentials The credentials to authenticate the session with\n        @return {Ember.RSVP.Promise} A promise that resolves when an access token is successfully acquired from the server and rejects otherwise\n        */\n        authenticate: function authenticate(credentials) {\n            var self = this;\n            return new Ember['default'].RSVP.Promise(function (resolve, reject) {\n                var user = new nitrogen.User({\n                    nickname: \"current\",\n                    email: $.trim(credentials.identification),\n                    password: credentials.password\n                });\n\n                Ember['default'].run(function () {\n                    nitrogenService.authenticate(user, function (err, session, principal) {\n                        var store;\n\n                        if (err) {\n                            return reject(JSON.parse(err));\n                        }\n                        store = self.container.lookup(\"store:main\");\n\n                        nitrogenEmberUtils['default'].findOrCreateUser(store, session, principal).then(function (storedUser) {\n                            return nitrogenEmberUtils['default'].updateOrCreateDevices(store, session, storedUser);\n                        }).then(function () {\n                            var appController = self.container.lookup(\"controller:application\");\n\n                            console.log(\"Authenticator: Resolving Login (Authenticate)\", session);\n                            appController.set(\"nitrogenSession\", session);\n                            appController.set(\"nitrogenService\", nitrogenService);\n                            resolve({ user: principal, accessToken: session.accessToken });\n                        });\n                    });\n                });\n            });\n        },\n\n        /**\n        Cancels any outstanding automatic token refreshes and returns a resolving promise.\n        @method invalidate\n        @param {Object} data The data of the session to be invalidated\n        @return {Ember.RSVP.Promise} A resolving promise\n        */\n        invalidate: function invalidate() {\n            return new Ember['default'].RSVP.Promise(function (resolve) {\n                console.log(\"Nitrogen authenticator invalidate.\");\n                nitrogenService = null;\n                resolve({ user: null, accessToken: null });\n            });\n        }\n    });\n\n});","define('oxide/components/cc-spinner', ['exports', 'ember'], function (exports, Ember) {\n\n\t'use strict';\n\n\texports['default'] = Ember['default'].Component.extend({});\n\n});","define('oxide/components/lf-outlet', ['exports', 'liquid-fire/ember-internals'], function (exports, ember_internals) {\n\n\t'use strict';\n\n\texports['default'] = ember_internals.StaticOutlet;\n\n});","define('oxide/components/lf-overlay', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  var COUNTER = \"__lf-modal-open-counter\";\n\n  exports['default'] = Ember['default'].Component.extend({\n    tagName: \"span\",\n    classNames: [\"lf-overlay\"],\n\n    didInsertElement: function didInsertElement() {\n      var body = Ember['default'].$(\"body\");\n      var counter = body.data(COUNTER) || 0;\n      body.addClass(\"lf-modal-open\");\n      body.data(COUNTER, counter + 1);\n    },\n\n    willDestroy: function willDestroy() {\n      var body = Ember['default'].$(\"body\");\n      var counter = body.data(COUNTER) || 0;\n      body.data(COUNTER, counter - 1);\n      if (counter < 2) {\n        body.removeClass(\"lf-modal-open\");\n      }\n    }\n  });\n\n});","define('oxide/components/liquid-child', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Component.extend({\n    classNames: [\"liquid-child\"],\n    attributeBindings: [\"style\"],\n    style: Ember['default'].computed(\"visible\", function () {\n      return new Ember['default'].Handlebars.SafeString(this.get(\"visible\") ? \"\" : \"visibility:hidden\");\n    }),\n    tellContainerWeRendered: Ember['default'].on(\"didInsertElement\", function () {\n      this.sendAction(\"didRender\", this);\n    })\n  });\n\n});","define('oxide/components/liquid-container', ['exports', 'ember', 'liquid-fire/growable', 'oxide/components/liquid-measured'], function (exports, Ember, Growable, liquid_measured) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Component.extend(Growable['default'], {\n    classNames: [\"liquid-container\"],\n    classNameBindings: [\"liquidAnimating\"],\n\n    lockSize: function lockSize(elt, want) {\n      elt.outerWidth(want.width);\n      elt.outerHeight(want.height);\n    },\n\n    unlockSize: function unlockSize() {\n      var _this = this;\n\n      var doUnlock = function () {\n        if (!_this.isDestroyed) {\n          _this.set(\"liquidAnimating\", false);\n        }\n        var elt = _this.$();\n        if (elt) {\n          elt.css({ width: \"\", height: \"\" });\n        }\n      };\n      if (this._scaling) {\n        this._scaling.then(doUnlock);\n      } else {\n        doUnlock();\n      }\n    },\n\n    startMonitoringSize: Ember['default'].on(\"didInsertElement\", function () {\n      this._wasInserted = true;\n    }),\n\n    actions: {\n\n      willTransition: function willTransition(versions) {\n        if (!this._wasInserted) {\n          return;\n        }\n\n        // Remember our own size before anything changes\n        var elt = this.$();\n        this._cachedSize = liquid_measured.measure(elt);\n\n        // And make any children absolutely positioned with fixed sizes.\n        for (var i = 0; i < versions.length; i++) {\n          goAbsolute(versions[i]);\n        }\n\n        // Apply '.liquid-animating' to liquid-container allowing\n        // any customizable CSS control while an animating is occuring\n        this.set(\"liquidAnimating\", true);\n      },\n\n      afterChildInsertion: function afterChildInsertion(versions) {\n        var elt = this.$();\n\n        // Measure  children\n        var sizes = [];\n        for (var i = 0; i < versions.length; i++) {\n          if (versions[i].view) {\n            sizes[i] = liquid_measured.measure(versions[i].view.$());\n          }\n        }\n\n        // Measure ourself again to see how big the new children make\n        // us.\n        var want = liquid_measured.measure(elt);\n        var have = this._cachedSize || want;\n\n        // Make ourself absolute\n        this.lockSize(elt, have);\n\n        // Make the children absolute and fixed size.\n        for (i = 0; i < versions.length; i++) {\n          goAbsolute(versions[i], sizes[i]);\n        }\n\n        // Kick off our growth animation\n        this._scaling = this.animateGrowth(elt, have, want);\n      },\n\n      afterTransition: function afterTransition(versions) {\n        for (var i = 0; i < versions.length; i++) {\n          goStatic(versions[i]);\n        }\n        this.unlockSize();\n      }\n    }\n  });\n\n  function goAbsolute(version, size) {\n    if (!version.view) {\n      return;\n    }\n    var elt = version.view.$();\n    var pos = elt.position();\n    if (!size) {\n      size = liquid_measured.measure(elt);\n    }\n    elt.outerWidth(size.width);\n    elt.outerHeight(size.height);\n    elt.css({\n      position: \"absolute\",\n      top: pos.top,\n      left: pos.left\n    });\n  }\n\n  function goStatic(version) {\n    if (version.view) {\n      version.view.$().css({ width: \"\", height: \"\", position: \"\" });\n    }\n  }\n\n});","define('oxide/components/liquid-if', ['exports', 'ember', 'liquid-fire/ember-internals'], function (exports, Ember, ember_internals) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Component.extend({\n    _yieldInverse: ember_internals.inverseYieldMethod,\n    hasInverse: Ember['default'].computed(\"inverseTemplate\", function () {\n      return !!this.get(\"inverseTemplate\");\n    })\n  });\n\n});","define('oxide/components/liquid-measured', ['exports', 'liquid-fire/mutation-observer', 'ember'], function (exports, MutationObserver, Ember) {\n\n  'use strict';\n\n  exports.measure = measure;\n\n  exports['default'] = Ember['default'].Component.extend({\n\n    didInsertElement: function didInsertElement() {\n      var self = this;\n\n      // This prevents margin collapse\n      this.$().css({\n        overflow: \"auto\"\n      });\n\n      this.didMutate();\n\n      this.observer = new MutationObserver['default'](function (mutations) {\n        self.didMutate(mutations);\n      });\n      this.observer.observe(this.get(\"element\"), {\n        attributes: true,\n        subtree: true,\n        childList: true,\n        characterData: true\n      });\n      this.$().bind(\"webkitTransitionEnd\", function () {\n        self.didMutate();\n      });\n      // Chrome Memory Leak: https://bugs.webkit.org/show_bug.cgi?id=93661\n      window.addEventListener(\"unload\", function () {\n        self.willDestroyElement();\n      });\n    },\n\n    willDestroyElement: function willDestroyElement() {\n      if (this.observer) {\n        this.observer.disconnect();\n      }\n    },\n\n    transitionMap: Ember['default'].inject.service(\"liquid-fire-transitions\"),\n\n    didMutate: function didMutate() {\n      // by incrementing the running transitions counter here we prevent\n      // tests from falling through the gap between the time they\n      // triggered mutation the time we may actually animate in\n      // response.\n      var tmap = this.get(\"transitionMap\");\n      tmap.incrementRunningTransitions();\n      Ember['default'].run.next(this, function () {\n        this._didMutate();\n        tmap.decrementRunningTransitions();\n      });\n    },\n\n    _didMutate: function _didMutate() {\n      var elt = this.$();\n      if (!elt || !elt[0]) {\n        return;\n      }\n      this.set(\"measurements\", measure(elt));\n    }\n\n  });\n  function measure($elt) {\n    var width, height;\n\n    // if jQuery sees a zero dimension, it will temporarily modify the\n    // element's css to try to make its size measurable. But that's bad\n    // for us here, because we'll get an infinite recursion of mutation\n    // events. So we trap the zero case without hitting jQuery.\n\n    if ($elt[0].offsetWidth === 0) {\n      width = 0;\n    } else {\n      width = $elt.outerWidth();\n    }\n    if ($elt[0].offsetHeight === 0) {\n      height = 0;\n    } else {\n      height = $elt.outerHeight();\n    }\n\n    return {\n      width: width,\n      height: height\n    };\n  }\n\n});","define('oxide/components/liquid-modal', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Component.extend({\n    classNames: [\"liquid-modal\"],\n    currentContext: Ember['default'].computed.oneWay(\"owner.modalContexts.lastObject\"),\n\n    owner: Ember['default'].inject.service(\"liquid-fire-modals\"),\n\n    innerView: Ember['default'].computed(\"currentContext\", function () {\n      var self = this,\n          current = this.get(\"currentContext\"),\n          name = current.get(\"name\"),\n          container = this.get(\"container\"),\n          component = container.lookup(\"component-lookup:main\").lookupFactory(name);\n      Ember['default'].assert(\"Tried to render a modal using component '\" + name + \"', but couldn't find it.\", !!component);\n\n      var args = Ember['default'].copy(current.get(\"params\"));\n\n      args.registerMyself = Ember['default'].on(\"init\", function () {\n        self.set(\"innerViewInstance\", this);\n      });\n\n      // set source so we can bind other params to it\n      args._source = Ember['default'].computed(function () {\n        return current.get(\"source\");\n      });\n\n      var otherParams = current.get(\"options.otherParams\");\n      var from, to;\n      for (from in otherParams) {\n        to = otherParams[from];\n        args[to] = Ember['default'].computed.alias(\"_source.\" + from);\n      }\n\n      var actions = current.get(\"options.actions\") || {};\n\n      // Override sendAction in the modal component so we can intercept and\n      // dynamically dispatch to the controller as expected\n      args.sendAction = function (name) {\n        var actionName = actions[name];\n        if (!actionName) {\n          this._super.apply(this, Array.prototype.slice.call(arguments));\n          return;\n        }\n\n        var controller = current.get(\"source\");\n        var args = Array.prototype.slice.call(arguments, 1);\n        args.unshift(actionName);\n        controller.send.apply(controller, args);\n      };\n\n      return component.extend(args);\n    }),\n\n    actions: {\n      outsideClick: function outsideClick() {\n        if (this.get(\"currentContext.options.dismissWithOutsideClick\")) {\n          this.send(\"dismiss\");\n        } else {\n          proxyToInnerInstance(this, \"outsideClick\");\n        }\n      },\n      escape: function escape() {\n        if (this.get(\"currentContext.options.dismissWithEscape\")) {\n          this.send(\"dismiss\");\n        } else {\n          proxyToInnerInstance(this, \"escape\");\n        }\n      },\n      dismiss: function dismiss() {\n        var source = this.get(\"currentContext.source\"),\n            proto = source.constructor.proto(),\n            params = this.get(\"currentContext.options.withParams\"),\n            clearThem = {};\n\n        for (var key in params) {\n          if (proto[key] instanceof Ember['default'].ComputedProperty) {\n            clearThem[key] = undefined;\n          } else {\n            clearThem[key] = proto[key];\n          }\n        }\n        source.setProperties(clearThem);\n      }\n    }\n  });\n\n  function proxyToInnerInstance(self, message) {\n    var vi = self.get(\"innerViewInstance\");\n    if (vi) {\n      vi.send(message);\n    }\n  }\n\n});","define('oxide/components/liquid-outlet', ['exports', 'ember', 'liquid-fire/ember-internals'], function (exports, Ember, ember_internals) {\n\n\t'use strict';\n\n\texports['default'] = Ember['default'].Component.extend(ember_internals.OutletBehavior);\n\n});","define('oxide/components/liquid-spacer', ['exports', 'oxide/components/liquid-measured', 'liquid-fire/growable', 'ember'], function (exports, liquid_measured, Growable, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Component.extend(Growable['default'], {\n    enabled: true,\n\n    didInsertElement: function didInsertElement() {\n      var child = this.$(\"> div\");\n      var measurements = this.myMeasurements(liquid_measured.measure(child));\n      this.$().css({\n        overflow: \"hidden\",\n        outerWidth: measurements.width,\n        outerHeight: measurements.height\n      });\n    },\n\n    sizeChange: Ember['default'].observer(\"measurements\", function () {\n      if (!this.get(\"enabled\")) {\n        return;\n      }\n      var elt = this.$();\n      if (!elt || !elt[0]) {\n        return;\n      }\n      var want = this.myMeasurements(this.get(\"measurements\"));\n      var have = liquid_measured.measure(this.$());\n      this.animateGrowth(elt, have, want);\n    }),\n\n    // given our child's outerWidth & outerHeight, figure out what our\n    // outerWidth & outerHeight should be.\n    myMeasurements: function myMeasurements(childMeasurements) {\n      var elt = this.$();\n      return {\n        width: childMeasurements.width + sumCSS(elt, padding(\"width\")) + sumCSS(elt, border(\"width\")),\n        height: childMeasurements.height + sumCSS(elt, padding(\"height\")) + sumCSS(elt, border(\"height\"))\n      };\n      //if (this.$().css('box-sizing') === 'border-box') {\n    }\n\n  });\n\n  function sides(dimension) {\n    return dimension === \"width\" ? [\"Left\", \"Right\"] : [\"Top\", \"Bottom\"];\n  }\n\n  function padding(dimension) {\n    var s = sides(dimension);\n    return [\"padding\" + s[0], \"padding\" + s[1]];\n  }\n\n  function border(dimension) {\n    var s = sides(dimension);\n    return [\"border\" + s[0] + \"Width\", \"border\" + s[1] + \"Width\"];\n  }\n\n  function sumCSS(elt, fields) {\n    var accum = 0;\n    for (var i = 0; i < fields.length; i++) {\n      var num = parseFloat(elt.css(fields[i]), 10);\n      if (!isNaN(num)) {\n        accum += num;\n      }\n    }\n    return accum;\n  }\n\n});","define('oxide/components/liquid-versions', ['exports', 'ember', 'liquid-fire/ember-internals'], function (exports, Ember, ember_internals) {\n\n  'use strict';\n\n  var get = Ember['default'].get;\n  var set = Ember['default'].set;\n\n  exports['default'] = Ember['default'].Component.extend({\n    tagName: \"\",\n    name: \"liquid-versions\",\n\n    transitionMap: Ember['default'].inject.service(\"liquid-fire-transitions\"),\n\n    appendVersion: Ember['default'].on(\"init\", Ember['default'].observer(\"value\", function () {\n      var versions = get(this, \"versions\");\n      var firstTime = false;\n      var newValue = get(this, \"value\");\n      var oldValue;\n\n      if (!versions) {\n        firstTime = true;\n        versions = Ember['default'].A();\n      } else {\n        oldValue = versions[0];\n      }\n\n      // TODO: may need to extend the comparison to do the same kind of\n      // key-based diffing that htmlbars is doing.\n      if (!firstTime && (!oldValue && !newValue || oldValue === newValue)) {\n        return;\n      }\n\n      this.notifyContainer(\"willTransition\", versions);\n      var newVersion = {\n        value: newValue,\n        shouldRender: newValue || get(this, \"renderWhenFalse\")\n      };\n      versions.unshiftObject(newVersion);\n\n      this.firstTime = firstTime;\n      if (firstTime) {\n        set(this, \"versions\", versions);\n      }\n\n      if (!newVersion.shouldRender && !firstTime) {\n        this._transition();\n      }\n    })),\n\n    _transition: function _transition() {\n      var _this = this;\n\n      var versions = get(this, \"versions\");\n      var transition;\n      var firstTime = this.firstTime;\n      this.firstTime = false;\n\n      this.notifyContainer(\"afterChildInsertion\", versions);\n\n      transition = get(this, \"transitionMap\").transitionFor({\n        versions: versions,\n        parentElement: Ember['default'].$(ember_internals.containingElement(this)),\n        use: get(this, \"use\"),\n        // Using strings instead of booleans here is an\n        // optimization. The constraint system can match them more\n        // efficiently, since it treats boolean constraints as generic\n        // \"match anything truthy/falsy\" predicates, whereas string\n        // checks are a direct object property lookup.\n        firstTime: firstTime ? \"yes\" : \"no\",\n        helperName: get(this, \"name\")\n      });\n\n      if (this._runningTransition) {\n        this._runningTransition.interrupt();\n      }\n      this._runningTransition = transition;\n\n      transition.run().then(function (wasInterrupted) {\n        // if we were interrupted, we don't handle the cleanup because\n        // another transition has already taken over.\n        if (!wasInterrupted) {\n          _this.finalizeVersions(versions);\n          _this.notifyContainer(\"afterTransition\", versions);\n        }\n      }, function (err) {\n        _this.finalizeVersions(versions);\n        _this.notifyContainer(\"afterTransition\", versions);\n        throw err;\n      });\n    },\n\n    finalizeVersions: function finalizeVersions(versions) {\n      versions.replace(1, versions.length - 1);\n    },\n\n    notifyContainer: function notifyContainer(method, versions) {\n      var target = get(this, \"notify\");\n      if (target) {\n        target.send(method, versions);\n      }\n    },\n\n    actions: {\n      childDidRender: function childDidRender(child) {\n        var version = get(child, \"version\");\n        set(version, \"view\", child);\n        this._transition();\n      }\n    }\n\n  });\n\n});","define('oxide/components/liquid-with', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Component.extend({\n    name: \"liquid-with\"\n  });\n\n});","define('oxide/components/lm-container', ['exports', 'ember', 'liquid-fire/tabbable'], function (exports, Ember) {\n\n  'use strict';\n\n  /*\n     Parts of this file were adapted from ic-modal\n\n     https://github.com/instructure/ic-modal\n     Released under The MIT License (MIT)\n     Copyright (c) 2014 Instructure, Inc.\n  */\n\n  var lastOpenedModal = null;\n  Ember['default'].$(document).on(\"focusin\", handleTabIntoBrowser);\n\n  function handleTabIntoBrowser() {\n    if (lastOpenedModal) {\n      lastOpenedModal.focus();\n    }\n  }\n\n  exports['default'] = Ember['default'].Component.extend({\n    classNames: [\"lm-container\"],\n    attributeBindings: [\"tabindex\"],\n    tabindex: 0,\n\n    keyUp: function keyUp(event) {\n      // Escape key\n      if (event.keyCode === 27) {\n        this.sendAction();\n      }\n    },\n\n    keyDown: function keyDown(event) {\n      // Tab key\n      if (event.keyCode === 9) {\n        this.constrainTabNavigation(event);\n      }\n    },\n\n    didInsertElement: function didInsertElement() {\n      this.focus();\n      lastOpenedModal = this;\n    },\n\n    willDestroy: function willDestroy() {\n      lastOpenedModal = null;\n    },\n\n    focus: function focus() {\n      if (this.get(\"element\").contains(document.activeElement)) {\n        // just let it be if we already contain the activeElement\n        return;\n      }\n      var target = this.$(\"[autofocus]\");\n      if (!target.length) {\n        target = this.$(\":tabbable\");\n      }\n\n      if (!target.length) {\n        target = this.$();\n      }\n\n      target[0].focus();\n    },\n\n    constrainTabNavigation: function constrainTabNavigation(event) {\n      var tabbable = this.$(\":tabbable\");\n      var finalTabbable = tabbable[event.shiftKey ? \"first\" : \"last\"]()[0];\n      var leavingFinalTabbable = finalTabbable === document.activeElement ||\n      // handle immediate shift+tab after opening with mouse\n      this.get(\"element\") === document.activeElement;\n      if (!leavingFinalTabbable) {\n        return;\n      }\n      event.preventDefault();\n      tabbable[event.shiftKey ? \"last\" : \"first\"]()[0].focus();\n    },\n\n    click: function click(event) {\n      if (event.target === this.get(\"element\")) {\n        this.sendAction(\"clickAway\");\n      }\n    }\n  });\n\n});","define('oxide/components/materialize-button-submit', ['exports', 'ember-cli-materialize/components/materialize-button-submit'], function (exports, MaterializeButtonSubmit) {\n\n\t'use strict';\n\n\texports['default'] = MaterializeButtonSubmit['default'];\n\n});","define('oxide/components/materialize-button', ['exports', 'ember-cli-materialize/components/materialize-button'], function (exports, MaterializeButton) {\n\n\t'use strict';\n\n\texports['default'] = MaterializeButton['default'];\n\n});","define('oxide/components/materialize-card-action', ['exports', 'ember-cli-materialize/components/materialize-card-action'], function (exports, MaterializeCardAction) {\n\n\t'use strict';\n\n\texports['default'] = MaterializeCardAction['default'];\n\n});","define('oxide/components/materialize-card-content', ['exports', 'ember-cli-materialize/components/materialize-card-content'], function (exports, MaterializeCardContent) {\n\n\t'use strict';\n\n\texports['default'] = MaterializeCardContent['default'];\n\n});","define('oxide/components/materialize-card-panel', ['exports', 'ember-cli-materialize/components/materialize-card-panel'], function (exports, MaterializeCardPanel) {\n\n\t'use strict';\n\n\texports['default'] = MaterializeCardPanel['default'];\n\n});","define('oxide/components/materialize-card-reveal', ['exports', 'ember-cli-materialize/components/materialize-card-reveal'], function (exports, MaterializeCardReveal) {\n\n\t'use strict';\n\n\texports['default'] = MaterializeCardReveal['default'];\n\n});","define('oxide/components/materialize-card', ['exports', 'ember-cli-materialize/components/materialize-card'], function (exports, MaterializeCard) {\n\n\t'use strict';\n\n\texports['default'] = MaterializeCard['default'];\n\n});","define('oxide/components/materialize-collapsible-card', ['exports', 'ember-cli-materialize/components/materialize-collapsible-card'], function (exports, MaterializeCollapsibleCard) {\n\n\t'use strict';\n\n\texports['default'] = MaterializeCollapsibleCard['default'];\n\n});","define('oxide/components/materialize-collapsible', ['exports', 'ember-cli-materialize/components/materialize-collapsible'], function (exports, MaterializeCollapsible) {\n\n\t'use strict';\n\n\texports['default'] = MaterializeCollapsible['default'];\n\n});","define('oxide/components/materialize-input', ['exports', 'ember-cli-materialize/components/materialize-input'], function (exports, materializeInput) {\n\n\t'use strict';\n\n\texports['default'] = materializeInput['default'];\n\n});","define('oxide/components/materialize-navbar', ['exports', 'ember-cli-materialize/components/materialize-navbar'], function (exports, MaterializeNavBar) {\n\n\t'use strict';\n\n\texports['default'] = MaterializeNavBar['default'];\n\n});","define('oxide/components/ox-map', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    /* global Microsoft */\n\n    exports['default'] = Ember['default'].Component.extend({\n        zoom: 6,\n        showDashboard: false,\n\n        /**\n         * Creates the map object and assigns a object reference to\n         * 'mapReference', if given\n         */\n        setup: (function () {\n            // Create map\n            var map = new Microsoft.Maps.Map(document.getElementById(\"map\"), {\n                center: new Microsoft.Maps.Location(47.669444, -122.123889),\n                credentials: \"Akbhia6_9IoahE9Q2TyAVORP_IHbhkxmTiy25f8WXYpnt_pzIA0AhgvyDVHKJkhi\",\n                enableSearchLogo: false,\n                zoom: this.get(\"zoom\"),\n                showDashboard: this.get(\"showDashboard\"),\n                enableHighDpi: true,\n                disableBirdseye: true,\n                enableClickableLogo: false,\n                inertiaIntensity: 0.5\n            });\n\n            // Get current location\n            if (navigator && navigator.geolocation) {\n                navigator.geolocation.getCurrentPosition(function (position) {\n                    var options = map.getOptions();\n\n                    if (options) {\n                        var lat = position.coords.latitude;\n                        var lon = position.coords.longitude;\n                        options.center = new Microsoft.Maps.Location(lat, lon);\n                    }\n\n                    map.setView(options);\n                });\n            }\n\n            this.set(\"mapReference\", map);\n        }).on(\"didInsertElement\")\n    });\n\n});","define('oxide/controllers/application', ['exports', 'ember', 'oxide/config/environment'], function (exports, Ember, Config) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Controller.extend({\n        version: Config['default'].APP.version,\n        fullConfig: Config['default'].APP\n    });\n\n});","define('oxide/controllers/dashboard', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    /* global Microsoft */\n    exports['default'] = Ember['default'].ArrayController.extend({\n        title: \"Dashboard\",\n        needs: [\"application\", \"nitrogen\"],\n        version: Ember['default'].computed.alias(\"controllers.application.version\"),\n        appController: Ember['default'].computed.alias(\"controllers.application\"),\n        nitrogenController: Ember['default'].computed.alias(\"controllers.nitrogen\"),\n        mapEntityTracker: [],\n        trackedCars: [],\n        selectedCar: null,\n        showOnlyActiveCars: true,\n        selectedTripPathEntityId: undefined,\n\n        /**\n         * Are any cars in the model?\n         * @return {boolean}\n         */\n        carsConnected: Ember['default'].computed(\"model\", function () {\n            var model = this.get(\"model\");\n\n            if (model.content.length > 0) {\n                return true;\n            } else {\n                return false;\n            }\n        }),\n\n        /**\n         * A DS.PromiseArray containing all the devices that are currently active\n         * (as determined by their vehicle)\n         * @return {DS.PromiseArray}   [Devices (Vehicles) currently active]\n         */\n        activeCars: Ember['default'].computed(function () {\n            return this.store.filter(\"device\", function (device) {\n                return device.get(\"vehicle.isActive\");\n            });\n        }),\n\n        /**\n         * Creates a path object on the map entity collection,\n         * allowing us to later just modify that path object\n         * if the user selects a trip\n         */\n        setupSelectedPath: (function () {\n            var _this = this;\n\n            Ember['default'].run.scheduleOnce(\"afterRender\", function () {\n                var map = _this.get(\"mapReference\"),\n                    pathOptions = {\n                    strokeColor: new Microsoft.Maps.Color.fromHex(\"#DE0416\"),\n                    strokeThickness: 5\n                },\n                    path = new Microsoft.Maps.Polyline([], pathOptions);\n\n                if (map) {\n                    map.entities.insert(path, 0);\n                } else {\n                    console.info(\"Bing Maps Reference not found, trip path display might malfuction\");\n                }\n            });\n        }).on(\"init\"),\n\n        /**\n         * Add all cars to the 'tracked' list on init\n         */\n        trackAllCars: (function () {\n            var _this = this;\n\n            var replaceCars = [];\n\n            this.store.find(\"device\").then(function (devices) {\n                if (devices && devices.content) {\n                    for (var i = 0; i < devices.content.length; i += 1) {\n                        var device = devices.content[i];\n                        device.set(\"trackOnMap\", true);\n                        device.save();\n                        replaceCars.push(device.get(\"nitrogen_id\"));\n                    }\n                }\n\n                _this.set(\"trackedCars\", replaceCars);\n            });\n        }).on(\"init\"),\n\n        /**\n         * Subscribe to Nitrogen on init, assign a handler for incoming socket messages\n         */\n        subscribeToNitrogen: (function () {\n            this.get(\"nitrogenController\").send(\"subscribeToNitrogen\", this, \"handleSocketMessage\");\n        }).on(\"init\"),\n\n        /**\n         * Observes `trackedCars` to sync map pushpins and tracked cars - if a car is marked as tracked,\n         * this method will schedule `addOrRemoveCars` in the Ember Run Loop, ensuring that the map only\n         * contains pushpins for cars actually tracked.\n         */\n        trackedCarsObserver: (function () {\n            var mapEntityTracker = this.get(\"mapEntityTracker\"),\n                trackedCars = this.get(\"trackedCars\"),\n                nitrogenController = this.get(\"nitrogenController\"),\n                map = this.get(\"mapReference\"),\n                self = this;\n\n            function handleFoundDevices(foundDevices) {\n                var foundDevice = undefined;\n\n                if (foundDevices && foundDevices.content && foundDevices.content.length > 0) {\n                    foundDevice = foundDevices.content[0];\n                    nitrogenController.send(\"getLastMessage\", foundDevice.get(\"nitrogen_id\"), 1, self, \"handleLastLocation\");\n                }\n            }\n\n            function addOrRemoveCars() {\n                for (var i = 0; i < mapEntityTracker.length; i += 1) {\n                    if (trackedCars.indexOf(mapEntityTracker[i].name) === -1) {\n                        // Car is on map, but not in trackedCars - remove from map\n                        map.entities.removeAt(mapEntityTracker[i].path);\n                        map.entities.removeAt(mapEntityTracker[i].pin);\n                        mapEntityTracker.splice(i, 1);\n                    }\n                }\n\n                for (var i = 0; i < trackedCars.length; i += 1) {\n                    if (!mapEntityTracker.findBy(\"name\", trackedCars[i])) {\n                        // Car is not on map, but in trackedCars - add to map\n                        self.store.find(\"device\", {\n                            nitrogen_id: trackedCars[i]\n                        }).then(handleFoundDevices);\n                    }\n                }\n            }\n\n            Ember['default'].run.scheduleOnce(\"afterRender\", addOrRemoveCars);\n        }).observes(\"trackedCars.[]\"),\n\n        actions: {\n            /**\n             * Toggles whether or not a car should be tracked on map\n             * @param  {Ember Data Record} device  - The car to be tracked\n             */\n            toggleCar: function toggleCar(device) {\n                var trackedCars = this.get(\"trackedCars\");\n\n                device.toggleProperty(\"trackOnMap\");\n\n                if (device.get(\"trackOnMap\") === true) {\n                    trackedCars.pushObject(device.get(\"nitrogen_id\"));\n                } else {\n                    trackedCars.removeObject(device.get(\"nitrogen_id\"));\n                }\n            },\n\n            /**\n             * Handles a locations array for a given device, cleaning the individual\n             * 'location' data points and putting them into an array property on a\n             * given car.\n             *\n             * This method is called when Nitrogen messages with location data are\n             * retrieved.\n             * @param  {array}   locations     - Locations array (format: {latitude: 1, longitude: 1, speed: 1, heading: 1, timestamp: 1})\n             * @param  {string}   principalId  - Id of the car the locations should be attached to\n             * @param  {Function} callback\n             * @return {Ember Data Record}     - DS Record of the car the locations were added to\n             */\n            handleLocations: function handleLocations(locations, principalId, callback) {\n                var self = this;\n\n                if (locations.length > 0) {\n                    this.store.find(\"device\", {\n                        nitrogen_id: principalId\n                    }).then(function (foundDevices) {\n                        var foundDevice, i, gps;\n\n                        if (foundDevices && foundDevices.content && foundDevices.content.length > 0) {\n                            foundDevice = foundDevices.content[0];\n                            gps = foundDevice.get(\"gps\");\n\n                            for (i = 0; i < locations.length; i += 1) {\n                                if (!locations[i].body.timestamp) {\n                                    locations[i].body.timestamp = Date.now();\n                                }\n\n                                gps.pushObject(locations[i].body);\n                                foundDevice.save();\n                            }\n\n                            if (foundDevice.get(\"trackOnMap\")) {\n                                self.send(callback, foundDevice);\n                            }\n                        }\n                    });\n                }\n            },\n\n            /**\n             * If a car is added to the map and the last location has to be retrieved, this callback is used\n             * to handleLocations followed by adding the car to the map.\n             * @param  {array}   locations     - Locations array (format: {latitude: 1, longitude: 1, speed: 1, heading: 1, timestamp: 1})\n             * @param  {string}   principalId  - Id of the car the locations should be attached to\n             */\n            handleLastLocation: function handleLastLocation(locations, principalId) {\n                if (locations && principalId) {\n                    this.send(\"handleLocations\", locations, principalId, \"addCarToMap\");\n                }\n            },\n\n            /**\n             * Handles incoming socket messages from Nitrogen\n             * @param  {object} message - Nitrogen message\n             */\n            handleSocketMessage: function handleSocketMessage(message) {\n                var locations = [];\n\n                if (message && message.from) {\n                    locations.push(message);\n                    this.send(\"handleLocations\", locations, message.from, \"updateCar\");\n                }\n            },\n\n            /**\n             * Updates a car on the map, moving his pushpin and drawing the path\n             * @param  {Ember Data Record} device - Car to update on the map\n             */\n            updateCar: function updateCar(device) {\n                var map = this.get(\"mapReference\"),\n                    name = device.get(\"nitrogen_id\"),\n                    mapEntityTracker = this.get(\"mapEntityTracker\"),\n                    locations = device.get(\"gps\"),\n                    lat = locations[locations.length - 1].latitude,\n                    lon = locations[locations.length - 1].longitude,\n                    lastLocation = {\n                    longitude: lon,\n                    latitude: lat\n                },\n                    pathLocations,\n                    path,\n                    pin,\n                    i;\n\n                this.set(\"speed\", Math.round(locations[locations.length - 1].speed));\n                this.set(\"lastLocation\", lastLocation);\n                this.set(\"lat\", lat.toFixed(4));\n                this.set(\"lon\", lon.toFixed(4));\n\n                for (i = 0; i < mapEntityTracker.length; i += 1) {\n                    if (mapEntityTracker[i].name === name) {\n                        path = map.entities.removeAt(mapEntityTracker[i].path);\n                        pin = map.entities.removeAt(mapEntityTracker[i].pin);\n\n                        pin.setLocation(lastLocation);\n                        map.entities.insert(pin, mapEntityTracker[i].pin);\n\n                        pathLocations = path.getLocations();\n                        pathLocations.push(lastLocation);\n                        path.setLocations(pathLocations);\n                        map.entities.insert(path, mapEntityTracker[i].path);\n                    }\n                }\n            },\n\n            /**\n             * Centers the map on a given location\n             * @param  {object} location - The location to center on (format: {latitude: 1, longitude: 1})\n             */\n            centerMap: function centerMap(location) {\n                var map = this.get(\"mapReference\"),\n                    mapOptions = map.getOptions();\n\n                mapOptions.zoom = 15;\n                mapOptions.center = {\n                    latitude: location.latitude,\n                    longitude: location.longitude\n                };\n                map.setView(mapOptions);\n            },\n\n            /**\n             * Centers the map on a given car\n             * @param  {Ember Data Record} device - Car to center on\n             */\n            centerOnCar: function centerOnCar(device) {\n                var locations = device.get(\"gps\"),\n                    lastLocation = locations[locations.length - 1];\n\n                if (lastLocation) {\n                    this.send(\"centerMap\", {\n                        latitude: lastLocation.latitude,\n                        longitude: lastLocation.longitude\n                    });\n                }\n            },\n\n            /**\n             * Adds a given car to the map\n             * @param  {Ember Data Record} device - Car to add\n             */\n            addCarToMap: function addCarToMap(device) {\n                var locations = device.get(\"gps\"),\n                    lastLocation = locations[locations.length - 1],\n                    iconUrl = \"assets/img/carIcon_smaller.png\",\n                    iconOptions = {\n                    icon: iconUrl,\n                    height: 40,\n                    width: 40,\n                    typeName: \"tooltipped\"\n                },\n                    map = this.get(\"mapReference\"),\n                    mapLocations = [],\n                    pathOptions = {\n                    strokeColor: new Microsoft.Maps.Color.fromHex(\"#4caf50\"),\n                    strokeThickness: 5\n                },\n                    path,\n                    pin,\n                    entityLength;\n\n                for (var i = 0; i < locations.length; i += 1) {\n                    mapLocations.push({\n                        latitude: locations[i].latitude,\n                        longitude: locations[i].longitude\n                    });\n                }\n\n                if (mapLocations && mapLocations.length > 0) {\n                    pin = new Microsoft.Maps.Pushpin({\n                        latitude: lastLocation.latitude,\n                        longitude: lastLocation.longitude\n                    }, iconOptions);\n                    path = new Microsoft.Maps.Polyline(mapLocations, pathOptions);\n\n                    // Save index of entities pushed (so we can update them later)\n                    entityLength = map.entities.getLength();\n                    this.get(\"mapEntityTracker\").pushObject({\n                        name: device.get(\"nitrogen_id\"),\n                        pin: entityLength,\n                        path: entityLength + 1\n                    });\n\n                    // Tooltip\n                    this.send(\"addPinTooltip\", pin, device.get(\"name\"));\n\n                    // Push objects to map\n                    map.entities.push(pin);\n                    map.entities.push(path);\n                }\n            },\n\n            /**\n             * Adds a tooltip for a pushpin\n             * @param {object} pin pushin\n             */\n            addPinTooltip: function addPinTooltip(pin, tooltipText) {\n                if (!pin || !tooltipText || !Microsoft || !Microsoft.Maps.Events) {\n                    return;\n                }\n\n                // Create Mouse Over Handler\n                Microsoft.Maps.Events.addHandler(pin, \"mouseover\", function (e) {\n                    var target = e.target.cm1002_er_etr.dom,\n                        tiprCont = \".tipr_container_bottom\",\n                        wt,\n                        ml;\n\n                    var out = \"<div class=\\\"tipr_container_bottom\\\"><div class=\\\"tipr_content\\\">\" + tooltipText + \"</div></div>\";\n\n                    $(target).after(out);\n\n                    wt = $(tiprCont).outerWidth();\n                    ml = -(wt / 2 + 20);\n\n                    $(tiprCont).css(\"top\", e.pageY + 20);\n                    $(tiprCont).css(\"left\", e.pageX);\n                    $(tiprCont).css(\"margin-left\", ml + \"px\");\n\n                    $(tiprCont).fadeIn(\"200\");\n                });\n\n                // Create Mouse Out Handler\n                Microsoft.Maps.Events.addHandler(pin, \"mouseout\", function () {\n                    $(\".tipr_container_bottom\").remove();\n                });\n            },\n\n            /**\n             * Marks a given car as 'selected'\n             * @param  {Ember Data Record} device - Car to select\n             */\n            selectCar: function selectCar(device) {\n                Ember['default'].$(\".carlist\").addClass(\"expanded\");\n\n                this.set(\"selectedCar\", device);\n                this.send(\"centerOnCar\", device);\n            },\n\n            /**\n             * Sets the currently selected car to null\n             */\n            deselectCar: function deselectCar() {\n                Ember['default'].$(\".carlist\").removeClass(\"expanded\");\n\n                this.set(\"selectedCar\", null);\n                this.send(\"clearTripPath\");\n            },\n\n            /**\n             * Selects a trip, getting it's individual trip events and\n             * adding a path for said events to the map\n             * @param  {DS.Model trip} trip\n             */\n            selectTrip: function selectTrip(trip) {\n                var events = trip.get(\"tripEvents\").content.currentState;\n                this.send(\"drawPathFromEvents\", events);\n            },\n\n            /**\n             * Draws a 'selected trip' path on the map\n             * @param  {Array of DS.Model TripEvent} events\n             */\n            drawPathFromEvents: function drawPathFromEvents(events) {\n                var pathLocations = [],\n                    map = this.get(\"mapReference\"),\n                    path;\n\n                // First, get the selected path. It should always be the first entity\n                // on the map\n                path = map.entities.get(0);\n\n                // Then, add the path from the events\n                for (var i = 0; i < events.length; i = i + 1) {\n                    pathLocations.push({\n                        latitude: events[i].get(\"location\").get(\"latitude\"),\n                        longitude: events[i].get(\"location\").get(\"longitude\")\n                    });\n                }\n\n                path.setLocations(pathLocations);\n\n                // Center map on beginning of path\n                if (events && events.length > 0) {\n                    this.send(\"centerMap\", {\n                        latitude: events[0].get(\"location\").get(\"longitude\"),\n                        longitude: events[0].get(\"location\").get(\"latitude\")\n                    });\n                }\n            },\n\n            /**\n             * Resets the path for the currently selected trip by\n             * filling said path on the map EntityCollection with 0 locations\n             */\n            clearTripPath: function clearTripPath() {\n                var map = this.get(\"mapReference\"),\n                    path = map.entities.get(0);\n\n                path.setLocations([]);\n            }\n        }\n    });\n\n});","define('oxide/controllers/login', ['exports', 'ember', 'simple-auth/mixins/login-controller-mixin'], function (exports, Ember, LoginControllerMixin) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Controller.extend(LoginControllerMixin['default'], {\n        title: \"Sign In\",\n        authenticator: \"authenticator:nitrogen\",\n        loading: false,\n\n        init: function init() {\n            this._super();\n            this.set(\"loading\", false);\n        },\n\n        actions: {\n            /**\n             * Authenticates and displays an error if anything goes wrong\n             */\n            authenticate: function authenticate() {\n                var self = this;\n                this.set(\"loading\", true);\n\n                this._super().then(function () {\n                    Ember['default'].Logger.debug(\"Session authentication succeeded\");\n                }, function (error) {\n                    self.set(\"loading\", false);\n                    Ember['default'].Logger.debug(\"Session authentication failed with message:\", error.message);\n                    self.notify.warning({ message: \"Incorrect email or password.\", closeAfter: 7000 });\n                });\n            },\n\n            /**\n             * Uses jQuery to programmitcally submit the login form\n             */\n            login: function login() {\n                Ember['default'].$(\"#login\").submit();\n                return false;\n            }\n        }\n    });\n\n});","define('oxide/controllers/nitrogen', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Controller.extend({\n        needs: \"application\",\n        appController: Ember['default'].computed.alias(\"controllers.application\"),\n        subscribeToNitrogen: false,\n\n        actions: {\n            /**\n             * Subcribes to the Nitrogen Socket Message Stream, calling a\n             * callback on a given controller\n             * @param  {Controller}   originalController - The controller on which to call the callback\n             * @param  {string}       callback - The callback (passed as a string, since called via Ember Run Loop)\n             */\n            subscribeToNitrogen: function subscribeToNitrogen(originalController, callback) {\n                var appController = this.get(\"appController\"),\n                    nitrogenSession = appController.get(\"nitrogenSession\");\n\n                if (this.get(\"subscribedToNitrogen\") || !nitrogenSession) {\n                    return;\n                }\n\n                nitrogenSession.onMessage({ type: \"location\" }, function (message) {\n                    originalController.send(callback, message);\n                });\n\n                this.set(\"subscribedToNitrogen\", true);\n            },\n\n            /**\n             * Gets the last message for a given car from Nitrogen\n             * @param  {string}       principalId        - Id of the car for which the last message shall be retreived\n             * @param  {number}       messageLimit       - Number of last messages to retreive (usually 1)\n             * @param  {Controller}   originalController - The controller on which to call the callback\n             * @param  {string}       callback           - The callback (passed as a string, since called via Ember Run Loop)\n             */\n            getLastMessage: function getLastMessage(principalId, messageLimit, originalController, callback) {\n                var appController = this.get(\"appController\"),\n                    nitrogenSession = appController.get(\"nitrogenSession\"),\n                    limit = messageLimit ? messageLimit : 0;\n\n                if (nitrogenSession && principalId) {\n                    nitrogen.Message.find(nitrogenSession, {\n                        type: \"location\", from: principalId\n                    }, {\n                        sort: { ts: -1 },\n                        limit: limit\n                    }, function (err, locations) {\n                        if (err) {\n                            return;\n                        }\n                        originalController.send(callback, locations, principalId);\n                    });\n                }\n            }\n        }\n\n    });\n\n});","define('oxide/controllers/settings', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Controller.extend({\n        title: \"Settings\",\n        needs: [\"application\"],\n        config: Ember['default'].computed.alias(\"controllers.application.fullConfig\"),\n\n        configString: (function () {\n            return JSON.stringify(this.get(\"config\"), null, \"\\t\");\n        }).property(\"config\"),\n\n        connectionSecure: Ember['default'].computed.equal(\"config.nitrogen.http_port\", \"https\"),\n\n        localStorageSize: (function () {\n            var result = 0;\n\n            for (var i in localStorage) {\n                if (localStorage.hasOwnProperty(localStorage[i])) {\n                    result = result + localStorage[i].length * 2 / 1024 / 1024;\n                }\n            }\n\n            return result.toFixed(2);\n        }).property(),\n\n        actions: {\n            /**\n             * The nuclear option: Clears the local storage\n             */\n            clearLocalStorage: function clearLocalStorage() {\n                window.localStorage.clear();\n                this.send(\"invalidateSession\");\n            }\n        }\n\n    });\n\n});","define('oxide/helpers/lf-yield-inverse', ['exports', 'liquid-fire/ember-internals'], function (exports, ember_internals) {\n\n  'use strict';\n\n  exports['default'] = {\n    isHTMLBars: true,\n    helperFunction: ember_internals.inverseYieldHelper\n  };\n\n});","define('oxide/helpers/liquid-bind', ['exports', 'liquid-fire/ember-internals'], function (exports, ember_internals) {\n\n\t'use strict';\n\n\texports['default'] = ember_internals.makeHelperShim(\"liquid-bind\");\n\n});","define('oxide/helpers/liquid-if', ['exports', 'liquid-fire/ember-internals'], function (exports, ember_internals) {\n\n  'use strict';\n\n  exports['default'] = ember_internals.makeHelperShim(\"liquid-if\", function (params, hash, options) {\n    hash.helperName = \"liquid-if\";\n    hash.inverseTemplate = options.inverse;\n  });\n\n});","define('oxide/helpers/liquid-outlet', ['exports', 'liquid-fire/ember-internals'], function (exports, ember_internals) {\n\n  'use strict';\n\n  exports['default'] = ember_internals.makeHelperShim(\"liquid-outlet\", function (params, hash) {\n    hash._outletName = params[0] || \"main\";\n  });\n\n});","define('oxide/helpers/liquid-unless', ['exports', 'liquid-fire/ember-internals'], function (exports, ember_internals) {\n\n  'use strict';\n\n  exports['default'] = ember_internals.makeHelperShim(\"liquid-if\", function (params, hash, options) {\n    hash.helperName = \"liquid-unless\";\n    hash.inverseTemplate = options.template;\n    options.template = options.inverse;\n  });\n\n});","define('oxide/helpers/liquid-with', ['exports', 'liquid-fire/ember-internals'], function (exports, ember_internals) {\n\n\t'use strict';\n\n\texports['default'] = ember_internals.makeHelperShim(\"liquid-with\");\n\n});","define('oxide/helpers/pretty-date', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports.prettyDate = prettyDate;\n\n  /**\n   * Uses Moment to return a pretty date\n   * @param  {number} timestamp - Timestamp\n   * @return {string}           - Pretty Moment date string\n   */\n  function prettyDate(timestamp) {\n    return moment(timestamp).calendar();\n  }\n\n  exports['default'] = Ember['default'].Handlebars.makeBoundHelper(prettyDate);\n\n});","define('oxide/helpers/round-number', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports.round = round;\n\n    /**\n     * Takes a number and returns a rounded version\n     * @param  {number} input\n     * @param  {number} points\n     * @return {number}\n     */\n    function round(input, points) {\n        if (points === undefined) {\n            points = 2;\n        }\n        return parseFloat(input).toFixed(points);\n    }\n\n    exports['default'] = Ember['default'].Handlebars.makeBoundHelper(round);\n\n});","define('oxide/helpers/time-length', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports.timeLength = timeLength;\n\n    function timeLength(timestamps) {\n        if (timestamps && timestamps.length >= 2) {\n            var diff = moment(timestamps[1]).diff(moment(timestamps[0]));\n            return moment.duration(diff).humanize();\n        }\n        return \"\";\n    }\n\n    exports['default'] = Ember['default'].HTMLBars.makeBoundHelper(timeLength);\n\n});","define('oxide/initializers/app-version', ['exports', 'oxide/config/environment', 'ember'], function (exports, config, Ember) {\n\n  'use strict';\n\n  var classify = Ember['default'].String.classify;\n  var registered = false;\n\n  exports['default'] = {\n    name: \"App Version\",\n    initialize: function initialize(container, application) {\n      if (!registered) {\n        var appName = classify(application.toString());\n        Ember['default'].libraries.register(appName, config['default'].APP.version);\n        registered = true;\n      }\n    }\n  };\n\n});","define('oxide/initializers/export-application-global', ['exports', 'ember', 'oxide/config/environment'], function (exports, Ember, config) {\n\n  'use strict';\n\n  exports.initialize = initialize;\n\n  function initialize(container, application) {\n    var classifiedName = Ember['default'].String.classify(config['default'].modulePrefix);\n\n    if (config['default'].exportApplicationGlobal && !window[classifiedName]) {\n      window[classifiedName] = application;\n    }\n  }\n\n  ;\n\n  exports['default'] = {\n    name: \"export-application-global\",\n\n    initialize: initialize\n  };\n\n});","define('oxide/initializers/link-view', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports.initialize = initialize;\n\n  function initialize() {\n    Ember['default'].LinkView.reopen({\n      attributeBindings: [\"data-activates\"]\n    });\n  }\n\n  exports['default'] = {\n    name: \"link-view\",\n    initialize: initialize\n  };\n  /* container, application */\n\n});","define('oxide/initializers/liquid-fire', ['exports', 'liquid-fire/router-dsl-ext'], function (exports) {\n\n  'use strict';\n\n  // This initializer exists only to make sure that the following import\n  // happens before the app boots.\n  exports['default'] = {\n    name: \"liquid-fire\",\n    initialize: function initialize() {}\n  };\n\n});","define('oxide/initializers/nitrogen', ['exports', 'oxide/authenticators/nitrogen'], function (exports, nitrogenAuth) {\n\n  'use strict';\n\n  exports['default'] = {\n    name: \"authentication\",\n    initialize: function initialize(container) {\n      container.register(\"authenticator:nitrogen\", nitrogenAuth['default']);\n    }\n  };\n\n});","define('oxide/initializers/simple-auth', ['exports', 'simple-auth/configuration', 'simple-auth/setup', 'oxide/config/environment'], function (exports, Configuration, setup, ENV) {\n\n  'use strict';\n\n  exports['default'] = {\n    name: \"simple-auth\",\n    initialize: function initialize(container, application) {\n      Configuration['default'].load(container, ENV['default'][\"simple-auth\"] || {});\n      setup['default'](container, application);\n    }\n  };\n\n});","define('oxide/models/device', ['exports', 'ember-data'], function (exports, DS) {\n\n    'use strict';\n\n    var Device = DS['default'].Model.extend({\n        nitrogen_id: DS['default'].attr(\"string\"),\n        name: DS['default'].attr(\"string\"),\n        status: DS['default'].attr(\"boolean\", { defaultValue: false }),\n        lastUpdated: DS['default'].attr(\"number\"),\n        last_connection: DS['default'].attr(\"string\"),\n        last_ip: DS['default'].attr(\"string\"),\n        nickname: DS['default'].attr(\"string\"),\n        created_at: DS['default'].attr(\"string\"),\n        updated_at: DS['default'].attr(\"string\"),\n        tags: DS['default'].attr(),\n        type: DS['default'].attr(),\n        location: DS['default'].attr(),\n\n        // Connected Car\n        gps: DS['default'].attr(\"array\"),\n        trackOnMap: DS['default'].attr(\"boolean\"),\n\n        // Relations\n        vehicle: DS['default'].belongsTo(\"vehicle\", { async: true })\n    });\n\n    exports['default'] = Device;\n\n});","define('oxide/models/driver', ['exports', 'ember-data'], function (exports, DS) {\n\n  'use strict';\n\n  exports['default'] = DS['default'].Model.extend({\n    name: DS['default'].attr(\"string\"),\n    driver_score: DS['default'].attr(\"number\")\n  });\n\n});","define('oxide/models/event', ['exports', 'ember-data'], function (exports, DS) {\n\n    'use strict';\n\n    exports['default'] = DS['default'].Model.extend({\n        eventType: DS['default'].attr(\"string\"),\n        timestamp: DS['default'].attr(\"string\"),\n        speed: DS['default'].attr(\"number\"),\n        location: DS['default'].belongsTo(\"location\", { embedded: \"always\" }),\n        trip: DS['default'].belongsTo(\"trip\")\n    });\n\n});","define('oxide/models/location', ['exports', 'ember-data'], function (exports, DS) {\n\n    'use strict';\n\n    exports['default'] = DS['default'].Model.extend({\n        tripEvent: DS['default'].belongsTo(\"event\"),\n        latitude: DS['default'].attr(\"number\"),\n        longitude: DS['default'].attr(\"number\"),\n        altitude: DS['default'].attr(\"number\"),\n        direction: DS['default'].attr(\"number\")\n    });\n\n});","define('oxide/models/trip', ['exports', 'ember-data'], function (exports, DS) {\n\n  'use strict';\n\n  exports['default'] = DS['default'].Model.extend({\n    vehicle: DS['default'].belongsTo(\"vehicle\", { async: true }),\n    tripEvents: DS['default'].hasMany(\"event\", { embedded: \"always\", async: true }),\n    driver: DS['default'].belongsTo(\"driver\", { async: true })\n  });\n\n});","define('oxide/models/user', ['exports', 'ember-data'], function (exports, DS) {\n\n    'use strict';\n\n    exports['default'] = DS['default'].Model.extend({\n        // Nitrogen\n        name: DS['default'].attr(\"string\"),\n        email: DS['default'].attr(\"string\"),\n        api_key: DS['default'].attr(\"string\"),\n        created_at: DS['default'].attr(\"string\"),\n        nitrogen_id: DS['default'].attr(\"string\"),\n        last_connection: DS['default'].attr(\"string\"),\n        last_ip: DS['default'].attr(\"string\"),\n        nickname: DS['default'].attr(\"string\"),\n        password: DS['default'].attr(\"string\"),\n        updated_at: DS['default'].attr(\"string\")\n    });\n\n});","define('oxide/models/vehicle', ['exports', 'ember-data'], function (exports, DS) {\n\n    'use strict';\n\n    exports['default'] = DS['default'].Model.extend({\n        trips: DS['default'].hasMany(\"trip\", { async: true }),\n        name: DS['default'].attr(\"string\"),\n        isActive: DS['default'].attr(\"boolean\", { defaultValue: false }),\n        vin: DS['default'].attr(\"string\"),\n        make: DS['default'].attr(\"string\"),\n        model: DS['default'].attr(\"string\"),\n        production_year: DS['default'].attr(\"string\"),\n        mileage: DS['default'].attr(\"string\")\n    });\n\n});","define('oxide/router', ['exports', 'ember', 'oxide/config/environment'], function (exports, Ember, config) {\n\n    'use strict';\n\n    var Router = Ember['default'].Router.extend({\n        location: config['default'].locationType\n    });\n\n    Router.map(function () {\n        this.resource(\"dashboard\", { path: \"/\" });\n\n        this.resource(\"device\", { path: \"device/:device_id\" });\n        this.resource(\"user\", { path: \"users/:user_id\" });\n\n        this.route(\"login\");\n        this.route(\"dashboard\");\n        this.route(\"settings\");\n    });\n\n    exports['default'] = Router;\n\n});","define('oxide/routes/application', ['exports', 'ember', 'simple-auth/mixins/application-route-mixin'], function (exports, Ember, ApplicationRouteMixin) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Route.extend(ApplicationRouteMixin['default'], {\n\n        actions: {\n            /**\n             * Once the session has been invalidated, we reload the whole page to flush caches\n             */\n            sessionInvalidationSucceeded: function sessionInvalidationSucceeded() {\n                // Force reload to empty all cached data\n                window.location = \"http://\" + document.location.host;\n            }\n        }\n\n    });\n\n});","define('oxide/routes/dashboard', ['exports', 'ember', 'simple-auth/mixins/authenticated-route-mixin'], function (exports, Ember, AuthenticatedRouteMixin) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Route.extend(AuthenticatedRouteMixin['default'], {\n        model: function model() {\n            return this.store.find(\"device\");\n        },\n\n        actions: {\n            /**\n             * Toggle the side/hamburger navigation\n             */\n            toggleSideNav: function toggleSideNav() {\n                var $container = Ember['default'].$(\".main-container\"),\n                    $menu = Ember['default'].$(\".menu-flyout\");\n\n                // If the menu isn't out, pull it out\n                $container.toggleClass(\"expanded\");\n                $menu.toggleClass(\"expanded\");\n            },\n\n            /**\n             * Toggle the list of vehicles\n             */\n            toggleVehicleList: function toggleVehicleList() {\n                var $container = Ember['default'].$(\".vehicle-list\"),\n                    $icon = Ember['default'].$(\".vehicle-list > .card-content > .card-title > i\");\n\n                $container.toggleClass(\"collapsed\");\n                if ($icon.hasClass(\"mdi-navigation-expand-less\")) {\n                    $icon.removeClass(\"mdi-navigation-expand-less\");\n                    $icon.addClass(\"mdi-navigation-expand-more\");\n                } else {\n                    $icon.removeClass(\"mdi-navigation-expand-more\");\n                    $icon.addClass(\"mdi-navigation-expand-less\");\n                }\n            }\n        }\n    });\n\n});","define('oxide/routes/login', ['exports', 'ember', 'simple-auth/mixins/unauthenticated-route-mixin'], function (exports, Ember, UnauthenticatedRouteMixin) {\n\n\t'use strict';\n\n\texports['default'] = Ember['default'].Route.extend(UnauthenticatedRouteMixin['default'], {});\n\n});","define('oxide/serializers/application', ['exports', 'ember-json-api/json-api-serializer', 'ember-data'], function (exports, JsonApiSerializer, DS) {\n\n    'use strict';\n\n    exports['default'] = JsonApiSerializer['default'].extend(DS['default'].EmbeddedRecordsMixin, {\n        attrs: {\n            // tell the serializer that these attribute\n            // names are always expected to be embedded\n            // in the doc, and not linked\n            event: { embedded: \"always\" },\n            location: { embedded: \"always\" },\n            tripEvents: { embedded: \"always\" }\n        }\n    });\n\n});","define('oxide/serializers/device', ['exports', 'ember-data'], function (exports, DS) {\n\n    'use strict';\n\n    exports['default'] = DS['default'].LSSerializer.extend({\n        // TODO: Update with the actual principal.id\n        extractSingle: function extractSingle(store, typeClass, payload) {\n            payload.vehicle = \"54d01ed20eabba6304eded64\";\n            return this._super(store, typeClass, payload);\n        }\n    });\n\n});","define('oxide/serializers/user', ['exports', 'ember-data'], function (exports, DS) {\n\n\t'use strict';\n\n\texports['default'] = DS['default'].LSSerializer.extend({});\n\n});","define('oxide/services/liquid-fire-modals', ['exports', 'liquid-fire/modals'], function (exports, Modals) {\n\n\t'use strict';\n\n\texports['default'] = Modals['default'];\n\n});","define('oxide/services/liquid-fire-transitions', ['exports', 'liquid-fire/transition-map'], function (exports, TransitionMap) {\n\n\t'use strict';\n\n\texports['default'] = TransitionMap['default'];\n\n});","define('oxide/templates/-car-list-item', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.0\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.0\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"li\");\n        dom.setAttribute(el1,\"class\",\"collection-item car\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"h4\");\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"p\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"small\");\n        dom.setAttribute(el3,\"class\",\"vin\");\n        var el4 = dom.createTextNode(\"VIN#\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"small\");\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, element = hooks.element, content = hooks.content, block = hooks.block;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var element0 = dom.childAt(fragment, [0]);\n        var morph0 = dom.createMorphAt(dom.childAt(element0, [1]),0,0);\n        var morph1 = dom.createMorphAt(dom.childAt(element0, [3, 3]),0,0);\n        var morph2 = dom.createMorphAt(element0,5,5);\n        element(env, element0, context, \"action\", [\"selectCar\", get(env, context, \"car\")], {});\n        content(env, morph0, context, \"car.name\");\n        content(env, morph1, context, \"car.vehicle.vin\");\n        block(env, morph2, context, \"if\", [get(env, context, \"car.is_active\")], {}, child0, null);\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('oxide/templates/-car-selected-card', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.0\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"                    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"small\");\n          var el2 = dom.createTextNode(\"Yes\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          return fragment;\n        }\n      };\n    }());\n    var child1 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.0\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"                    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"small\");\n          var el2 = dom.createTextNode(\"No\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          return fragment;\n        }\n      };\n    }());\n    var child2 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.0\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"            \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"div\");\n          dom.setAttribute(el1,\"class\",\"driverscore clearfix\");\n          var el2 = dom.createTextNode(\"\\n                \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"div\");\n          dom.setAttribute(el2,\"class\",\"score\");\n          var el3 = dom.createTextNode(\"92\");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n                \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"span\");\n          var el3 = dom.createTextNode(\"Current Driver Score\");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n                \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"img\");\n          dom.setAttribute(el2,\"src\",\"assets/img/mock_sparkline.png\");\n          dom.setAttribute(el2,\"width\",\"250\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          return fragment;\n        }\n      };\n    }());\n    var child3 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.0\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"                \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"li\");\n          var el2 = dom.createTextNode(\"\\n                    \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createComment(\"\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\" \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"span\");\n          dom.setAttribute(el2,\"class\",\"badge\");\n          var el3 = dom.createComment(\"\");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n                \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, element = hooks.element, inline = hooks.inline;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var element0 = dom.childAt(fragment, [1]);\n          var morph0 = dom.createMorphAt(element0,1,1);\n          var morph1 = dom.createMorphAt(dom.childAt(element0, [3]),0,0);\n          element(env, element0, context, \"action\", [\"selectTrip\", get(env, context, \"trip\")], {});\n          inline(env, morph0, context, \"pretty-Date\", [get(env, context, \"trip.tripEvents.firstObject.timestamp\")], {});\n          inline(env, morph1, context, \"time-length\", [get(env, context, \"trip.tripEvents.firstObject.timestamp\"), get(env, context, \"trip.tripEvents.lastObject.timestamp\")], {});\n          return fragment;\n        }\n      };\n    }());\n    var child4 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.0\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"                \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"li\");\n          var el2 = dom.createTextNode(\"No trips recorded yet.\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.0\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"card white car-selected\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"card-content\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"class\",\"card-title\");\n        var el4 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"span\");\n        var el5 = dom.createComment(\"\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"i\");\n        dom.setAttribute(el4,\"class\",\"mdi-navigation-close right\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"class\",\"info\");\n        var el4 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"img\");\n        dom.setAttribute(el4,\"src\",\"http://placehold.it/110x100\");\n        dom.setAttribute(el4,\"width\",\"110\");\n        dom.setAttribute(el4,\"height\",\"100\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"span\");\n        var el5 = dom.createComment(\"\");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\" \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createComment(\"\");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\" \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createComment(\"\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"p\");\n        var el5 = dom.createTextNode(\"\\n                \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createElement(\"small\");\n        dom.setAttribute(el5,\"class\",\"vin\");\n        var el6 = dom.createTextNode(\"VIN#\");\n        dom.appendChild(el5, el6);\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n                \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createElement(\"small\");\n        var el6 = dom.createComment(\"\");\n        dom.appendChild(el5, el6);\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"p\");\n        var el5 = dom.createTextNode(\"\\n                \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createElement(\"small\");\n        dom.setAttribute(el5,\"class\",\"vin\");\n        var el6 = dom.createTextNode(\"Milage\");\n        dom.appendChild(el5, el6);\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n                \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createElement(\"small\");\n        var el6 = dom.createComment(\"\");\n        dom.appendChild(el5, el6);\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"p\");\n        var el5 = dom.createTextNode(\"\\n                \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createElement(\"small\");\n        dom.setAttribute(el5,\"class\",\"vin\");\n        var el6 = dom.createTextNode(\"Active\");\n        dom.appendChild(el5, el6);\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createComment(\"\");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"            \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"class\",\"trips\");\n        var el4 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"h4\");\n        var el5 = dom.createTextNode(\"Trips\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"ul\");\n        var el5 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createComment(\"\");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"            \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, content = hooks.content, get = hooks.get, element = hooks.element, block = hooks.block;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var element1 = dom.childAt(fragment, [0, 1]);\n        var element2 = dom.childAt(element1, [1]);\n        var element3 = dom.childAt(element2, [3]);\n        var element4 = dom.childAt(element1, [3]);\n        var element5 = dom.childAt(element4, [3]);\n        var morph0 = dom.createMorphAt(dom.childAt(element2, [1]),0,0);\n        var morph1 = dom.createMorphAt(element5,0,0);\n        var morph2 = dom.createMorphAt(element5,2,2);\n        var morph3 = dom.createMorphAt(element5,4,4);\n        var morph4 = dom.createMorphAt(dom.childAt(element4, [5, 3]),0,0);\n        var morph5 = dom.createMorphAt(dom.childAt(element4, [7, 3]),0,0);\n        var morph6 = dom.createMorphAt(dom.childAt(element4, [9]),3,3);\n        var morph7 = dom.createMorphAt(element1,5,5);\n        var morph8 = dom.createMorphAt(dom.childAt(element1, [7, 3]),1,1);\n        content(env, morph0, context, \"selectedCar.name\");\n        element(env, element3, context, \"action\", [\"deselectCar\", get(env, context, \"selectedCar\")], {});\n        content(env, morph1, context, \"selectedCar.vehicle.production_year\");\n        content(env, morph2, context, \"selectedCar.vehicle.make\");\n        content(env, morph3, context, \"selectedCar.vehicle.model\");\n        content(env, morph4, context, \"selectedCar.vehicle.vin\");\n        content(env, morph5, context, \"selectedCar.vehicle.mileage\");\n        block(env, morph6, context, \"if\", [get(env, context, \"selectedCar.vehicle.isActive\")], {}, child0, child1);\n        block(env, morph7, context, \"if\", [get(env, context, \"selectedCar.vehicle.isActive\")], {}, child2, null);\n        block(env, morph8, context, \"each\", [get(env, context, \"selectedCar.vehicle.trips\")], {\"keyword\": \"trip\"}, child3, child4);\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('oxide/templates/-menu', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.0\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"ul\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"li\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"i\");\n        dom.setAttribute(el3,\"class\",\"mdi-navigation-menu\");\n        dom.setAttribute(el3,\"title\",\"Menu\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"span\");\n        var el4 = dom.createTextNode(\"Connected Car\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"li\");\n        dom.setAttribute(el2,\"class\",\"selected\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"i\");\n        dom.setAttribute(el3,\"class\",\"mdi-maps-layers\");\n        dom.setAttribute(el3,\"title\",\"Overview\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"span\");\n        var el4 = dom.createTextNode(\"Overview\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"li\");\n        dom.setAttribute(el2,\"class\",\"logout\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"i\");\n        dom.setAttribute(el3,\"class\",\"mdi-social-person\");\n        dom.setAttribute(el3,\"title\",\"Sign out\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"span\");\n        var el4 = dom.createTextNode(\"Sign out\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, element = hooks.element;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var element0 = dom.childAt(fragment, [0]);\n        var element1 = dom.childAt(element0, [1]);\n        var element2 = dom.childAt(element0, [5]);\n        element(env, element1, context, \"action\", [\"toggleSideNav\"], {});\n        element(env, element2, context, \"action\", [\"invalidateSession\"], {});\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('oxide/templates/-navbar', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.0\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"            \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"a\");\n          var el2 = dom.createTextNode(\"Dashboard\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, element = hooks.element;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var element1 = dom.childAt(fragment, [1]);\n          element(env, element1, context, \"bind-attr\", [], {\"href\": \"view.href\"});\n          return fragment;\n        }\n      };\n    }());\n    var child1 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.0\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"            \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"a\");\n          var el2 = dom.createTextNode(\"Settings\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, element = hooks.element;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var element0 = dom.childAt(fragment, [1]);\n          element(env, element0, context, \"bind-attr\", [], {\"href\": \"view.href\"});\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.0\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"nav\");\n        dom.setAttribute(el1,\"class\",\"navbar navbar-inverse navbar-static-top\");\n        dom.setAttribute(el1,\"role\",\"navigation\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"navbar-header\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"button\");\n        dom.setAttribute(el3,\"class\",\"toggleButton\");\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"button\");\n        dom.setAttribute(el3,\"type\",\"button\");\n        dom.setAttribute(el3,\"class\",\"navbar-toggle\");\n        dom.setAttribute(el3,\"data-toggle\",\"collapse\");\n        dom.setAttribute(el3,\"data-target\",\"#navbar-collapse-01\");\n        var el4 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"span\");\n        dom.setAttribute(el4,\"class\",\"sr-only\");\n        var el5 = dom.createTextNode(\"Toggle navigation\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"collapse navbar-collapse\");\n        dom.setAttribute(el2,\"id\",\"navbar-collapse-01\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"ul\");\n        dom.setAttribute(el3,\"class\",\"nav navbar-nav\");\n        var el4 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"        \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"ul\");\n        dom.setAttribute(el3,\"class\",\"nav navbar-nav navbar-right\");\n        var el4 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"li\");\n        dom.setAttribute(el4,\"style\",\"padding-right: 10px\");\n        var el5 = dom.createTextNode(\"\\n                \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createElement(\"a\");\n        var el6 = dom.createTextNode(\"Sign Out\");\n        dom.appendChild(el5, el6);\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, element = hooks.element, inline = hooks.inline, block = hooks.block;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var element2 = dom.childAt(fragment, [0]);\n        var element3 = dom.childAt(element2, [1]);\n        var element4 = dom.childAt(element3, [1]);\n        var element5 = dom.childAt(element2, [3]);\n        var element6 = dom.childAt(element5, [1]);\n        var element7 = dom.childAt(element5, [3, 1, 1]);\n        var morph0 = dom.createMorphAt(element4,0,0);\n        var morph1 = dom.createMorphAt(element3,5,5);\n        var morph2 = dom.createMorphAt(element6,1,1);\n        var morph3 = dom.createMorphAt(element6,2,2);\n        element(env, element4, context, \"action\", [\"toggleSidebar\"], {});\n        inline(env, morph0, context, \"fa-icon\", [\"fa-ellipsis-v\"], {});\n        inline(env, morph1, context, \"link-to\", [\"Connected Car\", \"dashboard\"], {\"class\": \"navbar-brand\"});\n        block(env, morph2, context, \"link-to\", [\"dashboard\"], {\"tagName\": \"li\", \"href\": false}, child0, null);\n        block(env, morph3, context, \"link-to\", [\"settings\"], {\"tagName\": \"li\", \"href\": false}, child1, null);\n        element(env, element7, context, \"action\", [\"invalidateSession\"], {});\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('oxide/templates/-sidebar', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      var child0 = (function() {\n        var child0 = (function() {\n          return {\n            isHTMLBars: true,\n            revision: \"Ember@1.11.0\",\n            blockParams: 0,\n            cachedFragment: null,\n            hasRendered: false,\n            build: function build(dom) {\n              var el0 = dom.createDocumentFragment();\n              var el1 = dom.createTextNode(\"                            Seen: \");\n              dom.appendChild(el0, el1);\n              var el1 = dom.createComment(\"\");\n              dom.appendChild(el0, el1);\n              var el1 = dom.createTextNode(\"\\n\");\n              dom.appendChild(el0, el1);\n              return el0;\n            },\n            render: function render(context, env, contextualElement) {\n              var dom = env.dom;\n              var hooks = env.hooks, get = hooks.get, inline = hooks.inline;\n              dom.detectNamespace(contextualElement);\n              var fragment;\n              if (env.useFragmentCache && dom.canClone) {\n                if (this.cachedFragment === null) {\n                  fragment = this.build(dom);\n                  if (this.hasRendered) {\n                    this.cachedFragment = fragment;\n                  } else {\n                    this.hasRendered = true;\n                  }\n                }\n                if (this.cachedFragment) {\n                  fragment = dom.cloneNode(this.cachedFragment, true);\n                }\n              } else {\n                fragment = this.build(dom);\n              }\n              var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n              inline(env, morph0, context, \"pretty-Date\", [get(env, context, \"car.gps.firstObject.timestamp\")], {});\n              return fragment;\n            }\n          };\n        }());\n        var child1 = (function() {\n          return {\n            isHTMLBars: true,\n            revision: \"Ember@1.11.0\",\n            blockParams: 0,\n            cachedFragment: null,\n            hasRendered: false,\n            build: function build(dom) {\n              var el0 = dom.createDocumentFragment();\n              var el1 = dom.createTextNode(\"                            Never seen\\n\");\n              dom.appendChild(el0, el1);\n              return el0;\n            },\n            render: function render(context, env, contextualElement) {\n              var dom = env.dom;\n              dom.detectNamespace(contextualElement);\n              var fragment;\n              if (env.useFragmentCache && dom.canClone) {\n                if (this.cachedFragment === null) {\n                  fragment = this.build(dom);\n                  if (this.hasRendered) {\n                    this.cachedFragment = fragment;\n                  } else {\n                    this.hasRendered = true;\n                  }\n                }\n                if (this.cachedFragment) {\n                  fragment = dom.cloneNode(this.cachedFragment, true);\n                }\n              } else {\n                fragment = this.build(dom);\n              }\n              return fragment;\n            }\n          };\n        }());\n        var child2 = (function() {\n          var child0 = (function() {\n            var child0 = (function() {\n              return {\n                isHTMLBars: true,\n                revision: \"Ember@1.11.0\",\n                blockParams: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                build: function build(dom) {\n                  var el0 = dom.createDocumentFragment();\n                  var el1 = dom.createTextNode(\"                            \");\n                  dom.appendChild(el0, el1);\n                  var el1 = dom.createElement(\"a\");\n                  dom.setAttribute(el1,\"type\",\"button\");\n                  dom.setAttribute(el1,\"class\",\"btn btn-embossed btn-primary btn-xs\");\n                  var el2 = dom.createElement(\"i\");\n                  dom.setAttribute(el2,\"class\",\"fa fa-location\");\n                  dom.appendChild(el1, el2);\n                  var el2 = dom.createTextNode(\" Go to\");\n                  dom.appendChild(el1, el2);\n                  dom.appendChild(el0, el1);\n                  var el1 = dom.createTextNode(\"\\n\");\n                  dom.appendChild(el0, el1);\n                  return el0;\n                },\n                render: function render(context, env, contextualElement) {\n                  var dom = env.dom;\n                  var hooks = env.hooks, get = hooks.get, element = hooks.element;\n                  dom.detectNamespace(contextualElement);\n                  var fragment;\n                  if (env.useFragmentCache && dom.canClone) {\n                    if (this.cachedFragment === null) {\n                      fragment = this.build(dom);\n                      if (this.hasRendered) {\n                        this.cachedFragment = fragment;\n                      } else {\n                        this.hasRendered = true;\n                      }\n                    }\n                    if (this.cachedFragment) {\n                      fragment = dom.cloneNode(this.cachedFragment, true);\n                    }\n                  } else {\n                    fragment = this.build(dom);\n                  }\n                  var element1 = dom.childAt(fragment, [1]);\n                  element(env, element1, context, \"action\", [\"centerMap\", get(env, context, \"car.gps.firstObject\")], {});\n                  return fragment;\n                }\n              };\n            }());\n            var child1 = (function() {\n              return {\n                isHTMLBars: true,\n                revision: \"Ember@1.11.0\",\n                blockParams: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                build: function build(dom) {\n                  var el0 = dom.createDocumentFragment();\n                  var el1 = dom.createTextNode(\"                                \");\n                  dom.appendChild(el0, el1);\n                  var el1 = dom.createElement(\"span\");\n                  var el2 = dom.createTextNode(\" \");\n                  dom.appendChild(el1, el2);\n                  var el2 = dom.createElement(\"i\");\n                  dom.setAttribute(el2,\"class\",\"fa fa-tachometer\");\n                  dom.appendChild(el1, el2);\n                  var el2 = dom.createTextNode(\" \");\n                  dom.appendChild(el1, el2);\n                  var el2 = dom.createComment(\"\");\n                  dom.appendChild(el1, el2);\n                  var el2 = dom.createTextNode(\" mph \");\n                  dom.appendChild(el1, el2);\n                  dom.appendChild(el0, el1);\n                  var el1 = dom.createTextNode(\"\\n                                \");\n                  dom.appendChild(el0, el1);\n                  return el0;\n                },\n                render: function render(context, env, contextualElement) {\n                  var dom = env.dom;\n                  var hooks = env.hooks, get = hooks.get, inline = hooks.inline;\n                  dom.detectNamespace(contextualElement);\n                  var fragment;\n                  if (env.useFragmentCache && dom.canClone) {\n                    if (this.cachedFragment === null) {\n                      fragment = this.build(dom);\n                      if (this.hasRendered) {\n                        this.cachedFragment = fragment;\n                      } else {\n                        this.hasRendered = true;\n                      }\n                    }\n                    if (this.cachedFragment) {\n                      fragment = dom.cloneNode(this.cachedFragment, true);\n                    }\n                  } else {\n                    fragment = this.build(dom);\n                  }\n                  var morph0 = dom.createMorphAt(dom.childAt(fragment, [1]),3,3);\n                  inline(env, morph0, context, \"round-number\", [get(env, context, \"car.gps.firstObject.speed\"), 0], {});\n                  return fragment;\n                }\n              };\n            }());\n            var child2 = (function() {\n              return {\n                isHTMLBars: true,\n                revision: \"Ember@1.11.0\",\n                blockParams: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                build: function build(dom) {\n                  var el0 = dom.createDocumentFragment();\n                  var el1 = dom.createTextNode(\"\\n                                \");\n                  dom.appendChild(el0, el1);\n                  var el1 = dom.createElement(\"span\");\n                  var el2 = dom.createElement(\"i\");\n                  dom.setAttribute(el2,\"class\",\"fa fa-compass\");\n                  dom.appendChild(el1, el2);\n                  var el2 = dom.createTextNode(\" \");\n                  dom.appendChild(el1, el2);\n                  var el2 = dom.createComment(\"\");\n                  dom.appendChild(el1, el2);\n                  var el2 = dom.createTextNode(\" \");\n                  dom.appendChild(el1, el2);\n                  var el2 = dom.createComment(\"\");\n                  dom.appendChild(el1, el2);\n                  dom.appendChild(el0, el1);\n                  var el1 = dom.createTextNode(\"\\n\");\n                  dom.appendChild(el0, el1);\n                  return el0;\n                },\n                render: function render(context, env, contextualElement) {\n                  var dom = env.dom;\n                  var hooks = env.hooks, get = hooks.get, inline = hooks.inline;\n                  dom.detectNamespace(contextualElement);\n                  var fragment;\n                  if (env.useFragmentCache && dom.canClone) {\n                    if (this.cachedFragment === null) {\n                      fragment = this.build(dom);\n                      if (this.hasRendered) {\n                        this.cachedFragment = fragment;\n                      } else {\n                        this.hasRendered = true;\n                      }\n                    }\n                    if (this.cachedFragment) {\n                      fragment = dom.cloneNode(this.cachedFragment, true);\n                    }\n                  } else {\n                    fragment = this.build(dom);\n                  }\n                  var element0 = dom.childAt(fragment, [1]);\n                  var morph0 = dom.createMorphAt(element0,2,2);\n                  var morph1 = dom.createMorphAt(element0,4,4);\n                  inline(env, morph0, context, \"round-number\", [get(env, context, \"car.gps.firstObject.latitude\"), 3], {});\n                  inline(env, morph1, context, \"round-number\", [get(env, context, \"car.gps.firstObject.longitude\"), 3], {});\n                  return fragment;\n                }\n              };\n            }());\n            return {\n              isHTMLBars: true,\n              revision: \"Ember@1.11.0\",\n              blockParams: 0,\n              cachedFragment: null,\n              hasRendered: false,\n              build: function build(dom) {\n                var el0 = dom.createDocumentFragment();\n                var el1 = dom.createTextNode(\"\\n                    \");\n                dom.appendChild(el0, el1);\n                var el1 = dom.createElement(\"li\");\n                var el2 = dom.createTextNode(\"\\n                        \");\n                dom.appendChild(el1, el2);\n                var el2 = dom.createElement(\"div\");\n                dom.setAttribute(el2,\"class\",\"car-metadata\");\n                var el3 = dom.createTextNode(\"\\n\");\n                dom.appendChild(el2, el3);\n                var el3 = dom.createComment(\"\");\n                dom.appendChild(el2, el3);\n                var el3 = dom.createComment(\"\");\n                dom.appendChild(el2, el3);\n                var el3 = dom.createComment(\"\");\n                dom.appendChild(el2, el3);\n                var el3 = dom.createTextNode(\"                        \");\n                dom.appendChild(el2, el3);\n                dom.appendChild(el1, el2);\n                var el2 = dom.createTextNode(\"\\n                    \");\n                dom.appendChild(el1, el2);\n                dom.appendChild(el0, el1);\n                var el1 = dom.createTextNode(\"\\n                \");\n                dom.appendChild(el0, el1);\n                return el0;\n              },\n              render: function render(context, env, contextualElement) {\n                var dom = env.dom;\n                var hooks = env.hooks, get = hooks.get, block = hooks.block;\n                dom.detectNamespace(contextualElement);\n                var fragment;\n                if (env.useFragmentCache && dom.canClone) {\n                  if (this.cachedFragment === null) {\n                    fragment = this.build(dom);\n                    if (this.hasRendered) {\n                      this.cachedFragment = fragment;\n                    } else {\n                      this.hasRendered = true;\n                    }\n                  }\n                  if (this.cachedFragment) {\n                    fragment = dom.cloneNode(this.cachedFragment, true);\n                  }\n                } else {\n                  fragment = this.build(dom);\n                }\n                var element2 = dom.childAt(fragment, [1, 1]);\n                var morph0 = dom.createMorphAt(element2,1,1);\n                var morph1 = dom.createMorphAt(element2,2,2);\n                var morph2 = dom.createMorphAt(element2,3,3);\n                block(env, morph0, context, \"if\", [get(env, context, \"car.gps.firstObject.latitude\")], {}, child0, null);\n                block(env, morph1, context, \"if\", [get(env, context, \"car.gps.firstObject.speed\")], {}, child1, null);\n                block(env, morph2, context, \"if\", [get(env, context, \"car.gps.firstObject.latitude\")], {}, child2, null);\n                return fragment;\n              }\n            };\n          }());\n          return {\n            isHTMLBars: true,\n            revision: \"Ember@1.11.0\",\n            blockParams: 0,\n            cachedFragment: null,\n            hasRendered: false,\n            build: function build(dom) {\n              var el0 = dom.createDocumentFragment();\n              var el1 = dom.createComment(\"\");\n              dom.appendChild(el0, el1);\n              return el0;\n            },\n            render: function render(context, env, contextualElement) {\n              var dom = env.dom;\n              var hooks = env.hooks, get = hooks.get, block = hooks.block;\n              dom.detectNamespace(contextualElement);\n              var fragment;\n              if (env.useFragmentCache && dom.canClone) {\n                if (this.cachedFragment === null) {\n                  fragment = this.build(dom);\n                  if (this.hasRendered) {\n                    this.cachedFragment = fragment;\n                  } else {\n                    this.hasRendered = true;\n                  }\n                }\n                if (this.cachedFragment) {\n                  fragment = dom.cloneNode(this.cachedFragment, true);\n                }\n              } else {\n                fragment = this.build(dom);\n              }\n              var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n              dom.insertBoundary(fragment, null);\n              dom.insertBoundary(fragment, 0);\n              block(env, morph0, context, \"if\", [get(env, context, \"car.gps.firstObject\")], {}, child0, null);\n              return fragment;\n            }\n          };\n        }());\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.0\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"                \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"li\");\n            var el2 = dom.createTextNode(\"\\n                    \");\n            dom.appendChild(el1, el2);\n            var el2 = dom.createElement(\"div\");\n            dom.setAttribute(el2,\"class\",\"flatpanel-icon fa fa-car\");\n            dom.appendChild(el1, el2);\n            var el2 = dom.createTextNode(\"\\n                    \");\n            dom.appendChild(el1, el2);\n            var el2 = dom.createElement(\"div\");\n            dom.setAttribute(el2,\"class\",\"flatpanel-content\");\n            var el3 = dom.createTextNode(\"\\n                        \");\n            dom.appendChild(el2, el3);\n            var el3 = dom.createElement(\"h4\");\n            dom.setAttribute(el3,\"class\",\"flatpanel-name\");\n            var el4 = dom.createTextNode(\"\\n                            \");\n            dom.appendChild(el3, el4);\n            var el4 = dom.createComment(\"\");\n            dom.appendChild(el3, el4);\n            var el4 = dom.createTextNode(\"\\n                        \");\n            dom.appendChild(el3, el4);\n            dom.appendChild(el2, el3);\n            var el3 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el2, el3);\n            var el3 = dom.createComment(\"\");\n            dom.appendChild(el2, el3);\n            var el3 = dom.createTextNode(\"                    \");\n            dom.appendChild(el2, el3);\n            dom.appendChild(el1, el2);\n            var el2 = dom.createTextNode(\"\\n                \");\n            dom.appendChild(el1, el2);\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n                \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createComment(\"\");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, get = hooks.get, element = hooks.element, content = hooks.content, block = hooks.block;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var element3 = dom.childAt(fragment, [1]);\n            var element4 = dom.childAt(element3, [3]);\n            var morph0 = dom.createMorphAt(dom.childAt(element4, [1]),1,1);\n            var morph1 = dom.createMorphAt(element4,3,3);\n            var morph2 = dom.createMorphAt(fragment,3,3,contextualElement);\n            element(env, element3, context, \"action\", [\"toggleCar\", get(env, context, \"car\")], {});\n            element(env, element3, context, \"bind-attr\", [], {\"class\": \"car.trackOnMap:flatpanel-selected:flatpanel-notselected\"});\n            content(env, morph0, context, \"car.name\");\n            block(env, morph1, context, \"if\", [get(env, context, \"car.gps.firstObject.timestamp\")], {}, child0, child1);\n            block(env, morph2, context, \"if\", [get(env, context, \"car.trackOnMap\")], {}, child2, null);\n            return fragment;\n          }\n        };\n      }());\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.0\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"ul\");\n          var el2 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createComment(\"\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"        \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, block = hooks.block;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(dom.childAt(fragment, [1]),1,1);\n          block(env, morph0, context, \"each\", [get(env, context, \"model\")], {\"keyword\": \"car\"}, child0, null);\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.0\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"id\",\"panel-menu\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"flatpanel\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"class\",\"flatpanel-title\");\n        var el4 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"span\");\n        var el5 = dom.createTextNode(\"Track Cars\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"span\");\n        var el3 = dom.createTextNode(\"Internal Preview \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, block = hooks.block, content = hooks.content;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var element5 = dom.childAt(fragment, [0]);\n        var morph0 = dom.createMorphAt(dom.childAt(element5, [1]),3,3);\n        var morph1 = dom.createMorphAt(dom.childAt(element5, [3]),1,1);\n        block(env, morph0, context, \"if\", [get(env, context, \"carsConnected\")], {}, child0, null);\n        content(env, morph1, context, \"version\");\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('oxide/templates/application', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.0\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, content = hooks.content;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n        dom.insertBoundary(fragment, null);\n        dom.insertBoundary(fragment, 0);\n        content(env, morph0, context, \"outlet\");\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('oxide/templates/components/cc-spinner', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.0\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"preloader-wrapper big active\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"spinner-layer spinner-blue\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"class\",\"circle-clipper left\");\n        var el4 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"div\");\n        dom.setAttribute(el4,\"class\",\"circle\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"class\",\"gap-patch\");\n        var el4 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"div\");\n        dom.setAttribute(el4,\"class\",\"circle\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"class\",\"circle-clipper right\");\n        var el4 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"div\");\n        dom.setAttribute(el4,\"class\",\"circle\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"spinner-layer spinner-red\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"class\",\"circle-clipper left\");\n        var el4 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"div\");\n        dom.setAttribute(el4,\"class\",\"circle\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"class\",\"gap-patch\");\n        var el4 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"div\");\n        dom.setAttribute(el4,\"class\",\"circle\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"class\",\"circle-clipper right\");\n        var el4 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"div\");\n        dom.setAttribute(el4,\"class\",\"circle\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"spinner-layer spinner-yellow\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"class\",\"circle-clipper left\");\n        var el4 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"div\");\n        dom.setAttribute(el4,\"class\",\"circle\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"class\",\"gap-patch\");\n        var el4 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"div\");\n        dom.setAttribute(el4,\"class\",\"circle\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"class\",\"circle-clipper right\");\n        var el4 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"div\");\n        dom.setAttribute(el4,\"class\",\"circle\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"spinner-layer spinner-green\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"class\",\"circle-clipper left\");\n        var el4 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"div\");\n        dom.setAttribute(el4,\"class\",\"circle\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"class\",\"gap-patch\");\n        var el4 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"div\");\n        dom.setAttribute(el4,\"class\",\"circle\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"class\",\"circle-clipper right\");\n        var el4 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"div\");\n        dom.setAttribute(el4,\"class\",\"circle\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('oxide/templates/components/liquid-bind', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      var child0 = (function() {\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.0\",\n          blockParams: 1,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createComment(\"\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement, blockArguments) {\n            var dom = env.dom;\n            var hooks = env.hooks, set = hooks.set, content = hooks.content;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n            dom.insertBoundary(fragment, null);\n            dom.insertBoundary(fragment, 0);\n            set(env, context, \"version\", blockArguments[0]);\n            content(env, morph0, context, \"version\");\n            return fragment;\n          }\n        };\n      }());\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.0\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, block = hooks.block;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n          dom.insertBoundary(fragment, null);\n          dom.insertBoundary(fragment, 0);\n          block(env, morph0, context, \"liquid-versions\", [], {\"value\": get(env, context, \"value\"), \"use\": get(env, context, \"use\"), \"name\": \"liquid-bind\", \"renderWhenFalse\": true, \"innerClass\": get(env, context, \"innerClass\")}, child0, null);\n          return fragment;\n        }\n      };\n    }());\n    var child1 = (function() {\n      var child0 = (function() {\n        var child0 = (function() {\n          return {\n            isHTMLBars: true,\n            revision: \"Ember@1.11.0\",\n            blockParams: 1,\n            cachedFragment: null,\n            hasRendered: false,\n            build: function build(dom) {\n              var el0 = dom.createDocumentFragment();\n              var el1 = dom.createComment(\"\");\n              dom.appendChild(el0, el1);\n              return el0;\n            },\n            render: function render(context, env, contextualElement, blockArguments) {\n              var dom = env.dom;\n              var hooks = env.hooks, set = hooks.set, content = hooks.content;\n              dom.detectNamespace(contextualElement);\n              var fragment;\n              if (env.useFragmentCache && dom.canClone) {\n                if (this.cachedFragment === null) {\n                  fragment = this.build(dom);\n                  if (this.hasRendered) {\n                    this.cachedFragment = fragment;\n                  } else {\n                    this.hasRendered = true;\n                  }\n                }\n                if (this.cachedFragment) {\n                  fragment = dom.cloneNode(this.cachedFragment, true);\n                }\n              } else {\n                fragment = this.build(dom);\n              }\n              var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n              dom.insertBoundary(fragment, null);\n              dom.insertBoundary(fragment, 0);\n              set(env, context, \"version\", blockArguments[0]);\n              content(env, morph0, context, \"version\");\n              return fragment;\n            }\n          };\n        }());\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.0\",\n          blockParams: 1,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createComment(\"\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement, blockArguments) {\n            var dom = env.dom;\n            var hooks = env.hooks, set = hooks.set, get = hooks.get, block = hooks.block;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n            dom.insertBoundary(fragment, null);\n            dom.insertBoundary(fragment, 0);\n            set(env, context, \"container\", blockArguments[0]);\n            block(env, morph0, context, \"liquid-versions\", [], {\"value\": get(env, context, \"value\"), \"notify\": get(env, context, \"container\"), \"use\": get(env, context, \"use\"), \"name\": \"liquid-bind\", \"renderWhenFalse\": true}, child0, null);\n            return fragment;\n          }\n        };\n      }());\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.0\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, block = hooks.block;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n          dom.insertBoundary(fragment, null);\n          dom.insertBoundary(fragment, 0);\n          block(env, morph0, context, \"liquid-container\", [], {\"id\": get(env, context, \"innerId\"), \"class\": get(env, context, \"innerClass\")}, child0, null);\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.0\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, block = hooks.block;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n        dom.insertBoundary(fragment, null);\n        dom.insertBoundary(fragment, 0);\n        block(env, morph0, context, \"if\", [get(env, context, \"containerless\")], {}, child0, child1);\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('oxide/templates/components/liquid-container', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.0\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, inline = hooks.inline;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n        dom.insertBoundary(fragment, null);\n        dom.insertBoundary(fragment, 0);\n        inline(env, morph0, context, \"yield\", [get(env, context, \"this\")], {});\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('oxide/templates/components/liquid-if', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      var child0 = (function() {\n        var child0 = (function() {\n          return {\n            isHTMLBars: true,\n            revision: \"Ember@1.11.0\",\n            blockParams: 0,\n            cachedFragment: null,\n            hasRendered: false,\n            build: function build(dom) {\n              var el0 = dom.createDocumentFragment();\n              var el1 = dom.createTextNode(\"      \");\n              dom.appendChild(el0, el1);\n              var el1 = dom.createComment(\"\");\n              dom.appendChild(el0, el1);\n              var el1 = dom.createTextNode(\"\\n\");\n              dom.appendChild(el0, el1);\n              return el0;\n            },\n            render: function render(context, env, contextualElement) {\n              var dom = env.dom;\n              var hooks = env.hooks, content = hooks.content;\n              dom.detectNamespace(contextualElement);\n              var fragment;\n              if (env.useFragmentCache && dom.canClone) {\n                if (this.cachedFragment === null) {\n                  fragment = this.build(dom);\n                  if (this.hasRendered) {\n                    this.cachedFragment = fragment;\n                  } else {\n                    this.hasRendered = true;\n                  }\n                }\n                if (this.cachedFragment) {\n                  fragment = dom.cloneNode(this.cachedFragment, true);\n                }\n              } else {\n                fragment = this.build(dom);\n              }\n              var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n              content(env, morph0, context, \"yield\");\n              return fragment;\n            }\n          };\n        }());\n        var child1 = (function() {\n          return {\n            isHTMLBars: true,\n            revision: \"Ember@1.11.0\",\n            blockParams: 0,\n            cachedFragment: null,\n            hasRendered: false,\n            build: function build(dom) {\n              var el0 = dom.createDocumentFragment();\n              var el1 = dom.createTextNode(\"      \");\n              dom.appendChild(el0, el1);\n              var el1 = dom.createComment(\"\");\n              dom.appendChild(el0, el1);\n              var el1 = dom.createTextNode(\"\\n\");\n              dom.appendChild(el0, el1);\n              return el0;\n            },\n            render: function render(context, env, contextualElement) {\n              var dom = env.dom;\n              var hooks = env.hooks, content = hooks.content;\n              dom.detectNamespace(contextualElement);\n              var fragment;\n              if (env.useFragmentCache && dom.canClone) {\n                if (this.cachedFragment === null) {\n                  fragment = this.build(dom);\n                  if (this.hasRendered) {\n                    this.cachedFragment = fragment;\n                  } else {\n                    this.hasRendered = true;\n                  }\n                }\n                if (this.cachedFragment) {\n                  fragment = dom.cloneNode(this.cachedFragment, true);\n                }\n              } else {\n                fragment = this.build(dom);\n              }\n              var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n              content(env, morph0, context, \"lf-yield-inverse\");\n              return fragment;\n            }\n          };\n        }());\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.0\",\n          blockParams: 1,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createComment(\"\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement, blockArguments) {\n            var dom = env.dom;\n            var hooks = env.hooks, set = hooks.set, get = hooks.get, block = hooks.block;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n            dom.insertBoundary(fragment, null);\n            dom.insertBoundary(fragment, 0);\n            set(env, context, \"valueVersion\", blockArguments[0]);\n            block(env, morph0, context, \"if\", [get(env, context, \"valueVersion\")], {}, child0, child1);\n            return fragment;\n          }\n        };\n      }());\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.0\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, block = hooks.block;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n          dom.insertBoundary(fragment, null);\n          dom.insertBoundary(fragment, 0);\n          block(env, morph0, context, \"liquid-versions\", [], {\"value\": get(env, context, \"value\"), \"name\": get(env, context, \"helperName\"), \"use\": get(env, context, \"use\"), \"renderWhenFalse\": get(env, context, \"hasInverse\"), \"innerClass\": get(env, context, \"innerClass\")}, child0, null);\n          return fragment;\n        }\n      };\n    }());\n    var child1 = (function() {\n      var child0 = (function() {\n        var child0 = (function() {\n          var child0 = (function() {\n            return {\n              isHTMLBars: true,\n              revision: \"Ember@1.11.0\",\n              blockParams: 0,\n              cachedFragment: null,\n              hasRendered: false,\n              build: function build(dom) {\n                var el0 = dom.createDocumentFragment();\n                var el1 = dom.createTextNode(\"        \");\n                dom.appendChild(el0, el1);\n                var el1 = dom.createComment(\"\");\n                dom.appendChild(el0, el1);\n                var el1 = dom.createTextNode(\"\\n\");\n                dom.appendChild(el0, el1);\n                return el0;\n              },\n              render: function render(context, env, contextualElement) {\n                var dom = env.dom;\n                var hooks = env.hooks, content = hooks.content;\n                dom.detectNamespace(contextualElement);\n                var fragment;\n                if (env.useFragmentCache && dom.canClone) {\n                  if (this.cachedFragment === null) {\n                    fragment = this.build(dom);\n                    if (this.hasRendered) {\n                      this.cachedFragment = fragment;\n                    } else {\n                      this.hasRendered = true;\n                    }\n                  }\n                  if (this.cachedFragment) {\n                    fragment = dom.cloneNode(this.cachedFragment, true);\n                  }\n                } else {\n                  fragment = this.build(dom);\n                }\n                var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n                content(env, morph0, context, \"yield\");\n                return fragment;\n              }\n            };\n          }());\n          var child1 = (function() {\n            return {\n              isHTMLBars: true,\n              revision: \"Ember@1.11.0\",\n              blockParams: 0,\n              cachedFragment: null,\n              hasRendered: false,\n              build: function build(dom) {\n                var el0 = dom.createDocumentFragment();\n                var el1 = dom.createTextNode(\"        \");\n                dom.appendChild(el0, el1);\n                var el1 = dom.createComment(\"\");\n                dom.appendChild(el0, el1);\n                var el1 = dom.createTextNode(\"\\n\");\n                dom.appendChild(el0, el1);\n                return el0;\n              },\n              render: function render(context, env, contextualElement) {\n                var dom = env.dom;\n                var hooks = env.hooks, content = hooks.content;\n                dom.detectNamespace(contextualElement);\n                var fragment;\n                if (env.useFragmentCache && dom.canClone) {\n                  if (this.cachedFragment === null) {\n                    fragment = this.build(dom);\n                    if (this.hasRendered) {\n                      this.cachedFragment = fragment;\n                    } else {\n                      this.hasRendered = true;\n                    }\n                  }\n                  if (this.cachedFragment) {\n                    fragment = dom.cloneNode(this.cachedFragment, true);\n                  }\n                } else {\n                  fragment = this.build(dom);\n                }\n                var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n                content(env, morph0, context, \"lf-yield-inverse\");\n                return fragment;\n              }\n            };\n          }());\n          return {\n            isHTMLBars: true,\n            revision: \"Ember@1.11.0\",\n            blockParams: 1,\n            cachedFragment: null,\n            hasRendered: false,\n            build: function build(dom) {\n              var el0 = dom.createDocumentFragment();\n              var el1 = dom.createComment(\"\");\n              dom.appendChild(el0, el1);\n              return el0;\n            },\n            render: function render(context, env, contextualElement, blockArguments) {\n              var dom = env.dom;\n              var hooks = env.hooks, set = hooks.set, get = hooks.get, block = hooks.block;\n              dom.detectNamespace(contextualElement);\n              var fragment;\n              if (env.useFragmentCache && dom.canClone) {\n                if (this.cachedFragment === null) {\n                  fragment = this.build(dom);\n                  if (this.hasRendered) {\n                    this.cachedFragment = fragment;\n                  } else {\n                    this.hasRendered = true;\n                  }\n                }\n                if (this.cachedFragment) {\n                  fragment = dom.cloneNode(this.cachedFragment, true);\n                }\n              } else {\n                fragment = this.build(dom);\n              }\n              var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n              dom.insertBoundary(fragment, null);\n              dom.insertBoundary(fragment, 0);\n              set(env, context, \"valueVersion\", blockArguments[0]);\n              block(env, morph0, context, \"if\", [get(env, context, \"valueVersion\")], {}, child0, child1);\n              return fragment;\n            }\n          };\n        }());\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.0\",\n          blockParams: 1,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createComment(\"\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement, blockArguments) {\n            var dom = env.dom;\n            var hooks = env.hooks, set = hooks.set, get = hooks.get, block = hooks.block;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n            dom.insertBoundary(fragment, null);\n            dom.insertBoundary(fragment, 0);\n            set(env, context, \"container\", blockArguments[0]);\n            block(env, morph0, context, \"liquid-versions\", [], {\"value\": get(env, context, \"value\"), \"notify\": get(env, context, \"container\"), \"name\": get(env, context, \"helperName\"), \"use\": get(env, context, \"use\"), \"renderWhenFalse\": get(env, context, \"hasInverse\")}, child0, null);\n            return fragment;\n          }\n        };\n      }());\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.0\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, block = hooks.block;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n          dom.insertBoundary(fragment, null);\n          dom.insertBoundary(fragment, 0);\n          block(env, morph0, context, \"liquid-container\", [], {\"id\": get(env, context, \"innerId\"), \"class\": get(env, context, \"innerClass\")}, child0, null);\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.0\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, block = hooks.block;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n        dom.insertBoundary(fragment, null);\n        dom.insertBoundary(fragment, 0);\n        block(env, morph0, context, \"if\", [get(env, context, \"containerless\")], {}, child0, child1);\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('oxide/templates/components/liquid-measured', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.0\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, content = hooks.content;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n        dom.insertBoundary(fragment, null);\n        dom.insertBoundary(fragment, 0);\n        content(env, morph0, context, \"yield\");\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('oxide/templates/components/liquid-modal', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      var child0 = (function() {\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.0\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"    \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"div\");\n            dom.setAttribute(el1,\"role\",\"dialog\");\n            var el2 = dom.createTextNode(\"\\n      \");\n            dom.appendChild(el1, el2);\n            var el2 = dom.createComment(\"\");\n            dom.appendChild(el1, el2);\n            var el2 = dom.createTextNode(\"\\n    \");\n            dom.appendChild(el1, el2);\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, element = hooks.element, get = hooks.get, inline = hooks.inline;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var element0 = dom.childAt(fragment, [1]);\n            var morph0 = dom.createMorphAt(element0,1,1);\n            element(env, element0, context, \"bind-attr\", [], {\"class\": \":lf-dialog cc.options.dialogClass\"});\n            element(env, element0, context, \"bind-attr\", [], {\"aria-labelledby\": \"cc.options.ariaLabelledBy\", \"aria-label\": \"cc.options.ariaLabel\"});\n            inline(env, morph0, context, \"view\", [get(env, context, \"innerView\")], {\"dismiss\": \"dismiss\"});\n            return fragment;\n          }\n        };\n      }());\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.0\",\n        blockParams: 1,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"  \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement, blockArguments) {\n          var dom = env.dom;\n          var hooks = env.hooks, set = hooks.set, block = hooks.block, content = hooks.content;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n          var morph1 = dom.createMorphAt(fragment,2,2,contextualElement);\n          dom.insertBoundary(fragment, 0);\n          set(env, context, \"cc\", blockArguments[0]);\n          block(env, morph0, context, \"lm-container\", [], {\"action\": \"escape\", \"clickAway\": \"outsideClick\"}, child0, null);\n          content(env, morph1, context, \"lf-overlay\");\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.0\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, block = hooks.block;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n        dom.insertBoundary(fragment, null);\n        dom.insertBoundary(fragment, 0);\n        block(env, morph0, context, \"liquid-versions\", [], {\"name\": \"liquid-modal\", \"value\": get(env, context, \"currentContext\")}, child0, null);\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('oxide/templates/components/liquid-outlet', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.0\",\n        blockParams: 1,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement, blockArguments) {\n          var dom = env.dom;\n          var hooks = env.hooks, set = hooks.set, get = hooks.get, inline = hooks.inline;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n          dom.insertBoundary(fragment, null);\n          dom.insertBoundary(fragment, 0);\n          set(env, context, \"outletStateVersion\", blockArguments[0]);\n          inline(env, morph0, context, \"lf-outlet\", [], {\"staticState\": get(env, context, \"outletStateVersion\")});\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.0\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, block = hooks.block;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n        dom.insertBoundary(fragment, null);\n        dom.insertBoundary(fragment, 0);\n        block(env, morph0, context, \"liquid-with\", [get(env, context, \"outletState\")], {\"id\": get(env, context, \"innerId\"), \"class\": get(env, context, \"innerClass\"), \"use\": get(env, context, \"use\"), \"name\": \"liquid-outlet\", \"containerless\": get(env, context, \"containerless\")}, child0, null);\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('oxide/templates/components/liquid-spacer', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.0\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"  \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, content = hooks.content;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n          content(env, morph0, context, \"yield\");\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.0\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, block = hooks.block;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n        dom.insertBoundary(fragment, null);\n        dom.insertBoundary(fragment, 0);\n        block(env, morph0, context, \"liquid-measured\", [], {\"measurements\": get(env, context, \"measurements\")}, child0, null);\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('oxide/templates/components/liquid-versions', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      var child0 = (function() {\n        var child0 = (function() {\n          return {\n            isHTMLBars: true,\n            revision: \"Ember@1.11.0\",\n            blockParams: 0,\n            cachedFragment: null,\n            hasRendered: false,\n            build: function build(dom) {\n              var el0 = dom.createDocumentFragment();\n              var el1 = dom.createComment(\"\");\n              dom.appendChild(el0, el1);\n              return el0;\n            },\n            render: function render(context, env, contextualElement) {\n              var dom = env.dom;\n              var hooks = env.hooks, get = hooks.get, inline = hooks.inline;\n              dom.detectNamespace(contextualElement);\n              var fragment;\n              if (env.useFragmentCache && dom.canClone) {\n                if (this.cachedFragment === null) {\n                  fragment = this.build(dom);\n                  if (this.hasRendered) {\n                    this.cachedFragment = fragment;\n                  } else {\n                    this.hasRendered = true;\n                  }\n                }\n                if (this.cachedFragment) {\n                  fragment = dom.cloneNode(this.cachedFragment, true);\n                }\n              } else {\n                fragment = this.build(dom);\n              }\n              var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n              dom.insertBoundary(fragment, null);\n              dom.insertBoundary(fragment, 0);\n              inline(env, morph0, context, \"yield\", [get(env, context, \"version.value\")], {});\n              return fragment;\n            }\n          };\n        }());\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.0\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createComment(\"\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, get = hooks.get, block = hooks.block;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n            dom.insertBoundary(fragment, null);\n            dom.insertBoundary(fragment, 0);\n            block(env, morph0, context, \"liquid-child\", [], {\"version\": get(env, context, \"version\"), \"visible\": false, \"didRender\": \"childDidRender\", \"class\": get(env, context, \"innerClass\")}, child0, null);\n            return fragment;\n          }\n        };\n      }());\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.0\",\n        blockParams: 1,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement, blockArguments) {\n          var dom = env.dom;\n          var hooks = env.hooks, set = hooks.set, get = hooks.get, block = hooks.block;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n          dom.insertBoundary(fragment, null);\n          dom.insertBoundary(fragment, 0);\n          set(env, context, \"version\", blockArguments[0]);\n          block(env, morph0, context, \"if\", [get(env, context, \"version.shouldRender\")], {}, child0, null);\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.0\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, block = hooks.block;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n        dom.insertBoundary(fragment, null);\n        dom.insertBoundary(fragment, 0);\n        block(env, morph0, context, \"each\", [get(env, context, \"versions\")], {}, child0, null);\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('oxide/templates/components/liquid-with', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      var child0 = (function() {\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.0\",\n          blockParams: 1,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createComment(\"\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement, blockArguments) {\n            var dom = env.dom;\n            var hooks = env.hooks, set = hooks.set, get = hooks.get, inline = hooks.inline;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n            dom.insertBoundary(fragment, null);\n            dom.insertBoundary(fragment, 0);\n            set(env, context, \"version\", blockArguments[0]);\n            inline(env, morph0, context, \"yield\", [get(env, context, \"version\")], {});\n            return fragment;\n          }\n        };\n      }());\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.0\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, block = hooks.block;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n          dom.insertBoundary(fragment, null);\n          dom.insertBoundary(fragment, 0);\n          block(env, morph0, context, \"liquid-versions\", [], {\"value\": get(env, context, \"value\"), \"use\": get(env, context, \"use\"), \"name\": get(env, context, \"name\"), \"innerClass\": get(env, context, \"innerClass\")}, child0, null);\n          return fragment;\n        }\n      };\n    }());\n    var child1 = (function() {\n      var child0 = (function() {\n        var child0 = (function() {\n          return {\n            isHTMLBars: true,\n            revision: \"Ember@1.11.0\",\n            blockParams: 1,\n            cachedFragment: null,\n            hasRendered: false,\n            build: function build(dom) {\n              var el0 = dom.createDocumentFragment();\n              var el1 = dom.createComment(\"\");\n              dom.appendChild(el0, el1);\n              return el0;\n            },\n            render: function render(context, env, contextualElement, blockArguments) {\n              var dom = env.dom;\n              var hooks = env.hooks, set = hooks.set, get = hooks.get, inline = hooks.inline;\n              dom.detectNamespace(contextualElement);\n              var fragment;\n              if (env.useFragmentCache && dom.canClone) {\n                if (this.cachedFragment === null) {\n                  fragment = this.build(dom);\n                  if (this.hasRendered) {\n                    this.cachedFragment = fragment;\n                  } else {\n                    this.hasRendered = true;\n                  }\n                }\n                if (this.cachedFragment) {\n                  fragment = dom.cloneNode(this.cachedFragment, true);\n                }\n              } else {\n                fragment = this.build(dom);\n              }\n              var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n              dom.insertBoundary(fragment, null);\n              dom.insertBoundary(fragment, 0);\n              set(env, context, \"version\", blockArguments[0]);\n              inline(env, morph0, context, \"yield\", [get(env, context, \"version\")], {});\n              return fragment;\n            }\n          };\n        }());\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.0\",\n          blockParams: 1,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createComment(\"\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement, blockArguments) {\n            var dom = env.dom;\n            var hooks = env.hooks, set = hooks.set, get = hooks.get, block = hooks.block;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n            dom.insertBoundary(fragment, null);\n            dom.insertBoundary(fragment, 0);\n            set(env, context, \"container\", blockArguments[0]);\n            block(env, morph0, context, \"liquid-versions\", [], {\"value\": get(env, context, \"value\"), \"notify\": get(env, context, \"container\"), \"use\": get(env, context, \"use\"), \"name\": get(env, context, \"name\")}, child0, null);\n            return fragment;\n          }\n        };\n      }());\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.0\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, block = hooks.block;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n          dom.insertBoundary(fragment, null);\n          dom.insertBoundary(fragment, 0);\n          block(env, morph0, context, \"liquid-container\", [], {\"id\": get(env, context, \"innerId\"), \"class\": get(env, context, \"innerClass\")}, child0, null);\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.0\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, block = hooks.block;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n        dom.insertBoundary(fragment, null);\n        dom.insertBoundary(fragment, 0);\n        block(env, morph0, context, \"if\", [get(env, context, \"containerless\")], {}, child0, child1);\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('oxide/templates/components/ox-map', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.0\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"id\",\"map\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('oxide/templates/components/ox-tagger', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.0\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, inline = hooks.inline;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n        dom.insertBoundary(fragment, null);\n        dom.insertBoundary(fragment, 0);\n        inline(env, morph0, context, \"input\", [], {\"type\": \"text\", \"value\": get(env, context, \"value\")});\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('oxide/templates/dashboard', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      var child0 = (function() {\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.0\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"                            \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createComment(\"\");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, inline = hooks.inline;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n            inline(env, morph0, context, \"partial\", [\"car-list-item\"], {});\n            return fragment;\n          }\n        };\n      }());\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.0\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, block = hooks.block;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n          dom.insertBoundary(fragment, null);\n          dom.insertBoundary(fragment, 0);\n          block(env, morph0, context, \"each\", [get(env, context, \"activeCars\")], {\"keyword\": \"car\"}, child0, null);\n          return fragment;\n        }\n      };\n    }());\n    var child1 = (function() {\n      var child0 = (function() {\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.0\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"                            \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createComment(\"\");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, inline = hooks.inline;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n            inline(env, morph0, context, \"partial\", [\"car-list-item\"], {});\n            return fragment;\n          }\n        };\n      }());\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.0\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, block = hooks.block;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n          dom.insertBoundary(fragment, null);\n          dom.insertBoundary(fragment, 0);\n          block(env, morph0, context, \"each\", [get(env, context, \"model\")], {\"keyword\": \"car\"}, child0, null);\n          return fragment;\n        }\n      };\n    }());\n    var child2 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.0\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"                \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, inline = hooks.inline;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n          inline(env, morph0, context, \"partial\", [\"car-selected-card\"], {});\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.0\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"menu-nav\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"main-container\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"content-overlay\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"class\",\"cards\");\n        var el4 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"div\");\n        dom.setAttribute(el4,\"class\",\"card vehicle-list white\");\n        var el5 = dom.createTextNode(\"\\n                \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createElement(\"div\");\n        dom.setAttribute(el5,\"class\",\"card-content\");\n        var el6 = dom.createTextNode(\"\\n                    \");\n        dom.appendChild(el5, el6);\n        var el6 = dom.createElement(\"div\");\n        dom.setAttribute(el6,\"class\",\"card-title\");\n        var el7 = dom.createTextNode(\"\\n                        \");\n        dom.appendChild(el6, el7);\n        var el7 = dom.createElement(\"span\");\n        var el8 = dom.createTextNode(\"Tracked Vehicles\");\n        dom.appendChild(el7, el8);\n        dom.appendChild(el6, el7);\n        var el7 = dom.createTextNode(\"\\n                        \");\n        dom.appendChild(el6, el7);\n        var el7 = dom.createElement(\"i\");\n        dom.setAttribute(el7,\"class\",\"mdi-navigation-expand-less right\");\n        dom.appendChild(el6, el7);\n        var el7 = dom.createTextNode(\"\\n                    \");\n        dom.appendChild(el6, el7);\n        dom.appendChild(el5, el6);\n        var el6 = dom.createTextNode(\"\\n                    \");\n        dom.appendChild(el5, el6);\n        var el6 = dom.createElement(\"div\");\n        dom.setAttribute(el6,\"class\",\"filter-selector\");\n        var el7 = dom.createTextNode(\"\\n                        \");\n        dom.appendChild(el6, el7);\n        var el7 = dom.createElement(\"form\");\n        dom.setAttribute(el7,\"action\",\"#\");\n        var el8 = dom.createTextNode(\"\\n                            \");\n        dom.appendChild(el7, el8);\n        var el8 = dom.createElement(\"p\");\n        var el9 = dom.createTextNode(\"\\n                                \");\n        dom.appendChild(el8, el9);\n        var el9 = dom.createComment(\"\");\n        dom.appendChild(el8, el9);\n        var el9 = dom.createTextNode(\"\\n                                \");\n        dom.appendChild(el8, el9);\n        var el9 = dom.createElement(\"label\");\n        dom.setAttribute(el9,\"for\",\"showOnlyActiveCars\");\n        var el10 = dom.createTextNode(\"Show Active Cars Only\");\n        dom.appendChild(el9, el10);\n        dom.appendChild(el8, el9);\n        var el9 = dom.createTextNode(\"\\n                            \");\n        dom.appendChild(el8, el9);\n        dom.appendChild(el7, el8);\n        var el8 = dom.createTextNode(\"\\n                        \");\n        dom.appendChild(el7, el8);\n        dom.appendChild(el6, el7);\n        var el7 = dom.createTextNode(\"\\n                    \");\n        dom.appendChild(el6, el7);\n        dom.appendChild(el5, el6);\n        var el6 = dom.createTextNode(\"\\n                    \");\n        dom.appendChild(el5, el6);\n        var el6 = dom.createElement(\"ul\");\n        dom.setAttribute(el6,\"class\",\"carlist collection\");\n        var el7 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el6, el7);\n        var el7 = dom.createComment(\"\");\n        dom.appendChild(el6, el7);\n        var el7 = dom.createTextNode(\"                    \");\n        dom.appendChild(el6, el7);\n        dom.appendChild(el5, el6);\n        var el6 = dom.createTextNode(\"\\n                \");\n        dom.appendChild(el5, el6);\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"menu-flyout\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, inline = hooks.inline, element = hooks.element, get = hooks.get, block = hooks.block;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var element0 = dom.childAt(fragment, [2]);\n        var element1 = dom.childAt(element0, [1, 1]);\n        var element2 = dom.childAt(element1, [1, 1]);\n        var element3 = dom.childAt(element2, [1, 3]);\n        var element4 = dom.childAt(fragment, [4]);\n        var morph0 = dom.createMorphAt(dom.childAt(fragment, [0]),1,1);\n        var morph1 = dom.createMorphAt(dom.childAt(element2, [3, 1, 1]),1,1);\n        var morph2 = dom.createMorphAt(dom.childAt(element2, [5]),1,1);\n        var morph3 = dom.createMorphAt(element1,3,3);\n        var morph4 = dom.createMorphAt(element0,3,3);\n        var morph5 = dom.createMorphAt(element4,1,1);\n        inline(env, morph0, context, \"partial\", [\"menu\"], {});\n        element(env, element3, context, \"action\", [\"toggleVehicleList\"], {});\n        inline(env, morph1, context, \"input\", [], {\"type\": \"checkbox\", \"id\": \"showOnlyActiveCars\", \"checked\": get(env, context, \"showOnlyActiveCars\")});\n        block(env, morph2, context, \"if\", [get(env, context, \"showOnlyActiveCars\")], {}, child0, child1);\n        block(env, morph3, context, \"if\", [get(env, context, \"selectedCar\")], {}, child2, null);\n        inline(env, morph4, context, \"ox-map\", [], {\"mapReference\": get(env, context, \"mapReference\")});\n        element(env, element4, context, \"action\", [\"toggleSideNav\"], {});\n        inline(env, morph5, context, \"partial\", [\"menu\"], {});\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('oxide/templates/login', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.0\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"                            \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"div\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n                            \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"div\");\n          dom.setAttribute(el1,\"class\",\"welcome-loading\");\n          var el2 = dom.createTextNode(\"\\n                                \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createComment(\"\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n                            \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, element = hooks.element, content = hooks.content;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var element0 = dom.childAt(fragment, [1]);\n          var morph0 = dom.createMorphAt(dom.childAt(fragment, [3]),1,1);\n          element(env, element0, context, \"bind-attr\", [], {\"class\": \"loading\"});\n          content(env, morph0, context, \"cc-spinner\");\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.0\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"bg\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"container\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"class\",\"row\");\n        var el4 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"div\");\n        dom.setAttribute(el4,\"class\",\"col s10 m8 offset-m2 welcome-offset\");\n        var el5 = dom.createTextNode(\"\\n                \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createElement(\"div\");\n        dom.setAttribute(el5,\"class\",\"card card-account\");\n        var el6 = dom.createTextNode(\"\\n                    \");\n        dom.appendChild(el5, el6);\n        var el6 = dom.createElement(\"div\");\n        dom.setAttribute(el6,\"class\",\"card-image\");\n        var el7 = dom.createTextNode(\"\\n                        \");\n        dom.appendChild(el6, el7);\n        var el7 = dom.createElement(\"img\");\n        dom.setAttribute(el7,\"src\",\"assets/img/loginHead.jpg\");\n        dom.appendChild(el6, el7);\n        var el7 = dom.createTextNode(\"\\n                    \");\n        dom.appendChild(el6, el7);\n        dom.appendChild(el5, el6);\n        var el6 = dom.createTextNode(\"\\n                    \");\n        dom.appendChild(el5, el6);\n        var el6 = dom.createElement(\"div\");\n        dom.setAttribute(el6,\"class\",\"card-content\");\n        var el7 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el6, el7);\n        var el7 = dom.createComment(\"\");\n        dom.appendChild(el6, el7);\n        var el7 = dom.createTextNode(\"                        \");\n        dom.appendChild(el6, el7);\n        var el7 = dom.createElement(\"span\");\n        dom.setAttribute(el7,\"class\",\"card-title grey-text text-darken-4\");\n        var el8 = dom.createTextNode(\"Connected Car Client\");\n        dom.appendChild(el7, el8);\n        dom.appendChild(el6, el7);\n        var el7 = dom.createTextNode(\"\\n                        \");\n        dom.appendChild(el6, el7);\n        var el7 = dom.createElement(\"p\");\n        var el8 = dom.createTextNode(\"Please login with your Nitrogen.io account.\");\n        dom.appendChild(el7, el8);\n        dom.appendChild(el6, el7);\n        var el7 = dom.createTextNode(\"\\n                        \");\n        dom.appendChild(el6, el7);\n        var el7 = dom.createElement(\"div\");\n        dom.setAttribute(el7,\"class\",\"row\");\n        var el8 = dom.createTextNode(\"\\n                            \");\n        dom.appendChild(el7, el8);\n        var el8 = dom.createElement(\"form\");\n        dom.setAttribute(el8,\"id\",\"login\");\n        var el9 = dom.createTextNode(\"\\n                                \");\n        dom.appendChild(el8, el9);\n        var el9 = dom.createElement(\"div\");\n        dom.setAttribute(el9,\"class\",\"input-field col s12\");\n        var el10 = dom.createTextNode(\"\\n                                    \");\n        dom.appendChild(el9, el10);\n        var el10 = dom.createElement(\"i\");\n        dom.setAttribute(el10,\"class\",\"mdi-action-bookmark-outline prefix\");\n        dom.appendChild(el9, el10);\n        var el10 = dom.createTextNode(\"\\n                                    \");\n        dom.appendChild(el9, el10);\n        var el10 = dom.createComment(\"\");\n        dom.appendChild(el9, el10);\n        var el10 = dom.createTextNode(\"\\n                                    \");\n        dom.appendChild(el9, el10);\n        var el10 = dom.createElement(\"label\");\n        dom.setAttribute(el10,\"for\",\"identification\");\n        var el11 = dom.createTextNode(\"Username\");\n        dom.appendChild(el10, el11);\n        dom.appendChild(el9, el10);\n        var el10 = dom.createTextNode(\"\\n                                \");\n        dom.appendChild(el9, el10);\n        dom.appendChild(el8, el9);\n        var el9 = dom.createTextNode(\"\\n                                \");\n        dom.appendChild(el8, el9);\n        var el9 = dom.createElement(\"div\");\n        dom.setAttribute(el9,\"class\",\"input-field col s12\");\n        var el10 = dom.createTextNode(\"\\n                                    \");\n        dom.appendChild(el9, el10);\n        var el10 = dom.createElement(\"i\");\n        dom.setAttribute(el10,\"class\",\"mdi-action-bookmark-outline prefix\");\n        dom.appendChild(el9, el10);\n        var el10 = dom.createTextNode(\"\\n                                    \");\n        dom.appendChild(el9, el10);\n        var el10 = dom.createComment(\"\");\n        dom.appendChild(el9, el10);\n        var el10 = dom.createTextNode(\"\\n                                    \");\n        dom.appendChild(el9, el10);\n        var el10 = dom.createElement(\"label\");\n        dom.setAttribute(el10,\"for\",\"password\");\n        var el11 = dom.createTextNode(\"Password\");\n        dom.appendChild(el10, el11);\n        dom.appendChild(el9, el10);\n        var el10 = dom.createTextNode(\"\\n                                \");\n        dom.appendChild(el9, el10);\n        dom.appendChild(el8, el9);\n        var el9 = dom.createTextNode(\"\\n                                \");\n        dom.appendChild(el8, el9);\n        var el9 = dom.createElement(\"div\");\n        dom.setAttribute(el9,\"class\",\"col s12\");\n        var el10 = dom.createTextNode(\"\\n                                    \");\n        dom.appendChild(el9, el10);\n        var el10 = dom.createElement(\"br\");\n        dom.appendChild(el9, el10);\n        var el10 = dom.createTextNode(\"\\n                                    \");\n        dom.appendChild(el9, el10);\n        var el10 = dom.createElement(\"a\");\n        dom.setAttribute(el10,\"class\",\"waves-effect waves-light btn center\");\n        var el11 = dom.createTextNode(\"\\n                                        \");\n        dom.appendChild(el10, el11);\n        var el11 = dom.createElement(\"i\");\n        dom.setAttribute(el11,\"class\",\"mdi-action-exit-to-app left\");\n        dom.appendChild(el10, el11);\n        var el11 = dom.createTextNode(\"Login\\n                                    \");\n        dom.appendChild(el10, el11);\n        dom.appendChild(el9, el10);\n        var el10 = dom.createTextNode(\"\\n                                \");\n        dom.appendChild(el9, el10);\n        dom.appendChild(el8, el9);\n        var el9 = dom.createTextNode(\"\\n                            \");\n        dom.appendChild(el8, el9);\n        dom.appendChild(el7, el8);\n        var el8 = dom.createTextNode(\"\\n                        \");\n        dom.appendChild(el7, el8);\n        dom.appendChild(el6, el7);\n        var el7 = dom.createTextNode(\"\\n                    \");\n        dom.appendChild(el6, el7);\n        dom.appendChild(el5, el6);\n        var el6 = dom.createTextNode(\"\\n                \");\n        dom.appendChild(el5, el6);\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, block = hooks.block, element = hooks.element, inline = hooks.inline;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var element1 = dom.childAt(fragment, [0, 1, 1, 1, 1, 3]);\n        var element2 = dom.childAt(element1, [7, 1]);\n        var element3 = dom.childAt(element2, [5, 3]);\n        var morph0 = dom.createMorphAt(element1,1,1);\n        var morph1 = dom.createMorphAt(dom.childAt(element2, [1]),3,3);\n        var morph2 = dom.createMorphAt(dom.childAt(element2, [3]),3,3);\n        block(env, morph0, context, \"if\", [get(env, context, \"loading\")], {}, child0, null);\n        element(env, element2, context, \"action\", [\"authenticate\"], {\"on\": \"submit\"});\n        inline(env, morph1, context, \"input\", [], {\"class\": \"validate\", \"id\": \"identification\", \"value\": get(env, context, \"identification\")});\n        inline(env, morph2, context, \"input\", [], {\"class\": \"validate\", \"id\": \"password\", \"type\": \"password\", \"value\": get(env, context, \"password\")});\n        element(env, element3, context, \"action\", [\"login\"], {});\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('oxide/templates/settings', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.0\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"                                \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"i\");\n          dom.setAttribute(el1,\"class\",\"fa fa-check-circle\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          return fragment;\n        }\n      };\n    }());\n    var child1 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.0\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"                                \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"i\");\n          dom.setAttribute(el1,\"class\",\"fa fa-times-circle\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          return fragment;\n        }\n      };\n    }());\n    var child2 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.0\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"                            \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"div\");\n          dom.setAttribute(el1,\"class\",\"col-md-12\");\n          var el2 = dom.createTextNode(\"\\n                                \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"pre\");\n          var el3 = dom.createComment(\"\");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n                            \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, content = hooks.content;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(dom.childAt(fragment, [1, 1]),0,0);\n          content(env, morph0, context, \"configString\");\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.0\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"container\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"row\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h2\");\n        var el4 = dom.createElement(\"i\");\n        dom.setAttribute(el4,\"class\",\"fa fa-cogs\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\" Settings\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"row\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"class\",\"panel panel-default\");\n        var el4 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"div\");\n        dom.setAttribute(el4,\"class\",\"panel-body\");\n        var el5 = dom.createTextNode(\"\\n                \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createElement(\"div\");\n        dom.setAttribute(el5,\"class\",\"container-fluid\");\n        var el6 = dom.createTextNode(\"\\n                    \");\n        dom.appendChild(el5, el6);\n        var el6 = dom.createElement(\"h5\");\n        var el7 = dom.createTextNode(\"Local Storage\");\n        dom.appendChild(el6, el7);\n        dom.appendChild(el5, el6);\n        var el6 = dom.createTextNode(\"\\n                    \");\n        dom.appendChild(el5, el6);\n        var el6 = dom.createElement(\"div\");\n        dom.setAttribute(el6,\"class\",\"row\");\n        var el7 = dom.createTextNode(\"\\n                        \");\n        dom.appendChild(el6, el7);\n        var el7 = dom.createElement(\"div\");\n        dom.setAttribute(el7,\"class\",\"col-md-9\");\n        var el8 = dom.createTextNode(\"\\n                            \");\n        dom.appendChild(el7, el8);\n        var el8 = dom.createElement(\"p\");\n        var el9 = dom.createTextNode(\"We save information using Local Storage, a feature of your browser that allows apps to save data on the local harddrive. Since the app is still in development, things can still go wrong - and it sometimes makes sense to just delete everything and start fresh.\");\n        dom.appendChild(el8, el9);\n        dom.appendChild(el7, el8);\n        var el8 = dom.createTextNode(\"\\n                        \");\n        dom.appendChild(el7, el8);\n        dom.appendChild(el6, el7);\n        var el7 = dom.createTextNode(\"\\n                        \");\n        dom.appendChild(el6, el7);\n        var el7 = dom.createElement(\"div\");\n        dom.setAttribute(el7,\"class\",\"col-md-3 text-right right\");\n        var el8 = dom.createTextNode(\"\\n                            \");\n        dom.appendChild(el7, el8);\n        var el8 = dom.createElement(\"button\");\n        dom.setAttribute(el8,\"class\",\"btn btn-danger\");\n        var el9 = dom.createTextNode(\"\\n                            Clear Storage \");\n        dom.appendChild(el8, el9);\n        var el9 = dom.createElement(\"span\");\n        dom.setAttribute(el9,\"class\",\"badge\");\n        var el10 = dom.createComment(\"\");\n        dom.appendChild(el9, el10);\n        var el10 = dom.createTextNode(\" MB\");\n        dom.appendChild(el9, el10);\n        dom.appendChild(el8, el9);\n        var el9 = dom.createTextNode(\"\\n                            \");\n        dom.appendChild(el8, el9);\n        dom.appendChild(el7, el8);\n        var el8 = dom.createTextNode(\"\\n                        \");\n        dom.appendChild(el7, el8);\n        dom.appendChild(el6, el7);\n        var el7 = dom.createTextNode(\"\\n                    \");\n        dom.appendChild(el6, el7);\n        dom.appendChild(el5, el6);\n        var el6 = dom.createTextNode(\"\\n                    \");\n        dom.appendChild(el5, el6);\n        var el6 = dom.createElement(\"hr\");\n        dom.appendChild(el5, el6);\n        var el6 = dom.createTextNode(\"\\n                    \");\n        dom.appendChild(el5, el6);\n        var el6 = dom.createElement(\"h5\");\n        var el7 = dom.createTextNode(\"Nitrogen.io\");\n        dom.appendChild(el6, el7);\n        dom.appendChild(el5, el6);\n        var el6 = dom.createTextNode(\"\\n                    \");\n        dom.appendChild(el5, el6);\n        var el6 = dom.createElement(\"div\");\n        dom.setAttribute(el6,\"class\",\"row\");\n        var el7 = dom.createTextNode(\"\\n                        \");\n        dom.appendChild(el6, el7);\n        var el7 = dom.createElement(\"div\");\n        dom.setAttribute(el7,\"class\",\"col-md-12\");\n        var el8 = dom.createTextNode(\"\\n                            \");\n        dom.appendChild(el7, el8);\n        var el8 = dom.createElement(\"p\");\n        var el9 = dom.createTextNode(\"This app uses the open-source 'Internet of Things' Gateway Nitrogen.io to keep track of your devices.\");\n        dom.appendChild(el8, el9);\n        dom.appendChild(el7, el8);\n        var el8 = dom.createTextNode(\"\\n                        \");\n        dom.appendChild(el7, el8);\n        dom.appendChild(el6, el7);\n        var el7 = dom.createTextNode(\"\\n                        \");\n        dom.appendChild(el6, el7);\n        var el7 = dom.createElement(\"div\");\n        dom.setAttribute(el7,\"class\",\"col-md-2\");\n        var el8 = dom.createElement(\"strong\");\n        var el9 = dom.createTextNode(\"Secure:\");\n        dom.appendChild(el8, el9);\n        dom.appendChild(el7, el8);\n        var el8 = dom.createTextNode(\" \\n\");\n        dom.appendChild(el7, el8);\n        var el8 = dom.createComment(\"\");\n        dom.appendChild(el7, el8);\n        var el8 = dom.createTextNode(\"                        \");\n        dom.appendChild(el7, el8);\n        dom.appendChild(el6, el7);\n        var el7 = dom.createTextNode(\"\\n                        \");\n        dom.appendChild(el6, el7);\n        var el7 = dom.createElement(\"div\");\n        dom.setAttribute(el7,\"class\",\"col-md-2\");\n        var el8 = dom.createElement(\"strong\");\n        var el9 = dom.createTextNode(\"Host:\");\n        dom.appendChild(el8, el9);\n        dom.appendChild(el7, el8);\n        var el8 = dom.createTextNode(\" \");\n        dom.appendChild(el7, el8);\n        var el8 = dom.createComment(\"\");\n        dom.appendChild(el7, el8);\n        dom.appendChild(el6, el7);\n        var el7 = dom.createTextNode(\"\\n                        \");\n        dom.appendChild(el6, el7);\n        var el7 = dom.createElement(\"div\");\n        dom.setAttribute(el7,\"class\",\"col-md-2\");\n        var el8 = dom.createElement(\"strong\");\n        var el9 = dom.createTextNode(\"Protocol:\");\n        dom.appendChild(el8, el9);\n        dom.appendChild(el7, el8);\n        var el8 = dom.createTextNode(\" \");\n        dom.appendChild(el7, el8);\n        var el8 = dom.createComment(\"\");\n        dom.appendChild(el7, el8);\n        dom.appendChild(el6, el7);\n        var el7 = dom.createTextNode(\"\\n                        \");\n        dom.appendChild(el6, el7);\n        var el7 = dom.createElement(\"div\");\n        dom.setAttribute(el7,\"class\",\"col-md-2\");\n        var el8 = dom.createElement(\"strong\");\n        var el9 = dom.createTextNode(\"Port:\");\n        dom.appendChild(el8, el9);\n        dom.appendChild(el7, el8);\n        var el8 = dom.createTextNode(\" \");\n        dom.appendChild(el7, el8);\n        var el8 = dom.createComment(\"\");\n        dom.appendChild(el7, el8);\n        dom.appendChild(el6, el7);\n        var el7 = dom.createTextNode(\"\\n                        \");\n        dom.appendChild(el6, el7);\n        var el7 = dom.createElement(\"div\");\n        dom.setAttribute(el7,\"class\",\"col-md-4\");\n        var el8 = dom.createElement(\"strong\");\n        var el9 = dom.createTextNode(\"Base:\");\n        dom.appendChild(el8, el9);\n        dom.appendChild(el7, el8);\n        var el8 = dom.createTextNode(\" \");\n        dom.appendChild(el7, el8);\n        var el8 = dom.createComment(\"\");\n        dom.appendChild(el7, el8);\n        dom.appendChild(el6, el7);\n        var el7 = dom.createTextNode(\"\\n                    \");\n        dom.appendChild(el6, el7);\n        dom.appendChild(el5, el6);\n        var el6 = dom.createTextNode(\"\\n                    \");\n        dom.appendChild(el5, el6);\n        var el6 = dom.createElement(\"hr\");\n        dom.appendChild(el5, el6);\n        var el6 = dom.createTextNode(\"\\n                    \");\n        dom.appendChild(el5, el6);\n        var el6 = dom.createElement(\"h5\");\n        var el7 = dom.createTextNode(\"Environment Configuration\");\n        dom.appendChild(el6, el7);\n        dom.appendChild(el5, el6);\n        var el6 = dom.createTextNode(\"\\n                    \");\n        dom.appendChild(el5, el6);\n        var el6 = dom.createElement(\"div\");\n        dom.setAttribute(el6,\"class\",\"row\");\n        var el7 = dom.createTextNode(\"\\n                        \");\n        dom.appendChild(el6, el7);\n        var el7 = dom.createElement(\"div\");\n        dom.setAttribute(el7,\"class\",\"col-md-9\");\n        var el8 = dom.createTextNode(\"\\n                            \");\n        dom.appendChild(el7, el8);\n        var el8 = dom.createElement(\"p\");\n        var el9 = dom.createTextNode(\"This is the full configuration. Unless you're trying to fix something, you probably don't want to see this.\");\n        dom.appendChild(el8, el9);\n        dom.appendChild(el7, el8);\n        var el8 = dom.createTextNode(\"\\n                        \");\n        dom.appendChild(el7, el8);\n        dom.appendChild(el6, el7);\n        var el7 = dom.createTextNode(\"\\n                        \");\n        dom.appendChild(el6, el7);\n        var el7 = dom.createElement(\"div\");\n        dom.setAttribute(el7,\"class\",\"col-md-3 text-right right\");\n        var el8 = dom.createTextNode(\"\\n                            \");\n        dom.appendChild(el7, el8);\n        var el8 = dom.createElement(\"button\");\n        dom.setAttribute(el8,\"class\",\"btn btn-default\");\n        var el9 = dom.createTextNode(\"\\n                            Show ENV Config\\n                            \");\n        dom.appendChild(el8, el9);\n        dom.appendChild(el7, el8);\n        var el8 = dom.createTextNode(\"\\n                        \");\n        dom.appendChild(el7, el8);\n        dom.appendChild(el6, el7);\n        var el7 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el6, el7);\n        var el7 = dom.createComment(\"\");\n        dom.appendChild(el6, el7);\n        var el7 = dom.createTextNode(\"                    \");\n        dom.appendChild(el6, el7);\n        dom.appendChild(el5, el6);\n        var el6 = dom.createTextNode(\"\\n                \");\n        dom.appendChild(el5, el6);\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, inline = hooks.inline, element = hooks.element, content = hooks.content, get = hooks.get, block = hooks.block;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var element0 = dom.childAt(fragment, [2, 3, 1, 1, 1]);\n        var element1 = dom.childAt(element0, [3, 3, 1]);\n        var element2 = dom.childAt(element0, [9]);\n        var element3 = dom.childAt(element0, [15]);\n        var element4 = dom.childAt(element3, [3, 1]);\n        var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n        var morph1 = dom.createMorphAt(dom.childAt(element1, [1]),0,0);\n        var morph2 = dom.createMorphAt(dom.childAt(element2, [3]),2,2);\n        var morph3 = dom.createMorphAt(dom.childAt(element2, [5]),2,2);\n        var morph4 = dom.createMorphAt(dom.childAt(element2, [7]),2,2);\n        var morph5 = dom.createMorphAt(dom.childAt(element2, [9]),2,2);\n        var morph6 = dom.createMorphAt(dom.childAt(element2, [11]),2,2);\n        var morph7 = dom.createMorphAt(element3,5,5);\n        dom.insertBoundary(fragment, 0);\n        inline(env, morph0, context, \"partial\", [\"navbar\"], {});\n        element(env, element1, context, \"action\", [\"clearLocalStorage\"], {});\n        content(env, morph1, context, \"localStorageSize\");\n        block(env, morph2, context, \"if\", [get(env, context, \"connectionSecure\")], {}, child0, child1);\n        content(env, morph3, context, \"config.nitrogen.host\");\n        content(env, morph4, context, \"config.nitrogen.protocol\");\n        content(env, morph5, context, \"config.nitrogen.http_port\");\n        content(env, morph6, context, \"config.nitrogen.base_url\");\n        element(env, element4, context, \"action\", [\"toggleShowConfig\"], {\"target\": get(env, context, \"view\")});\n        block(env, morph7, context, \"if\", [get(env, context, \"view.showConfigString\")], {}, child2, null);\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('oxide/tests/adapters/application.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - adapters');\n  test('adapters/application.js should pass jshint', function() { \n    ok(true, 'adapters/application.js should pass jshint.'); \n  });\n\n});","define('oxide/tests/adapters/device.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - adapters');\n  test('adapters/device.js should pass jshint', function() { \n    ok(true, 'adapters/device.js should pass jshint.'); \n  });\n\n});","define('oxide/tests/adapters/user.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - adapters');\n  test('adapters/user.js should pass jshint', function() { \n    ok(true, 'adapters/user.js should pass jshint.'); \n  });\n\n});","define('oxide/tests/app.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - .');\n  test('app.js should pass jshint', function() { \n    ok(true, 'app.js should pass jshint.'); \n  });\n\n});","define('oxide/tests/authenticators/nitrogen.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - authenticators');\n  test('authenticators/nitrogen.js should pass jshint', function() { \n    ok(true, 'authenticators/nitrogen.js should pass jshint.'); \n  });\n\n});","define('oxide/tests/components/cc-spinner.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - components');\n  test('components/cc-spinner.js should pass jshint', function() { \n    ok(true, 'components/cc-spinner.js should pass jshint.'); \n  });\n\n});","define('oxide/tests/components/ox-map.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - components');\n  test('components/ox-map.js should pass jshint', function() { \n    ok(true, 'components/ox-map.js should pass jshint.'); \n  });\n\n});","define('oxide/tests/controllers/application.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers');\n  test('controllers/application.js should pass jshint', function() { \n    ok(true, 'controllers/application.js should pass jshint.'); \n  });\n\n});","define('oxide/tests/controllers/dashboard.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers');\n  test('controllers/dashboard.js should pass jshint', function() { \n    ok(true, 'controllers/dashboard.js should pass jshint.'); \n  });\n\n});","define('oxide/tests/controllers/login.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers');\n  test('controllers/login.js should pass jshint', function() { \n    ok(true, 'controllers/login.js should pass jshint.'); \n  });\n\n});","define('oxide/tests/controllers/nitrogen.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers');\n  test('controllers/nitrogen.js should pass jshint', function() { \n    ok(true, 'controllers/nitrogen.js should pass jshint.'); \n  });\n\n});","define('oxide/tests/controllers/settings.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers');\n  test('controllers/settings.js should pass jshint', function() { \n    ok(true, 'controllers/settings.js should pass jshint.'); \n  });\n\n});","define('oxide/tests/helpers/ajax-mock', function () {\n\n    'use strict';\n\n    $.mockjax({\n        url: \"http://localhost:3000/vehicles/*/trips\",\n        responseText: {\n            data: [{\n                id: \"acf3ba91-8ee0-4b64-814a-52df6bdad442\",\n                type: \"trip\",\n                trip_events: [{\n                    id: \"553ac599cb49af5c772f9983\",\n                    event_type: \"direction_change\",\n                    type: \"event\",\n                    timestamp: \"2014-06-27T03:28:35 +07:00\",\n                    speed: 8,\n                    location: {\n                        id: \"13412\",\n                        latitude: 56.649237,\n                        longitude: 136.74491,\n                        direction: 51,\n                        altitude: 681\n                    }\n                }, {\n                    id: \"553ac599685144ba00e7f8cd\",\n                    event_type: \"engine_stop\",\n                    type: \"event\",\n                    timestamp: \"2014-05-22T07:05:24 +07:00\",\n                    speed: 3,\n                    location: {\n                        id: \"13413\",\n                        latitude: -21.687184,\n                        longitude: -77.175881,\n                        direction: 158,\n                        altitude: 9\n                    }\n                }],\n                links: {\n                    self: \"http://localhost:3000/vehicles/553ac59934dff597a9708c71/trip/acf3ba91-8ee0-4b64-814a-52df6bdad442\",\n                    driver: {\n                        related: \"http://localhost:3000/drivers/acf3ba91-8ee0-4b64-814a-52df6bdad442\"\n                    }\n                }\n            }]\n        }\n    });\n\n    $.mockjax({\n        url: \"http://localhost:3000/vehicles/553ac59934dff597a9708c71\",\n        responseText: {\n            data: [{\n                type: \"vehicle\",\n                name: \"553ac59934dff597a9708c71\",\n                id: \"553ac59934dff597a9708c71\",\n                is_active: true,\n                vin: \"553ac59993884615b15b93d3\",\n                make: \"Toyota\",\n                model: \"Prius\",\n                production_year: 2013,\n                mileage: \"4,884.3\",\n                links: {\n                    self: \"http://localhost:3000/vehicles/553ac59934dff597a9708c71\",\n                    trips: {\n                        related: \"http://localhost:3000/trips/553ac59934dff597a9708c71\",\n                        linkage: [{\n                            type: \"trip\",\n                            id: \"acf3ba91-8ee0-4b64-814a-52df6bdad442\"\n                        }, {\n                            type: \"trip\",\n                            id: \"acf3ba91-8ee0-4b64-814a-52df6bdad443\"\n                        }]\n                    }\n                }\n            }],\n            included: [{\n                id: \"acf3ba91-8ee0-4b64-814a-52df6bdad442\",\n                type: \"trip\",\n                trip_events: [{\n                    id: \"553ac599cb49af5c772f9983\",\n                    event_type: \"direction_change\",\n                    type: \"event\",\n                    timestamp: \"2014-06-27T03:28:35 +07:00\",\n                    speed: 8,\n                    location: {\n                        id: \"13412\",\n                        latitude: 56.649237,\n                        longitude: 136.74491,\n                        direction: 51,\n                        altitude: 681\n                    }\n                }, {\n                    id: \"553ac599685144ba00e7f8cd\",\n                    event_type: \"engine_stop\",\n                    type: \"event\",\n                    timestamp: \"2014-05-22T07:05:24 +07:00\",\n                    speed: 3,\n                    location: {\n                        id: \"13413\",\n                        latitude: -21.687184,\n                        longitude: -77.175881,\n                        direction: 158,\n                        altitude: 9\n                    }\n                }],\n                links: {\n                    self: \"http://localhost:3000/vehicles/553ac59934dff597a9708c71/trip/acf3ba91-8ee0-4b64-814a-52df6bdad442\",\n                    driver: {\n                        related: \"http://localhost:3000/drivers/acf3ba91-8ee0-4b64-814a-52df6bdad442\"\n                    }\n                }\n            }, {\n                id: \"acf3ba91-8ee0-4b64-814a-52df6bdad443\",\n                type: \"trip\",\n                trip_events: [{\n                    id: \"553ac599cb49af5c772f9982\",\n                    event_type: \"direction_change\",\n                    timestamp: \"2014-06-27T03:28:35 +07:00\",\n                    speed: 8,\n                    location: {\n                        id: \"13414\",\n                        latitude: 56.649237,\n                        longitude: 136.74491,\n                        direction: 51,\n                        altitude: 681\n                    }\n                }, {\n                    id: \"553ac599685144ba00e7f8cb\",\n                    event_type: \"engine_stop\",\n                    timestamp: \"2014-05-22T07:05:24 +07:00\",\n                    speed: 3,\n                    location: {\n                        id: \"13415\",\n                        latitude: -21.687184,\n                        longitude: -77.175881,\n                        direction: 158,\n                        altitude: 9\n                    }\n                }],\n                links: {\n                    self: \"http://localhost:3000/trips/acf3ba91-8ee0-4b64-814a-52df6bdad442\",\n                    driver: {\n                        related: \"http://localhost:3000/drivers/553ac59965094b476a817fa6\"\n                    }\n                }\n            }]\n        }\n    });\n\n    $.mockjax({\n        url: \"http://localhost:3000/vehicles\",\n        responseText: {\n            data: [{\n                id: \"553ac59934dff597a9708c71\",\n                is_active: true,\n                links: {\n                    self: \"http://localhost:3000/vehicles/553ac59934dff597a9708c71\",\n                    trips: {\n                        related: \"http://localhost:3000/trips/553ac59934dff597a9708c71\"\n                    }\n                },\n                make: \"Toyota\",\n                mileage: \"4,884.3\",\n                model: \"Prius\",\n                name: \"553ac59934dff597a9708c71\",\n                production_year: 2013,\n                type: \"vehicle\",\n                vin: \"553ac59993884615b15b93d3\"\n            }]\n        }\n    });\n\n    $.mockjax({\n        url: \"http://localhost:3000/drivers/*\",\n        responseText: {\n            data: [{\n                id: \"553ac59965094b476a817fa6\",\n                type: \"driver\",\n                name: \"Wilcox, Fitzgerald\"\n            }]\n        }\n    });\n\n    $.mockjax({\n        url: \"http://localhost:3000/drivers\",\n        responseText: {\n            data: [{\n                id: \"553ac59965094b476a817fa6\",\n                type: \"driver\",\n                name: \"Wilcox, Fitzgerald\"\n            }]\n        }\n    });\n    $.mockjax({\n        url: \"http://localhost:3000/trips/*/driver\",\n        responseText: {\n            data: [{\n                id: \"553ac59965094b476a817fa6\",\n                type: \"driver\",\n                name: \"Wilcox, Fitzgerald\"\n            }]\n        }\n    });\n\n    $.mockjax({\n        url: \"http://localhost:3000/trips/*\",\n        responseText: {\n            data: [{\n                id: \"acf3ba91-8ee0-4b64-814a-52df6bdad442\",\n                type: \"trip\",\n                trip_events: [{\n                    id: \"553ac599cb49af5c772f9983\",\n                    event_type: \"direction_change\",\n                    type: \"event\",\n                    timestamp: \"2014-06-27T03:28:35 +07:00\",\n                    speed: 8,\n                    location: {\n                        id: \"13412\",\n                        latitude: 56.649237,\n                        longitude: 136.74491,\n                        direction: 51,\n                        altitude: 681\n                    }\n                }, {\n                    id: \"553ac599685144ba00e7f8cd\",\n                    event_type: \"engine_stop\",\n                    type: \"event\",\n                    timestamp: \"2014-05-22T07:05:24 +07:00\",\n                    speed: 3,\n                    location: {\n                        id: \"13413\",\n                        latitude: -21.687184,\n                        longitude: -77.175881,\n                        direction: 158,\n                        altitude: 9\n                    }\n                }],\n                links: {\n                    self: \"http://localhost:3000/vehicles/553ac59934dff597a9708c71/trip/acf3ba91-8ee0-4b64-814a-52df6bdad442\",\n                    driver: {\n                        related: \"http://localhost:3000/drivers/acf3ba91-8ee0-4b64-814a-52df6bdad442\"\n                    }\n                }\n            }]\n        }\n    });\n\n});","define('oxide/tests/helpers/ajax-mock.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - helpers');\n  test('helpers/ajax-mock.js should pass jshint', function() { \n    ok(true, 'helpers/ajax-mock.js should pass jshint.'); \n  });\n\n});","define('oxide/tests/helpers/pretty-date.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - helpers');\n  test('helpers/pretty-date.js should pass jshint', function() { \n    ok(true, 'helpers/pretty-date.js should pass jshint.'); \n  });\n\n});","define('oxide/tests/helpers/resolver', ['exports', 'ember/resolver', 'oxide/config/environment'], function (exports, Resolver, config) {\n\n  'use strict';\n\n  var resolver = Resolver['default'].create();\n\n  resolver.namespace = {\n    modulePrefix: config['default'].modulePrefix,\n    podModulePrefix: config['default'].podModulePrefix\n  };\n  console.dir(resolver.namespace);\n  exports['default'] = resolver;\n\n});","define('oxide/tests/helpers/resolver.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - helpers');\n  test('helpers/resolver.js should pass jshint', function() { \n    ok(true, 'helpers/resolver.js should pass jshint.'); \n  });\n\n});","define('oxide/tests/helpers/round-number.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - helpers');\n  test('helpers/round-number.js should pass jshint', function() { \n    ok(true, 'helpers/round-number.js should pass jshint.'); \n  });\n\n});","define('oxide/tests/helpers/start-app', ['exports', 'ember', 'oxide/app', 'oxide/config/environment', 'oxide/tests/helpers/ajax-mock'], function (exports, Ember, Application, config) {\n\n    'use strict';\n\n\n\n    exports['default'] = startApp;\n    function startApp(attrs, assert) {\n        var application;\n        var attributes = Ember['default'].merge({}, config['default'].APP);\n\n        attributes = Ember['default'].merge(attributes, attrs); // use defaults, but you can override;\n\n        Ember['default'].run(function () {\n            application = Application['default'].create(attributes);\n            application.setupForTesting();\n            application.injectTestHelpers();\n        });\n\n        return application;\n    }\n\n});","define('oxide/tests/helpers/start-app.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - helpers');\n  test('helpers/start-app.js should pass jshint', function() { \n    ok(true, 'helpers/start-app.js should pass jshint.'); \n  });\n\n});","define('oxide/tests/helpers/time-length.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - helpers');\n  test('helpers/time-length.js should pass jshint', function() { \n    ok(true, 'helpers/time-length.js should pass jshint.'); \n  });\n\n});","define('oxide/tests/initializers/nitrogen.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - initializers');\n  test('initializers/nitrogen.js should pass jshint', function() { \n    ok(true, 'initializers/nitrogen.js should pass jshint.'); \n  });\n\n});","define('oxide/tests/models/device.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - models');\n  test('models/device.js should pass jshint', function() { \n    ok(true, 'models/device.js should pass jshint.'); \n  });\n\n});","define('oxide/tests/models/driver.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - models');\n  test('models/driver.js should pass jshint', function() { \n    ok(true, 'models/driver.js should pass jshint.'); \n  });\n\n});","define('oxide/tests/models/event.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - models');\n  test('models/event.js should pass jshint', function() { \n    ok(true, 'models/event.js should pass jshint.'); \n  });\n\n});","define('oxide/tests/models/location.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - models');\n  test('models/location.js should pass jshint', function() { \n    ok(true, 'models/location.js should pass jshint.'); \n  });\n\n});","define('oxide/tests/models/trip.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - models');\n  test('models/trip.js should pass jshint', function() { \n    ok(true, 'models/trip.js should pass jshint.'); \n  });\n\n});","define('oxide/tests/models/user.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - models');\n  test('models/user.js should pass jshint', function() { \n    ok(true, 'models/user.js should pass jshint.'); \n  });\n\n});","define('oxide/tests/models/vehicle.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - models');\n  test('models/vehicle.js should pass jshint', function() { \n    ok(true, 'models/vehicle.js should pass jshint.'); \n  });\n\n});","define('oxide/tests/router.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - .');\n  test('router.js should pass jshint', function() { \n    ok(true, 'router.js should pass jshint.'); \n  });\n\n});","define('oxide/tests/routes/application.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes');\n  test('routes/application.js should pass jshint', function() { \n    ok(true, 'routes/application.js should pass jshint.'); \n  });\n\n});","define('oxide/tests/routes/dashboard.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes');\n  test('routes/dashboard.js should pass jshint', function() { \n    ok(true, 'routes/dashboard.js should pass jshint.'); \n  });\n\n});","define('oxide/tests/routes/login.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes');\n  test('routes/login.js should pass jshint', function() { \n    ok(true, 'routes/login.js should pass jshint.'); \n  });\n\n});","define('oxide/tests/serializers/application.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - serializers');\n  test('serializers/application.js should pass jshint', function() { \n    ok(true, 'serializers/application.js should pass jshint.'); \n  });\n\n});","define('oxide/tests/serializers/device.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - serializers');\n  test('serializers/device.js should pass jshint', function() { \n    ok(true, 'serializers/device.js should pass jshint.'); \n  });\n\n});","define('oxide/tests/serializers/user.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - serializers');\n  test('serializers/user.js should pass jshint', function() { \n    ok(true, 'serializers/user.js should pass jshint.'); \n  });\n\n});","define('oxide/tests/test-helper', ['oxide/tests/helpers/resolver', 'ember-qunit'], function (resolver, ember_qunit) {\n\n\t'use strict';\n\n\tember_qunit.setResolver(resolver['default']);\n\n});","define('oxide/tests/test-helper.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - .');\n  test('test-helper.js should pass jshint', function() { \n    ok(true, 'test-helper.js should pass jshint.'); \n  });\n\n});","define('oxide/tests/transforms/array.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - transforms');\n  test('transforms/array.js should pass jshint', function() { \n    ok(true, 'transforms/array.js should pass jshint.'); \n  });\n\n});","define('oxide/tests/transitions.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - .');\n  test('transitions.js should pass jshint', function() { \n    ok(true, 'transitions.js should pass jshint.'); \n  });\n\n});","define('oxide/tests/unit/adapters/device-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor(\"adapter:device\", \"DeviceAdapter\", {});\n\n  // Replace this with your real tests.\n  ember_qunit.test(\"it exists\", function (assert) {\n    var adapter = this.subject();\n    assert.ok(adapter);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['serializer:foo']\n\n});","define('oxide/tests/unit/adapters/device-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/adapters');\n  test('unit/adapters/device-test.js should pass jshint', function() { \n    ok(true, 'unit/adapters/device-test.js should pass jshint.'); \n  });\n\n});","define('oxide/tests/unit/adapters/user-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor(\"adapter:user\", \"UserAdapter\", {});\n\n  // Replace this with your real tests.\n  ember_qunit.test(\"it exists\", function (assert) {\n    var adapter = this.subject();\n    assert.ok(adapter);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['serializer:foo']\n\n});","define('oxide/tests/unit/adapters/user-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/adapters');\n  test('unit/adapters/user-test.js should pass jshint', function() { \n    ok(true, 'unit/adapters/user-test.js should pass jshint.'); \n  });\n\n});","define('oxide/tests/unit/components/cc-spinner-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForComponent(\"cc-spinner\", {});\n\n  ember_qunit.test(\"it renders\", function (assert) {\n    assert.expect(2);\n\n    // Creates the component instance\n    var component = this.subject();\n    assert.equal(component._state, \"preRender\");\n\n    // Renders the component to the page\n    this.render();\n    assert.equal(component._state, \"inDOM\");\n  });\n\n  // Specify the other units that are required for this test\n  // needs: ['component:foo', 'helper:bar']\n\n});","define('oxide/tests/unit/components/cc-spinner-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/components');\n  test('unit/components/cc-spinner-test.js should pass jshint', function() { \n    ok(true, 'unit/components/cc-spinner-test.js should pass jshint.'); \n  });\n\n});","define('oxide/tests/unit/controller/dashboard-test', ['ember', 'ember-qunit', 'oxide/tests/helpers/start-app', 'oxide/utils/nitrogen-ember-utils'], function (Ember, ember_qunit, startApp, nitrogenEmberUtils) {\n\n    'use strict';\n\n    var App, store, session, principal, user, MockMap;\n\n    ember_qunit.moduleFor(\"controller:dashboard\", {\n        needs: [\"controller:nitrogen\", \"controller:application\"],\n\n        setup: function setup() {\n            App = startApp['default'](null);\n            store = App.__container__.lookup(\"store:main\");\n            session = App.__container__.lookup(\"simple-auth-session:main\");\n            var nitroService = new window.nitrogen.Service();\n\n            // bing maps mock\n            MockMap = function (assert) {\n                // to ensure api conformance from our code to maps api\n                this.assert = assert;\n                this.options = {};\n            };\n\n            MockMap.prototype = {\n                getOptions: function getOptions() {\n                    return this.options;\n                },\n\n                setView: function setView(options) {\n                    this.assert.ok(typeof options === \"object\");\n                    this.assert.ok(typeof options.center.latitude === \"number\");\n                    this.assert.ok(typeof options.center.longitude === \"number\");\n                    this.assert.ok(typeof options.zoom === \"number\");\n                },\n\n                entities: {\n                    list: [],\n                    getLength: function getLength() {\n                        return 1;\n                    },\n                    push: function push(pin) {\n                        this.list.push(pin);\n                    },\n                    insert: function insert() {\n                        return true;\n                    }\n                }\n            };\n\n            nitroService.authenticate(null, function (err, nitroSession, user) {\n                principal = nitroSession.principal;\n                user = user;\n                session.set(\"principal\", principal);\n\n                Ember['default'].run(function () {\n                    user = store.createRecord(\"user\", user);\n                    user.save();\n\n                    nitrogenEmberUtils['default'].newDevice(store, principal);\n                });\n            });\n        },\n\n        teardown: function teardown() {\n            Ember['default'].run(App, App.destroy);\n            window.localStorage.clear();\n            store = null;\n        }\n\n    });\n\n    ember_qunit.test(\"it should track all cars\", function (assert) {\n        // insert assetation library to confirm we call api correctly\n        assert.expect(9);\n        window.nitrogen.assert = assert;\n        window.Microsoft.assert = assert;\n\n        var self = this;\n        var trackAllCars = App.__container__.lookup(\"controller:dashboard\").trackAllCars;\n        var loginController = App.__container__.lookup(\"controller:dashboard\");\n\n        Ember['default'].run(function () {\n            var controller = self.subject({\n                trackAllCars: (function () {\n                    var _this = this;\n\n                    assert.ok(true);\n\n                    this.store = store;\n                    this.set(\"trackAllCars\", trackAllCars);\n\n                    // observe track car mapping\n                    this.addObserver(\"trackedCars\", controller, function () {\n                        // ensure all cars tracked\n                        assert.ok(_this.get(\"trackedCars\").length === 1);\n                        store.find(\"device\").then(function (devices) {\n                            devices.forEach(function (device) {\n                                assert.ok(device.get(\"trackOnMap\"));\n                            });\n                        });\n                    });\n                    this.trackAllCars();\n                }).on(\"init\")\n            });\n        });\n    });\n\n    ember_qunit.test(\"it should toggle all cars\", function (assert) {\n        // insert assetation library to confirm we call api correctly\n        assert.expect(10);\n        window.nitrogen.assert = assert;\n        window.Microsoft.assert = assert;\n\n        var self = this;\n        var trackAllCars = App.__container__.lookup(\"controller:dashboard\").trackAllCars;\n        var loginController = App.__container__.lookup(\"controller:dashboard\");\n\n        Ember['default'].run(function () {\n            self.subject({\n                trackAllCars: (function () {\n                    var _this = this;\n\n                    // test trackAllCars called on init.\n                    assert.ok(true);\n                    var controller = this;\n                    controller.store = store;\n                    controller.set(\"trackAllCars\", trackAllCars);\n\n                    Ember['default'].run(function () {\n                        // add test observer to test if cars are actually add/removed\n                        _this.addObserver(\"trackedCars\", controller, function () {\n                            // ensure all cars tracked\n                            assert.ok(_this.get(\"trackedCars\").length === 1);\n                            store.find(\"device\").then(function (devices) {\n                                devices.forEach(function (device) {\n                                    controller.send(\"toggleCar\", device);\n                                    assert.ok(device.get(\"trackOnMap\") === false);\n                                });\n                                assert.ok(controller.get(\"trackedCars\").length === 0);\n                            });\n                        });\n\n                        // call the actual implementation\n                        controller.trackAllCars();\n                    });\n                }).on(\"init\")\n            });\n        });\n    });\n\n    ember_qunit.test(\"it should update car location when it receives a socket message\", function (assert) {\n        // insert assetation library to confirm we call api correctly\n        assert.expect(9);\n        window.nitrogen.assert = assert;\n        window.Microsoft.assert = assert;\n\n        var self = this;\n        var trackAllCars = App.__container__.lookup(\"controller:dashboard\").trackAllCars;\n        var loginController = App.__container__.lookup(\"controller:dashboard\");\n\n        Ember['default'].run(function () {\n            self.subject({\n                trackAllCars: (function () {\n                    // test trackAllCars called on init.\n                    assert.ok(true);\n\n                    var controller = this;\n                    controller.store = store;\n                    controller.set(\"trackAllCars\", trackAllCars);\n\n                    Ember['default'].run(function () {\n                        store.find(\"device\").then(function (devices) {\n                            devices.forEach(function (device) {\n                                // this id is hard coded into the nitrogen mock\n                                var mockMessage = {\n                                    from: \"abc-123\",\n                                    body: {\n                                        timestamp: new Date(Date.now() - 3000),\n                                        // tenderloin SF area...\n                                        latitude: 37.783343 + Math.random(),\n                                        longitude: -122.413207 + Math.random(),\n                                        // km/hr? mi/hr?\n                                        speed: \"25.3\"\n                                    }\n                                };\n\n                                // call the actual implementation\n                                controller.trackAllCars();\n                                Ember['default'].run(function () {\n                                    controller.send(\"handleSocketMessage\", mockMessage, \"updateCar\");\n                                    controller.addObserver(\"trackedCars\", controller, function () {\n\n                                        Ember['default'].run(function () {\n                                            store.find(\"device\", {\n                                                nitrogen_id: \"abc-123\"\n                                            }).then(function (devices) {\n                                                assert.ok(devices.content[0].get(\"gps\")[0].longitude === mockMessage.body.longitude);\n                                                assert.ok(devices.content[0].get(\"gps\")[0].latitiude === mockMessage.body.latitiude);\n                                            });\n                                        });\n                                    });\n                                });\n                            });\n                        });\n                    });\n                }).on(\"init\")\n            });\n        });\n    });\n\n    ember_qunit.test(\"it should center the map\", function (assert) {\n        // insert assetation library to confirm we call api correctly\n        assert.expect(13);\n        window.nitrogen.assert = assert;\n        window.Microsoft.assert = assert;\n\n        var self = this;\n        var trackAllCars = App.__container__.lookup(\"controller:dashboard\").trackAllCars;\n        var loginController = App.__container__.lookup(\"controller:dashboard\");\n\n        Ember['default'].run(function () {\n            self.subject({\n                trackAllCars: (function () {\n                    // test trackAllCars called on init.\n                    assert.ok(true);\n                    var controller = this;\n                    controller.store = store;\n                    controller.set(\"trackAllCars\", trackAllCars);\n\n                    Ember['default'].run(function () {\n                        var testLat = 37.783343 + Math.random();\n                        var testLon = -122.413207 + Math.random();\n                        // insert a fake map for the controller\n                        var mockMapRef = new MockMap(assert);\n                        controller.set(\"mapReference\", mockMapRef);\n                        controller.send(\"centerMap\", {\n                            latitude: testLat,\n                            longitude: testLon\n                        });\n                        // should have set lat and lon accordingly\n                        assert.ok(mockMapRef.getOptions().center.latitude === testLat);\n                        assert.ok(mockMapRef.getOptions().center.longitude === testLon);\n                    });\n                }).on(\"init\")\n            });\n        });\n    });\n\n    ember_qunit.test(\"it should center on car\", function (assert) {\n        // insert assetation library to confirm we call api correctly\n        assert.expect(13);\n        window.nitrogen.assert = assert;\n        window.Microsoft.assert = assert;\n\n        var self = this;\n        var trackAllCars = App.__container__.lookup(\"controller:dashboard\").trackAllCars;\n        var loginController = App.__container__.lookup(\"controller:dashboard\");\n\n        Ember['default'].run(function () {\n            self.subject({\n                trackAllCars: (function () {\n                    // test trackAllCars called on init.\n                    assert.ok(true);\n                    var controller = this;\n                    controller.store = store;\n                    controller.set(\"trackAllCars\", trackAllCars);\n\n                    Ember['default'].run(function () {\n                        // call the actual implementation\n                        controller.trackAllCars();\n                        // insert a fake map for the controller\n                        var mockMapRef = new MockMap(assert);\n                        controller.set(\"mapReference\", mockMapRef);\n\n                        store.find(\"device\", {\n                            nitrogen_id: \"abc-123\"\n                        }).then(function (devices) {\n                            var gps = devices.content[0].get(\"gps\");\n\n                            var firstLoc = {\n                                latitude: 37.783343 + Math.random(),\n                                longitude: -122.413207 + Math.random()\n                            };\n\n                            var secondLoc = {\n                                latitude: 37.783343 + Math.random(),\n                                longitude: -122.413207 + Math.random()\n                            };\n\n                            gps.pushObject(firstLoc);\n                            gps.pushObject(secondLoc);\n\n                            controller.send(\"centerOnCar\", devices.content[0]);\n\n                            // should have set lat and lon accordingly\n                            assert.ok(mockMapRef.getOptions().center.latitude === secondLoc.latitude);\n                            assert.ok(mockMapRef.getOptions().center.longitude === secondLoc.longitude);\n                        });\n                    });\n                }).on(\"init\")\n            });\n        });\n    });\n\n    ember_qunit.test(\"it should add a car to map\", function (assert) {\n        // insert assetation library to confirm we call api correctly\n        assert.expect(17);\n        // add asserts to our mock apis\n        window.nitrogen.assert = assert;\n        window.Microsoft.assert = assert;\n\n        var self = this;\n        var trackAllCars = App.__container__.lookup(\"controller:dashboard\").trackAllCars;\n        var loginController = App.__container__.lookup(\"controller:dashboard\");\n\n        Ember['default'].run(function () {\n            self.subject({\n                trackAllCars: (function () {\n                    // test trackAllCars called on init.\n                    assert.ok(true);\n                    var controller = this;\n                    controller.store = store;\n                    controller.set(\"trackAllCars\", trackAllCars);\n\n                    Ember['default'].run(function () {\n                        // call the actual implementation\n                        controller.trackAllCars();\n                        // insert a fake map for the controller\n                        var mockMapRef = new MockMap(assert);\n                        controller.set(\"mapReference\", mockMapRef);\n\n                        store.find(\"device\", {\n                            nitrogen_id: \"abc-123\"\n                        }).then(function (devices) {\n                            var gps = devices.content[0].get(\"gps\");\n                            var firstLoc = {\n                                latitude: 37.783343 + Math.random(),\n                                longitude: -122.413207 + Math.random()\n                            };\n                            var secondLoc = {\n                                latitude: 37.783343 + Math.random(),\n                                longitude: -122.413207 + Math.random()\n                            };\n                            gps.push(firstLoc);\n                            gps.push(secondLoc);\n                            controller.send(\"addCarToMap\", devices.content[0]);\n                        });\n                    });\n                }).on(\"init\")\n            });\n        });\n    });\n\n});","define('oxide/tests/unit/controller/dashboard-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/controller');\n  test('unit/controller/dashboard-test.js should pass jshint', function() { \n    ok(true, 'unit/controller/dashboard-test.js should pass jshint.'); \n  });\n\n});","define('oxide/tests/unit/controller/login-test', ['ember', 'ember-qunit', 'oxide/tests/helpers/start-app'], function (Ember, ember_qunit, startApp) {\n\n  'use strict';\n\n  var App, store, session;\n\n  ember_qunit.moduleFor(\"controller:login\", {\n    needs: [\"controller:application\"],\n\n    setup: function setup() {\n      App = startApp['default'](null);\n      store = App.__container__.lookup(\"store:main\");\n      session = App.__container__.lookup(\"simple-auth-session:main\");\n    },\n    teardown: function teardown() {\n      Ember['default'].run(App, App.destroy);\n      window.localStorage.clear();\n      store = null;\n    }\n\n  });\n\n  ember_qunit.test(\"it should login and toggle the loading state\", function (assert) {\n    // insert assetation library to confirm we call api correctly\n    window.nitrogen.assert = assert;\n    assert.expect(6);\n    var controller = this.subject();\n    controller.store = store;\n    var loggingIn = false;\n    controller.addObserver(\"loading\", controller, function () {\n      if (!loggingIn) {\n        assert.ok(controller.get(\"loading\"));\n        loggingIn = true;\n      } else {\n        assert.ok(controller.get(\"loading\") === false);\n      }\n    });\n    Ember['default'].run(function () {\n      controller.set(\"identification\", \"testuser\");\n      controller.set(\"password\", \"testpassword\");\n      assert.ok(controller.get(\"loading\") === false);\n      controller.set(\"session\", session);\n      controller.send(\"authenticate\");\n    });\n  });\n\n});","define('oxide/tests/unit/controller/login-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/controller');\n  test('unit/controller/login-test.js should pass jshint', function() { \n    ok(true, 'unit/controller/login-test.js should pass jshint.'); \n  });\n\n});","define('oxide/tests/unit/helpers/time-length-test', ['oxide/helpers/time-length', 'qunit'], function (time_length, qunit) {\n\n    'use strict';\n\n    qunit.module(\"TimeLengthHelper\");\n\n    // Replace this with your real tests.\n    qunit.test(\"it works\", function (assert) {\n        var result = time_length.timeLength([\"2015-05-26T17:06:14.407Z\", \"2015-05-25T17:06:14.407Z\"]);\n\n        assert.equal(result, \"a day\");\n    });\n\n});","define('oxide/tests/unit/helpers/time-length-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/helpers');\n  test('unit/helpers/time-length-test.js should pass jshint', function() { \n    ok(true, 'unit/helpers/time-length-test.js should pass jshint.'); \n  });\n\n});","define('oxide/tests/unit/models/driver-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForModel(\"driver\", {\n    // Specify the other units that are required for this test.\n    needs: []\n  });\n\n  ember_qunit.test(\"it exists\", function (assert) {\n    var model = this.subject();\n\n    // var store = this.store();\n    assert.ok(!!model);\n  });\n\n});","define('oxide/tests/unit/models/driver-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/models');\n  test('unit/models/driver-test.js should pass jshint', function() { \n    ok(true, 'unit/models/driver-test.js should pass jshint.'); \n  });\n\n});","define('oxide/tests/unit/models/event-test', function () {\n\n\t'use strict';\n\n\t// import {\n\t//   moduleForModel,\n\t//   test\n\t// } from 'ember-qunit';\n\n\t// moduleForModel('event', {\n\t//   // Specify the other units that are required for this test.\n\t//   needs: []\n\t// });\n\n\t// test('it exists', function(assert) {\n\t//   var model = this.subject();\n\t//   // var store = this.store();\n\t//   assert.ok(!!model);\n\t// });\n\n});","define('oxide/tests/unit/models/event-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/models');\n  test('unit/models/event-test.js should pass jshint', function() { \n    ok(true, 'unit/models/event-test.js should pass jshint.'); \n  });\n\n});","define('oxide/tests/unit/models/location-test', function () {\n\n\t'use strict';\n\n\t// import {\n\t//   moduleForModel,\n\t//   test\n\t// } from 'ember-qunit';\n\n\t// moduleForModel('location', {\n\t//   // Specify the other units that are required for this test.\n\t//   needs: []\n\t// });\n\n\t// test('it exists', function(assert) {\n\t//   var model = this.subject();\n\t//   // var store = this.store();\n\t//   assert.ok(!!model);\n\t// });\n\n});","define('oxide/tests/unit/models/location-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/models');\n  test('unit/models/location-test.js should pass jshint', function() { \n    ok(true, 'unit/models/location-test.js should pass jshint.'); \n  });\n\n});","define('oxide/tests/unit/models/vehicle-test', ['ember', 'ember-qunit', 'oxide/tests/helpers/start-app'], function (Ember, ember_qunit, startApp) {\n\n  'use strict';\n\n  /* global start */\n  /* global stop */\n  var App, store, session;\n\n  ember_qunit.moduleFor(\"model:vehicle\", {\n    needs: [\"model:driver\", \"model:trip\", \"model:event\"],\n\n    setup: function setup() {\n      App = startApp['default'](null);\n      store = App.__container__.lookup(\"store:main\");\n      session = App.__container__.lookup(\"simple-auth-session:main\");\n    },\n    teardown: function teardown() {\n      Ember['default'].run(App, App.destroy);\n      window.localStorage.clear();\n      store = null;\n    }\n\n  });\n  ember_qunit.test(\"it returns all vehicles\", function (assert) {\n    assert.expect(3);\n\n    Ember['default'].run(function () {\n      stop();\n      store.find(\"vehicle\").then(function (vehicles) {\n        vehicles.forEach(function (vehicle) {\n          assert.ok(vehicle);\n          vehicle.get(\"trips\").then(function (trips) {\n            trips.forEach(function (trip) {\n              assert.ok(trip);\n              trip.get(\"driver\").then(function (driver) {\n                assert.ok(typeof driver.get(\"name\") === \"string\");\n                start();\n              }, function (err) {\n                console.log(err.stack);\n                start();\n              });\n            });\n          }, function (err) {\n            console.error(err.stack);\n            start();\n          });\n        }, function (err) {\n          console.error(err.stack);\n          start();\n        });\n      });\n    });\n  });\n\n  ember_qunit.test(\"it returns vehicle with specified id\", function (assert) {\n    assert.expect(29);\n    Ember['default'].run(function () {\n\n      stop();\n      store.find(\"vehicle\", \"553ac59934dff597a9708c71\").then(function (vehicle) {\n        assert.ok(vehicle);\n        vehicle.get(\"trips\").forEach(function (trip) {\n          trip.get(\"tripEvents\").then(function (events) {\n            events.forEach(function (event) {\n              assert.ok(event.get(\"eventType\") && typeof event.get(\"eventType\") === \"string\");\n              assert.ok(event.get(\"timestamp\") && typeof event.get(\"timestamp\") === \"string\");\n              assert.ok(event.get(\"speed\") && typeof event.get(\"speed\") === \"number\");\n              assert.ok(typeof event.get(\"location\") === \"object\");\n              assert.ok(typeof event.get(\"trip\") === \"object\");\n              assert.ok(event.get(\"location\").get(\"latitude\") && typeof event.get(\"location\").get(\"latitude\") === \"number\");\n              assert.ok(event.get(\"location\").get(\"longitude\") && typeof event.get(\"location\").get(\"longitude\") === \"number\");\n            });\n          });\n        });\n        start();\n      });\n    });\n  });\n\n});","define('oxide/tests/unit/models/vehicle-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/models');\n  test('unit/models/vehicle-test.js should pass jshint', function() { \n    ok(true, 'unit/models/vehicle-test.js should pass jshint.'); \n  });\n\n});","define('oxide/tests/unit/views/application-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor(\"view:application\");\n\n  // Replace this with your real tests.\n  ember_qunit.test(\"it exists\", function (assert) {\n    var view = this.subject();\n    assert.ok(view);\n  });\n\n});","define('oxide/tests/unit/views/application-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/views');\n  test('unit/views/application-test.js should pass jshint', function() { \n    ok(true, 'unit/views/application-test.js should pass jshint.'); \n  });\n\n});","define('oxide/tests/utils/mobile.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - utils');\n  test('utils/mobile.js should pass jshint', function() { \n    ok(true, 'utils/mobile.js should pass jshint.'); \n  });\n\n});","define('oxide/tests/utils/nitrogen-ember-utils.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - utils');\n  test('utils/nitrogen-ember-utils.js should pass jshint', function() { \n    ok(true, 'utils/nitrogen-ember-utils.js should pass jshint.'); \n  });\n\n});","define('oxide/tests/views/application.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - views');\n  test('views/application.js should pass jshint', function() { \n    ok(true, 'views/application.js should pass jshint.'); \n  });\n\n});","define('oxide/tests/views/settings.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - views');\n  test('views/settings.js should pass jshint', function() { \n    ok(true, 'views/settings.js should pass jshint.'); \n  });\n\n});","define('oxide/transforms/array', ['exports', 'ember', 'ember-data'], function (exports, Ember, DS) {\n\n    'use strict';\n\n    exports['default'] = DS['default'].Transform.extend({\n        deserialize: function deserialize(value) {\n            if (Ember['default'].isArray(value)) {\n                return Ember['default'].A(value);\n            } else {\n                return Ember['default'].A();\n            }\n        },\n        serialize: function serialize(value) {\n            if (Ember['default'].isArray(value)) {\n                return Ember['default'].A(value);\n            } else {\n                return Ember['default'].A();\n            }\n        }\n    });\n\n});","define('oxide/transitions', ['exports'], function (exports) {\n\n    'use strict';\n\n    var transition = function transition() {\n        this.transition(this.fromRoute(\"login\"), this.toRoute(\"dashboard\"), this.use(\"toLeft\"), this.reverse(\"toRight\"));\n    };\n\n    exports['default'] = transition;\n\n});","define('oxide/transitions/cross-fade', ['exports', 'liquid-fire'], function (exports, liquid_fire) {\n\n  'use strict';\n\n\n  exports['default'] = crossFade;\n  // BEGIN-SNIPPET cross-fade-definition\n  function crossFade() {\n    var opts = arguments[0] === undefined ? {} : arguments[0];\n\n    liquid_fire.stop(this.oldElement);\n    return liquid_fire.Promise.all([liquid_fire.animate(this.oldElement, { opacity: 0 }, opts), liquid_fire.animate(this.newElement, { opacity: [opts.maxOpacity || 1, 0] }, opts)]);\n  } // END-SNIPPET\n\n});","define('oxide/transitions/default', ['exports', 'liquid-fire'], function (exports, liquid_fire) {\n\n  'use strict';\n\n\n\n  // This is what we run when no animation is asked for. It just sets\n  // the newly-added element to visible (because we always start them\n  // out invisible so that transitions can control their initial\n  // appearance).\n  exports['default'] = defaultTransition;\n  function defaultTransition() {\n    if (this.newElement) {\n      this.newElement.css({ visibility: \"\" });\n    }\n    return liquid_fire.Promise.resolve();\n  }\n\n});","define('oxide/transitions/explode', ['exports', 'ember', 'liquid-fire'], function (exports, Ember, liquid_fire) {\n\n  'use strict';\n\n\n\n  // Explode is not, by itself, an animation. It exists to pull apart\n  // other elements so that each of the pieces can be targeted by\n  // animations.\n\n  exports['default'] = explode;\n\n  function explode() {\n    var _this = this;\n\n    for (var _len = arguments.length, pieces = Array(_len), _key = 0; _key < _len; _key++) {\n      pieces[_key] = arguments[_key];\n    }\n\n    var sawBackgroundPiece = false;\n    var promises = pieces.map(function (piece) {\n      if (piece.matchBy) {\n        return matchAndExplode(_this, piece);\n      } else if (piece.pick || piece.pickOld || piece.pickNew) {\n        return explodePiece(_this, piece);\n      } else {\n        sawBackgroundPiece = true;\n        return runAnimation(_this, piece);\n      }\n    });\n    if (!sawBackgroundPiece) {\n      if (this.newElement) {\n        this.newElement.css({ visibility: \"\" });\n      }\n      if (this.oldElement) {\n        this.oldElement.css({ visibility: \"hidden\" });\n      }\n    }\n    return liquid_fire.Promise.all(promises);\n  }\n\n  function explodePiece(context, piece) {\n    var childContext = Ember['default'].copy(context);\n    var selectors = [piece.pickOld || piece.pick, piece.pickNew || piece.pick];\n    var cleanupOld, cleanupNew;\n\n    if (selectors[0] || selectors[1]) {\n      cleanupOld = _explodePart(context, \"oldElement\", childContext, selectors[0]);\n      cleanupNew = _explodePart(context, \"newElement\", childContext, selectors[1]);\n      if (!cleanupOld && !cleanupNew) {\n        return liquid_fire.Promise.resolve();\n      }\n    }\n\n    return runAnimation(childContext, piece)[\"finally\"](function () {\n      if (cleanupOld) {\n        cleanupOld();\n      }\n      if (cleanupNew) {\n        cleanupNew();\n      }\n    });\n  }\n\n  function _explodePart(context, field, childContext, selector) {\n    var child, childOffset, width, height, newChild;\n    var elt = context[field];\n    childContext[field] = null;\n    if (elt && selector) {\n      child = elt.find(selector);\n      if (child.length > 0) {\n        childOffset = child.offset();\n        width = child.outerWidth();\n        height = child.outerHeight();\n        newChild = child.clone();\n\n        // Hide the original element\n        child.css({ visibility: \"hidden\" });\n\n        // If the original element's parent was hidden, hide our clone\n        // too.\n        if (elt.css(\"visibility\") === \"hidden\") {\n          newChild.css({ visibility: \"hidden\" });\n        }\n        newChild.appendTo(elt.parent());\n        newChild.outerWidth(width);\n        newChild.outerHeight(height);\n        var newParentOffset = newChild.offsetParent().offset();\n        newChild.css({\n          position: \"absolute\",\n          top: childOffset.top - newParentOffset.top,\n          left: childOffset.left - newParentOffset.left,\n          margin: 0\n        });\n\n        // Pass the clone to the next animation\n        childContext[field] = newChild;\n        return function cleanup() {\n          newChild.remove();\n          child.css({ visibility: \"\" });\n        };\n      }\n    }\n  }\n\n  function animationFor(context, piece) {\n    var name, args, func;\n    if (!piece.use) {\n      throw new Error(\"every argument to the 'explode' animation must include a followup animation to 'use'\");\n    }\n    if (Ember['default'].isArray(piece.use)) {\n      name = piece.use[0];\n      args = piece.use.slice(1);\n    } else {\n      name = piece.use;\n      args = [];\n    }\n    if (typeof name === \"function\") {\n      func = name;\n    } else {\n      func = context.lookup(name);\n    }\n    return function () {\n      return liquid_fire.Promise.resolve(func.apply(this, args));\n    };\n  }\n\n  function runAnimation(context, piece) {\n    return new liquid_fire.Promise(function (resolve, reject) {\n      animationFor(context, piece).apply(context).then(resolve, reject);\n    });\n  }\n\n  function matchAndExplode(context, piece) {\n    if (!context.oldElement) {\n      return liquid_fire.Promise.resolve();\n    }\n\n    var hits = Ember['default'].A(context.oldElement.find(\"[\" + piece.matchBy + \"]\").toArray());\n    return liquid_fire.Promise.all(hits.map(function (elt) {\n      return explodePiece(context, {\n        pick: \"[\" + piece.matchBy + \"=\" + Ember['default'].$(elt).attr(piece.matchBy) + \"]\",\n        use: piece.use\n      });\n    }));\n  }\n\n});","define('oxide/transitions/fade', ['exports', 'liquid-fire'], function (exports, liquid_fire) {\n\n  'use strict';\n\n\n  exports['default'] = fade;\n\n  // BEGIN-SNIPPET fade-definition\n  function fade() {\n    var _this = this;\n\n    var opts = arguments[0] === undefined ? {} : arguments[0];\n\n    var firstStep;\n    var outOpts = opts;\n    var fadingElement = findFadingElement(this);\n\n    if (fadingElement) {\n      // We still have some older version that is in the process of\n      // fading out, so out first step is waiting for it to finish.\n      firstStep = liquid_fire.finish(fadingElement, \"fade-out\");\n    } else {\n      if (liquid_fire.isAnimating(this.oldElement, \"fade-in\")) {\n        // if the previous view is partially faded in, scale its\n        // fade-out duration appropriately.\n        outOpts = { duration: liquid_fire.timeSpent(this.oldElement, \"fade-in\") };\n      }\n      liquid_fire.stop(this.oldElement);\n      firstStep = liquid_fire.animate(this.oldElement, { opacity: 0 }, outOpts, \"fade-out\");\n    }\n    return firstStep.then(function () {\n      return liquid_fire.animate(_this.newElement, { opacity: [opts.maxOpacity || 1, 0] }, opts, \"fade-in\");\n    });\n  }\n\n  function findFadingElement(context) {\n    for (var i = 0; i < context.older.length; i++) {\n      var entry = context.older[i];\n      if (liquid_fire.isAnimating(entry.element, \"fade-out\")) {\n        return entry.element;\n      }\n    }\n    if (liquid_fire.isAnimating(context.oldElement, \"fade-out\")) {\n      return context.oldElement;\n    }\n  }\n  // END-SNIPPET\n\n});","define('oxide/transitions/flex-grow', ['exports', 'liquid-fire'], function (exports, liquid_fire) {\n\n  'use strict';\n\n\n  exports['default'] = flexGrow;\n  function flexGrow(opts) {\n    liquid_fire.stop(this.oldElement);\n    return liquid_fire.Promise.all([liquid_fire.animate(this.oldElement, { \"flex-grow\": 0 }, opts), liquid_fire.animate(this.newElement, { \"flex-grow\": [1, 0] }, opts)]);\n  }\n\n});","define('oxide/transitions/fly-to', ['exports', 'liquid-fire'], function (exports, liquid_fire) {\n\n  'use strict';\n\n\n\n  exports['default'] = flyTo;\n  function flyTo() {\n    var _this = this;\n\n    var opts = arguments[0] === undefined ? {} : arguments[0];\n\n    if (!this.newElement) {\n      return liquid_fire.Promise.resolve();\n    } else if (!this.oldElement) {\n      this.newElement.css({ visibility: \"\" });\n      return liquid_fire.Promise.resolve();\n    }\n\n    var oldOffset = this.oldElement.offset();\n    var newOffset = this.newElement.offset();\n\n    var motion = {\n      translateX: newOffset.left - oldOffset.left,\n      translateY: newOffset.top - oldOffset.top,\n      outerWidth: this.newElement.outerWidth(),\n      outerHeight: this.newElement.outerHeight()\n    };\n\n    this.newElement.css({ visibility: \"hidden\" });\n    return liquid_fire.animate(this.oldElement, motion, opts).then(function () {\n      _this.newElement.css({ visibility: \"\" });\n    });\n  }\n\n});","define('oxide/transitions/move-over', ['exports', 'liquid-fire'], function (exports, liquid_fire) {\n\n  'use strict';\n\n\n\n  exports['default'] = moveOver;\n\n  function moveOver(dimension, direction, opts) {\n    var _this = this;\n\n    var oldParams = {},\n        newParams = {},\n        firstStep,\n        property,\n        measure;\n\n    if (dimension.toLowerCase() === \"x\") {\n      property = \"translateX\";\n      measure = \"width\";\n    } else {\n      property = \"translateY\";\n      measure = \"height\";\n    }\n\n    if (liquid_fire.isAnimating(this.oldElement, \"moving-in\")) {\n      firstStep = liquid_fire.finish(this.oldElement, \"moving-in\");\n    } else {\n      liquid_fire.stop(this.oldElement);\n      firstStep = liquid_fire.Promise.resolve();\n    }\n\n    return firstStep.then(function () {\n      var bigger = biggestSize(_this, measure);\n      oldParams[property] = bigger * direction + \"px\";\n      newParams[property] = [\"0px\", -1 * bigger * direction + \"px\"];\n\n      return liquid_fire.Promise.all([liquid_fire.animate(_this.oldElement, oldParams, opts), liquid_fire.animate(_this.newElement, newParams, opts, \"moving-in\")]);\n    });\n  }\n\n  function biggestSize(context, dimension) {\n    var sizes = [];\n    if (context.newElement) {\n      sizes.push(parseInt(context.newElement.css(dimension), 10));\n      sizes.push(parseInt(context.newElement.parent().css(dimension), 10));\n    }\n    if (context.oldElement) {\n      sizes.push(parseInt(context.oldElement.css(dimension), 10));\n      sizes.push(parseInt(context.oldElement.parent().css(dimension), 10));\n    }\n    return Math.max.apply(null, sizes);\n  }\n\n});","define('oxide/transitions/scale', ['exports', 'liquid-fire'], function (exports, liquid_fire) {\n\n  'use strict';\n\n\n\n  exports['default'] = scale;\n  function scale() {\n    var _this = this;\n\n    var opts = arguments[0] === undefined ? {} : arguments[0];\n\n    return liquid_fire.animate(this.oldElement, { scale: [0.2, 1] }, opts).then(function () {\n      return liquid_fire.animate(_this.newElement, { scale: [1, 0.2] }, opts);\n    });\n  }\n\n});","define('oxide/transitions/scroll-then', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = function (nextTransitionName, options) {\n    var _this = this;\n\n    for (var _len = arguments.length, rest = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n      rest[_key - 2] = arguments[_key];\n    }\n\n    Ember['default'].assert(\"You must provide a transition name as the first argument to scrollThen. Example: this.use('scrollThen', 'toLeft')\", \"string\" === typeof nextTransitionName);\n\n    var el = document.getElementsByTagName(\"html\");\n    var nextTransition = this.lookup(nextTransitionName);\n    if (!options) {\n      options = {};\n    }\n\n    Ember['default'].assert(\"The second argument to scrollThen is passed to Velocity's scroll function and must be an object\", \"object\" === typeof options);\n\n    // set scroll options via: this.use('scrollThen', 'ToLeft', {easing: 'spring'})\n    options = Ember['default'].merge({ duration: 500, offset: 0 }, options);\n\n    // additional args can be passed through after the scroll options object\n    // like so: this.use('scrollThen', 'moveOver', {duration: 100}, 'x', -1);\n\n    return window.$.Velocity(el, \"scroll\", options).then(function () {\n      nextTransition.apply(_this, rest);\n    });\n  };\n\n});","define('oxide/transitions/to-down', ['exports', 'oxide/transitions/move-over'], function (exports, moveOver) {\n\n  'use strict';\n\n  exports['default'] = function (opts) {\n    return moveOver['default'].call(this, \"y\", 1, opts);\n  };\n\n});","define('oxide/transitions/to-left', ['exports', 'oxide/transitions/move-over'], function (exports, moveOver) {\n\n  'use strict';\n\n  exports['default'] = function (opts) {\n    return moveOver['default'].call(this, \"x\", -1, opts);\n  };\n\n});","define('oxide/transitions/to-right', ['exports', 'oxide/transitions/move-over'], function (exports, moveOver) {\n\n  'use strict';\n\n  exports['default'] = function (opts) {\n    return moveOver['default'].call(this, \"x\", 1, opts);\n  };\n\n});","define('oxide/transitions/to-up', ['exports', 'oxide/transitions/move-over'], function (exports, moveOver) {\n\n  'use strict';\n\n  exports['default'] = function (opts) {\n    return moveOver['default'].call(this, \"y\", -1, opts);\n  };\n\n});","define('oxide/utils/mobile', ['exports'], function (exports) {\n\n\t'use strict';\n\n\tvar mobileQuery = matchMedia(\"(max-width: 900px)\");\n\n\texports['default'] = mobileQuery;\n\n});","define('oxide/utils/nitrogen-ember-utils', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    var nitrogenEmberUtils = {\n        /**\n         * Find or create a user in Ember Data,\n         * sourcing information from a Nitrogen\n         * principal.\n         * @param  {Ember Data store} store        [Ember Data Store to be used]\n         * @param  {session} session               [Session object]\n         * @param  {Nitrogen principal} principal  [Nitrogen principal, source of information]\n         * @return {promise}\n         */\n        findOrCreateUser: function findOrCreateUser(store, session, principal) {\n            var self = this;\n\n            if (!store || !session || !principal) {\n                return console.error(\"Called Ember Util findOrCreateUser with missing paramters:\", arguments);\n            }\n\n            return new Ember['default'].RSVP.Promise(function (resolve) {\n                store.find(\"user\", {\n                    id: \"me\"\n                }).then(function (foundUser) {\n                    if (foundUser.content.length > 0) {\n                        foundUser = foundUser.content[0];\n\n                        self.updateUser(foundUser, principal, session).then(function (result) {\n                            resolve(result);\n                        });\n                    }\n                }, function () {\n                    var user = store.createRecord(\"user\", {\n                        id: \"me\"\n                    });\n\n                    self.updateUser(user, principal, session).then(function (result) {\n                        resolve(result);\n                    });\n                });\n            });\n        },\n\n        /**\n         * Updates a user record with information received\n         * from Nitrogen\n         * @param  {Ember Data record (user)} user       [Record for the user that shall be modified]\n         * @param  {Nitrogen principal} principal        [Nitrogen principal, the source of information]\n         * @param  {session} session                     [Current Session]\n         * @return {promise}                             [Ember Data promise (save)]\n         */\n        updateUser: function updateUser(user, principal, session) {\n            if (!user || !principal || !session) {\n                return console.error(\"Called Ember Util updateUser with missing paramters:\", arguments);\n            }\n\n            user.set(\"name\", principal.name);\n            user.set(\"email\", principal.email);\n            user.set(\"api_key\", principal.api_key);\n            user.set(\"created_at\", principal.created_at);\n            user.set(\"nitrogen_id\", principal.id);\n            user.set(\"last_connection\", principal.last_connection);\n            user.set(\"last_ip\", principal.last_ip);\n            user.set(\"nickname\", principal.nickname);\n            user.set(\"password\", session.principal.password);\n            user.set(\"updated_at\", principal.updated_at);\n\n            return user.save();\n        },\n\n        /**\n         * Updates a device record with information received\n         * from Nitrogenm\n         * @param  {Ember data record (device)} device [Device to update]\n         * @param  {Nitrogen principal} principal      [Nitrogen principal to use as source of information]\n         * @return {promise}                           [Ember Data promise (save)]\n         */\n        updateDevice: function updateDevice(device, principal) {\n            if (!device || !principal) {\n                return console.error(\"Called Ember Util updateDevice with missing paramters:\", arguments);\n            }\n\n            device.set(\"nitrogen_id\", principal.id);\n            device.set(\"name\", principal.name);\n            device.set(\"lastUpdated\", principal.updated_at);\n            device.set(\"last_connection\", principal.last_connection);\n            device.set(\"last_ip\", principal.last_ip);\n            device.set(\"nickname\", principal.nickname);\n            device.set(\"updated_at\", principal.updated_at);\n            device.set(\"created_at\", principal.created_at);\n            device.set(\"tags\", principal.tags);\n            device.set(\"type\", principal.type);\n            device.set(\"location\", principal.location);\n            device.set(\"gps\", []);\n\n            return device.save();\n        },\n\n        /**\n         * Create a new device using a Nitrogen\n         * principal as source\n         * @param  {Ember data store} store       [Store to use]\n         * @param  {Nitrogen principal} principal [Nitrogen principal to use as source of information]\n         * @return {promise}                      [Ember Data promise (save)]\n         */\n        newDevice: (function (_newDevice) {\n            var _newDeviceWrapper = function newDevice(_x, _x2) {\n                return _newDevice.apply(this, arguments);\n            };\n\n            _newDeviceWrapper.toString = function () {\n                return _newDevice.toString();\n            };\n\n            return _newDeviceWrapper;\n        })(function (store, principal) {\n            if (!store || !principal) {\n                return console.error(\"Called Ember Util newDevice with missing paramters:\", store, principal);\n            }\n\n            var newDevice = store.createRecord(\"device\");\n\n            return this.updateDevice(newDevice, principal);\n        }),\n\n        /**\n         * Remove locally stored devices for a principal\n         * @param  {array} principals            [Principals to lookup (and remove)]\n         * @param  {Ember data store} store      [Store to use]\n         * @return {promise}\n         */\n        removeDevices: function removeDevices(principals, store) {\n            if (!store || !principals) {\n                return console.error(\"Called Ember Util removeDevices with missing paramters:\", arguments);\n            }\n\n            return new Ember['default'].RSVP.Promise(function (resolve) {\n                var principalIds = [];\n\n                for (var i = 0; i < principals.length; i += 1) {\n                    principalIds.push(principals[i].id);\n                }\n\n                store.find(\"device\").then(function (foundDevices) {\n                    if (foundDevices.content.length < 1) {\n                        return resolve();\n                    }\n\n                    for (var i = 0; i < foundDevices.content.length; i += 1) {\n                        if (principalIds.indexOf(foundDevices.content[i].get(\"nitrogen_id\")) === -1) {\n                            foundDevices.content[i].destroyRecord();\n                        }\n                    }\n\n                    resolve();\n                });\n            });\n        },\n\n        /**\n         * Lookup a locally stored device for a Nitrogen principal\n         * @param  {Nitrogen principal} principal  [Nitrogen principal to lookup]\n         * @param  {Ember data store} store        [Store to use]\n         * @return {promise}\n         */\n        lookupDevice: function lookupDevice(principal, store) {\n            var self = this;\n\n            if (!store || !principal) {\n                return console.error(\"Called Ember Util lookupDevice with missing paramters:\", arguments);\n            }\n\n            return new Ember['default'].RSVP.Promise(function (resolve) {\n                store.find(\"device\", {\n                    nitrogen_id: principal.id\n                }).then(function (foundDevices) {\n                    if (foundDevices.get(\"length\") === 0) {\n                        return self.newDevice(store, principal);\n                    }\n\n                    if (foundDevices.get(\"length\") > 1) {\n                        console.log(\"WARNING: Multiple devices in store for one Nitrogen id!\");\n                        console.log(\"Number of devices in store for this id: \" + foundDevices.get(\"length\"));\n                    }\n\n                    foundDevices.map(function (foundDevice) {\n                        self.updateDevice(foundDevice, principal);\n                    });\n\n                    resolve();\n                }, function () {\n                    resolve(self.newDevice(store, principal));\n                });\n            });\n        },\n\n        /**\n         * Update or create local devices to match the devices\n         * Nitrogen has for a single user\n         * @param  {Ember Data store} store   [Store to use]\n         * @param  {session} session          [Session to use]\n         * @return {promise}\n         */\n        updateOrCreateDevices: function updateOrCreateDevices(store, session) {\n            var self = this;\n\n            if (!store || !session) {\n                return console.error(\"Called Ember Util updateOrCreateDevices with missing paramters:\", arguments);\n            }\n\n            return new Ember['default'].RSVP.Promise(function (resolve, reject) {\n                nitrogen.Principal.find(session, {\n                    type: \"device\"\n                }, {\n                    skip: 0,\n                    sort: {\n                        last_connection: 1\n                    }\n                }, function (error, principals) {\n                    var principalLookup;\n\n                    if (error) {\n                        console.log(error);\n                        reject(error);\n                    }\n\n                    self.removeDevices(principals, store).then(function () {\n                        principalLookup = principals.map(function (principal) {\n                            return self.lookupDevice(principal, store);\n                        });\n\n                        Ember['default'].RSVP.all(principalLookup).then(function () {\n                            resolve();\n                        })[\"catch\"](function (error) {\n                            reject(error);\n                        });\n                    });\n                });\n            });\n        }\n    };\n\n    exports['default'] = nitrogenEmberUtils;\n\n});","define('oxide/views/application', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].View.extend({\n        removeLoader: (function () {\n            var $loader = $(\".background-loader\");\n\n            if ($loader.length) {\n                $loader.remove();\n            }\n        }).on(\"didInsertElement\")\n    });\n\n});","define('oxide/views/settings', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].View.extend({\n        showConfigString: false,\n\n        actions: {\n            toggleShowConfig: function toggleShowConfig() {\n                this.toggleProperty(\"showConfigString\");\n            }\n        }\n    });\n\n});","/* jshint ignore:start */\n\n/* jshint ignore:end */\n","/* jshint ignore:start */\n\ndefine('oxide/config/environment', ['ember'], function(Ember) {\n  var prefix = 'oxide';\n/* jshint ignore:start */\n\ntry {\n  var metaName = prefix + '/config/environment';\n  var rawConfig = Ember['default'].$('meta[name=\"' + metaName + '\"]').attr('content');\n  var config = JSON.parse(unescape(rawConfig));\n\n  return { 'default': config };\n}\ncatch(err) {\n  throw new Error('Could not read config from meta tag with name \"' + metaName + '\".');\n}\n\n/* jshint ignore:end */\n\n});\n\nif (runningTests) {\n  require(\"oxide/tests/test-helper\");\n} else {\n  require(\"oxide/app\")[\"default\"].create({\"nitrogen\":{\"host\":\"api.nitrogen.io\",\"protocol\":\"https\",\"http_port\":443,\"log_levels\":[\"warn\",\"error\"]},\"API_HOST\":\"http://connected-car-api.azurewebsites.net\",\"name\":\"oxide\",\"version\":\"0.0.0.7b45bdda\"});\n}\n\n/* jshint ignore:end */\n"],"names":[],"mappings":"AAAA;AACA;AACA;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdtHA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdrnrcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxCA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdjncxrhjvzaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxzzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxlQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5brPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC9EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjlJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC/CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;","file":"oxide.js"}